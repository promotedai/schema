load("@rules_proto//proto:defs.bzl", "proto_library")
load("@rules_proto_grpc_java//:defs.bzl", "java_proto_compile", "java_proto_library")
load("@rules_proto_grpc_python//:defs.bzl", "python_proto_library")

proto_library(
    name = "common_proto",
    srcs = [
        "common.proto",
        "retained_user.proto",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@protobuf//:struct_proto",
    ],
)

java_proto_library(
    name = "common_java_proto",
    protos = [":common_proto"],
    visibility = ["//visibility:public"],
)

# This is similar to the above java_proto_library but generates a .srcjar
# instead of a .jar, meaning we can get the source files from it.
java_proto_compile(
    name = "common_java_proto_srcjar",
    protos = [":common_proto"],
    visibility = ["//visibility:public"],
)

python_proto_library(
    name = "common_py_proto",
    protos = [":common_proto"],
    visibility = ["//visibility:public"],
)
