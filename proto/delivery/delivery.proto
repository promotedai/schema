syntax = "proto3";
package delivery;

option java_multiple_files = true;
option java_package = "ai.promoted.proto.delivery";
option java_outer_classname = "Delivery";
option go_package = "github.com/promotedai/schema/generated/go/proto/delivery";
option csharp_namespace = "Promoted.Delivery";

import "google/protobuf/struct.proto";
import "proto/common/common.proto";

// Represents a Request for Insertions (Content).
// Can be used to log existing ranking (not Promoted) or Promoted's Delivery
// API requests.
//
// Next ID = 23.
message Request {

  // Optional.  If not set, set by API servers.
  // If not set, API server uses LogRequest.platform_id.
  uint64 platform_id = 1;

  // Optional.  Must be set on LogRequest or here.
  common.UserInfo user_info = 2;

  // Optional.  If not set, set by API servers.
  // If not set, API server uses LogRequest.timing.
  common.Timing timing = 3;

  // Optional.  If not set, API server uses LogRequest.client_info.
  common.ClientInfo client_info = 4;

  // Optional. Information about the user's device.
  common.Device device = 18;

  reserved 5; // Reserving fields for future common fields.

  // Optional.  Primary key.
  // Delivery sets this automatically. For details, see
  // https://github.com/promotedai/schema#setting-primary-keys
  string request_id = 6;

  // Required.
  string view_id = 7;

  // Required.
  string auto_view_id = 19;

  // Optional.
  string session_id = 8;

  // Optional.
  // An ID indicating the client's version of a request_id.  This field
  // matters when a single Request from the client could cause multiple
  // request executions (e.g. backups from retries or timeouts).  Each of those
  // request executions should have separate request_ids.
  // This should be a UUID.  If not set on a Request, the SDKs or Promoted
  // servers will set it.
  string client_request_id = 14;

  // Optional.
  UseCase use_case = 9;

  // Optional.
  string search_query = 10;

  reserved 15;

  // Optional. Set to request a specific "page" of results.
  Paging paging = 17;

  // Optional.
  // If set in Delivery API, Promoted will re-rank this list of Content.
  // This list can be used to pass in a list of Content (or Content IDs).
  // If set in Metrics API, Promoted will separate this list of Insertions
  // into separate log records.
  repeated Insertion insertion = 11;

  // Optional. Used to produce smaller requests alongside JSON serialization.
  // An alternative representation of the `insertion` field. For example,
  //   insertion_matrix_headers: [a, b.c]
  //   insertion_matrix: [1, 3.0]
  // becomes
  //   insertion: {
  //     a: 1,
  //     b: {
  //       c: 3.0
  //     }
  //   }
  // If present, these fields override `insertion`.
  repeated string insertion_matrix_headers = 20;
  google.protobuf.ListValue insertion_matrix = 21;

  reserved 12;

  // Optional.  Custom properties per platform.
  common.Properties properties = 13;

  // Optional.  Can be used to disable personalization.
  bool disable_personalization = 22;
}

// Next ID = 5.
message Paging {
  // Identity for the paging request (opaque token).
  // A single paging_id will have many associated requests to get the fully
  // paged response set (hence, many request_id's and client_request_id's).
  //
  // Required if using the cursor for the last_index; optional if using offset.
  // Setting this value provides better paging consistency/stability.  Ideally,
  // it should be set from the initial paging response
  // (Response.paging_info.paging_id).
  //
  // An external value can be used when *not* using promoted.ai's item
  // datastore.  The value must be specific enough to be globally unique, yet
  // general enough to ignore paging parameters.  A good example of a useful,
  // externally set paging_id is to use the paging token or identifiers returned
  // by your item datastore retrieval while passing the eligible insertions in
  // the Request.  If in doubt, rely on the Response.paging_info.paging_id or
  // contact us.
  string paging_id = 1;

  // Required.  The number of items (insertions) to return.
  int32 size = 2;

  // Required.  The position of the first item of this page.
  // For example, to get the 5th page of results with a paging size of 10:
  // * cursor is an opaque token, so it should be the value returned
  //   by the 4th page response (Response.paging_info.cursor).
  // * offset is a 0-based index, so it should be set to 40.
  oneof starting {
    string cursor = 3;
    int32 offset = 4;
  }
}

// Next ID = 6.
message Response {

  reserved 1;

  // List of content.
  repeated Insertion insertion = 2;

  // Paging information of this response.  Only returned on paging requests.
  PagingInfo paging_info = 3;

  // Optionally included support data on the response for use in introspection.
  optional string introspection_data = 4;

  // This is the `request_id` from the corresponding `Request` message.
  string request_id = 5;
}

// Next ID = 3.
message PagingInfo {
  // Opaque identifier to be used in subsequent paging requests for a specific
  // paged repsonse set.
  string paging_id = 1;

  // Opaque token that represents the last item index of this response.
  string cursor = 2;
}

// Used to indicate the client's use case.  Used on both View and Request.
//
// Next ID = 12.
enum UseCase {
  UNKNOWN_USE_CASE = 0;
  CUSTOM = 1; // Need to handle in wrapper proto.
  SEARCH = 2;
  SEARCH_SUGGESTIONS = 3;
  FEED = 4;
  RELATED_CONTENT = 5;
  CLOSE_UP = 6;
  CATEGORY_CONTENT = 7;
  MY_CONTENT = 8;
  MY_SAVED_CONTENT = 9;
  SELLER_CONTENT = 10;
  DISCOVER = 11;
}

// Next ID = 11

// Define Prediction Type
// Next ID = 8












// This Event represents a Content being served at a certain position regardless
// of it was views by a user. Insertions are immutable.
// Next ID = 24.
message Insertion {

  // Optional.  If not set, set by API servers.
  uint64 platform_id = 1;

  // Required.
  common.UserInfo user_info = 2;

  // Optional.  If not set, set by API servers.
  common.Timing timing = 3;

  // Optional.  If not set, API server uses LogRequest.client_info.
  common.ClientInfo client_info = 4;

  reserved 5; // Reserving fields for future common fields.

  // Optional.  Primary key.
  // SDKs usually handles this automatically. For details, see
  // https://github.com/promotedai/schema#setting-primary-keys
  string insertion_id = 6;

  // Optional.
  string request_id = 7;

  // Optional.
  string view_id = 9;

  // Optional.
  string auto_view_id = 21;

  // Optional.
  string session_id = 8;

  // Optional.  We'll look this up using the external_content_id.
  string content_id = 10;

  // Optional.  If using Promotion's CMS.
  reserved 11; // uint64 promotedai_content_id

  // Optional. 0-based.  Position is the global position across pages.
  // E.g. the first item on the 4th page where page_size=10 is position=40.
  // Do not set this on request insertions.  Instead, set retrieval_rank.
  optional uint64 position = 12;

  reserved 14;

  reserved 15;


  // Optional. Custom item attributes and features set by customers.
  common.Properties properties = 13;
 
  reserved 17;
  reserved 18;

  reserved 22;

  reserved 23;

  // Optional. Ranking (if known) of this insertion from the retrieval system.
  optional uint64 retrieval_rank = 19;

  // Optional. Score (if any) of this insertion from the retrieval system.
  optional float retrieval_score = 20;
}
