"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import proto.common.common_pb2
import proto.delivery.delivery_pb2
import proto.delivery.execution_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class IdentifierProvenance(_IdentifierProvenance, metaclass=_IdentifierProvenanceEnumTypeWrapper):
    """Indicates the value of IDs when logged from metrics client library.
    Used for diagnostics and validation to show where IDs are being set.
    Next ID = 5;
    """
    pass
class _IdentifierProvenance:
    V = typing.NewType('V', builtins.int)
class _IdentifierProvenanceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_IdentifierProvenance.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UNKNOWN = IdentifierProvenance.V(0)
    NULL = IdentifierProvenance.V(1)
    """Set to null by platform code."""

    EMPTY = IdentifierProvenance.V(2)
    """Set to the empty string by platform integration code."""

    AUTOGENERATED = IdentifierProvenance.V(3)
    """Automatically generated by metrics library."""

    PLATFORM_SPECIFIED = IdentifierProvenance.V(4)
    """Set to a specific value by platform integration code."""


UNKNOWN = IdentifierProvenance.V(0)
NULL = IdentifierProvenance.V(1)
"""Set to null by platform code."""

EMPTY = IdentifierProvenance.V(2)
"""Set to the empty string by platform integration code."""

AUTOGENERATED = IdentifierProvenance.V(3)
"""Automatically generated by metrics library."""

PLATFORM_SPECIFIED = IdentifierProvenance.V(4)
"""Set to a specific value by platform integration code."""

global___IdentifierProvenance = IdentifierProvenance


class CohortArm(_CohortArm, metaclass=_CohortArmEnumTypeWrapper):
    """The arm (experiment's group) when the Cohort is for an experiment.
    Next ID = 6.
    """
    pass
class _CohortArm:
    V = typing.NewType('V', builtins.int)
class _CohortArmEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CohortArm.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UNKNOWN_GROUP = CohortArm.V(0)
    CONTROL = CohortArm.V(1)
    TREATMENT = CohortArm.V(2)
    TREATMENT1 = CohortArm.V(3)
    """These are generic arms (groups) that can be used when there are multiple treatments."""

    TREATMENT2 = CohortArm.V(4)
    TREATMENT3 = CohortArm.V(5)

UNKNOWN_GROUP = CohortArm.V(0)
CONTROL = CohortArm.V(1)
TREATMENT = CohortArm.V(2)
TREATMENT1 = CohortArm.V(3)
"""These are generic arms (groups) that can be used when there are multiple treatments."""

TREATMENT2 = CohortArm.V(4)
TREATMENT3 = CohortArm.V(5)
global___CohortArm = CohortArm


class ImpressionSourceType(_ImpressionSourceType, metaclass=_ImpressionSourceTypeEnumTypeWrapper):
    """Contextual information about where impression was served.
    Allows backends to infer expected behavior about
    corresponding content.
    Next ID = 3.
    """
    pass
class _ImpressionSourceType:
    V = typing.NewType('V', builtins.int)
class _ImpressionSourceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ImpressionSourceType.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UNKNOWN_IMPRESSION_SOURCE_TYPE = ImpressionSourceType.V(0)
    DELIVERY = ImpressionSourceType.V(1)
    """Content was served by Promoted Delivery API."""

    CLIENT_BACKEND = ImpressionSourceType.V(2)
    """Content was not served by Promoted Delivery API."""


UNKNOWN_IMPRESSION_SOURCE_TYPE = ImpressionSourceType.V(0)
DELIVERY = ImpressionSourceType.V(1)
"""Content was served by Promoted Delivery API."""

CLIENT_BACKEND = ImpressionSourceType.V(2)
"""Content was not served by Promoted Delivery API."""

global___ImpressionSourceType = ImpressionSourceType


class ActionType(_ActionType, metaclass=_ActionTypeEnumTypeWrapper):
    """The action that user wants to perform.

    Next ID = 22.  Max = 254.
    Keep this updated with delivery.private.features.AggMetric.
    """
    pass
class _ActionType:
    V = typing.NewType('V', builtins.int)
class _ActionTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ActionType.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UNKNOWN_ACTION_TYPE = ActionType.V(0)
    CUSTOM_ACTION_TYPE = ActionType.V(1)
    """Action that doesn't correspond to any of the below."""

    NAVIGATE = ActionType.V(2)
    """Navigating to details about content."""

    ADD_TO_CART = ActionType.V(4)
    """Adding an item to shopping cart."""

    REMOVE_FROM_CART = ActionType.V(10)
    """Remove an item from shopping cart."""

    CHECKOUT = ActionType.V(8)
    """Going to checkout."""

    PURCHASE = ActionType.V(3)
    """Purchasing an item."""

    SHARE = ActionType.V(5)
    """Sharing content."""

    LIKE = ActionType.V(6)
    """Liking content."""

    UNLIKE = ActionType.V(9)
    """Un-liking content."""

    COMMENT = ActionType.V(7)
    """Commenting on content."""

    MAKE_OFFER = ActionType.V(11)
    """Making an offer on content."""

    ASK_QUESTION = ActionType.V(12)
    """Asking a question about content."""

    ANSWER_QUESTION = ActionType.V(13)
    """Answering a question about content."""

    COMPLETE_SIGN_IN = ActionType.V(14)
    """Complete sign-in.
    No content_id needed.  If set, set it to the Content's ID (not User).
    """

    COMPLETE_SIGN_UP = ActionType.V(15)
    """Complete sign-up.
    No content_id needed.  If set, set it to the Content's ID (not User).
    """

    BOOKMARK = ActionType.V(16)
    """Bookmark content."""

    REMOVE_BOOKMARK = ActionType.V(17)
    ADD_TO_LIST = ActionType.V(18)
    """(Wish)list content."""

    REMOVE_FROM_LIST = ActionType.V(19)
    FOLLOW = ActionType.V(20)
    """Follow a seller or creator."""

    UNFOLLOW = ActionType.V(21)
    """Unfollow a followed seller or creator."""


UNKNOWN_ACTION_TYPE = ActionType.V(0)
CUSTOM_ACTION_TYPE = ActionType.V(1)
"""Action that doesn't correspond to any of the below."""

NAVIGATE = ActionType.V(2)
"""Navigating to details about content."""

ADD_TO_CART = ActionType.V(4)
"""Adding an item to shopping cart."""

REMOVE_FROM_CART = ActionType.V(10)
"""Remove an item from shopping cart."""

CHECKOUT = ActionType.V(8)
"""Going to checkout."""

PURCHASE = ActionType.V(3)
"""Purchasing an item."""

SHARE = ActionType.V(5)
"""Sharing content."""

LIKE = ActionType.V(6)
"""Liking content."""

UNLIKE = ActionType.V(9)
"""Un-liking content."""

COMMENT = ActionType.V(7)
"""Commenting on content."""

MAKE_OFFER = ActionType.V(11)
"""Making an offer on content."""

ASK_QUESTION = ActionType.V(12)
"""Asking a question about content."""

ANSWER_QUESTION = ActionType.V(13)
"""Answering a question about content."""

COMPLETE_SIGN_IN = ActionType.V(14)
"""Complete sign-in.
No content_id needed.  If set, set it to the Content's ID (not User).
"""

COMPLETE_SIGN_UP = ActionType.V(15)
"""Complete sign-up.
No content_id needed.  If set, set it to the Content's ID (not User).
"""

BOOKMARK = ActionType.V(16)
"""Bookmark content."""

REMOVE_BOOKMARK = ActionType.V(17)
ADD_TO_LIST = ActionType.V(18)
"""(Wish)list content."""

REMOVE_FROM_LIST = ActionType.V(19)
FOLLOW = ActionType.V(20)
"""Follow a seller or creator."""

UNFOLLOW = ActionType.V(21)
"""Unfollow a followed seller or creator."""

global___ActionType = ActionType


class JoinedIdentifiers(google.protobuf.message.Message):
    """We do not need this yet.
    import "proto/promotion/promotion.proto";

    Important: Fields 1-5 are common fields that we want to be similar across
    different log records.

    This structure is used to help deduplicate identifiers that live in many
    event types.
    Next ID = 11.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PLATFORM_ID_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    LOG_USER_ID_FIELD_NUMBER: builtins.int
    ANON_USER_ID_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    VIEW_ID_FIELD_NUMBER: builtins.int
    AUTO_VIEW_ID_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    INSERTION_ID_FIELD_NUMBER: builtins.int
    IMPRESSION_ID_FIELD_NUMBER: builtins.int
    platform_id: builtins.int = ...
    user_id: typing.Text = ...
    log_user_id: typing.Text = ...
    anon_user_id: typing.Text = ...
    session_id: typing.Text = ...
    view_id: typing.Text = ...
    auto_view_id: typing.Text = ...
    request_id: typing.Text = ...
    insertion_id: typing.Text = ...
    impression_id: typing.Text = ...
    def __init__(self,
        *,
        platform_id : builtins.int = ...,
        user_id : typing.Text = ...,
        log_user_id : typing.Text = ...,
        anon_user_id : typing.Text = ...,
        session_id : typing.Text = ...,
        view_id : typing.Text = ...,
        auto_view_id : typing.Text = ...,
        request_id : typing.Text = ...,
        insertion_id : typing.Text = ...,
        impression_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["anon_user_id",b"anon_user_id","auto_view_id",b"auto_view_id","impression_id",b"impression_id","insertion_id",b"insertion_id","log_user_id",b"log_user_id","platform_id",b"platform_id","request_id",b"request_id","session_id",b"session_id","user_id",b"user_id","view_id",b"view_id"]) -> None: ...
global___JoinedIdentifiers = JoinedIdentifiers

class IdentifierProvenances(google.protobuf.message.Message):
    """Diagnostics message indicating where each of an event's IDs originated
    from in metrics client library.
    Next ID = 11;
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USER_ID_PROVENANCE_FIELD_NUMBER: builtins.int
    LOG_USER_ID_PROVENANCE_FIELD_NUMBER: builtins.int
    SESSION_ID_PROVENANCE_FIELD_NUMBER: builtins.int
    VIEW_ID_PROVENANCE_FIELD_NUMBER: builtins.int
    AUTO_VIEW_ID_PROVENANCE_FIELD_NUMBER: builtins.int
    INSERTION_ID_PROVENANCE_FIELD_NUMBER: builtins.int
    IMPRESSION_ID_PROVENANCE_FIELD_NUMBER: builtins.int
    ACTION_ID_PROVENANCE_FIELD_NUMBER: builtins.int
    CONTENT_ID_PROVENANCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_PROVENANCE_FIELD_NUMBER: builtins.int
    user_id_provenance: global___IdentifierProvenance.V = ...
    log_user_id_provenance: global___IdentifierProvenance.V = ...
    session_id_provenance: global___IdentifierProvenance.V = ...
    view_id_provenance: global___IdentifierProvenance.V = ...
    auto_view_id_provenance: global___IdentifierProvenance.V = ...
    insertion_id_provenance: global___IdentifierProvenance.V = ...
    impression_id_provenance: global___IdentifierProvenance.V = ...
    action_id_provenance: global___IdentifierProvenance.V = ...
    content_id_provenance: global___IdentifierProvenance.V = ...
    request_id_provenance: global___IdentifierProvenance.V = ...
    def __init__(self,
        *,
        user_id_provenance : global___IdentifierProvenance.V = ...,
        log_user_id_provenance : global___IdentifierProvenance.V = ...,
        session_id_provenance : global___IdentifierProvenance.V = ...,
        view_id_provenance : global___IdentifierProvenance.V = ...,
        auto_view_id_provenance : global___IdentifierProvenance.V = ...,
        insertion_id_provenance : global___IdentifierProvenance.V = ...,
        impression_id_provenance : global___IdentifierProvenance.V = ...,
        action_id_provenance : global___IdentifierProvenance.V = ...,
        content_id_provenance : global___IdentifierProvenance.V = ...,
        request_id_provenance : global___IdentifierProvenance.V = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["action_id_provenance",b"action_id_provenance","auto_view_id_provenance",b"auto_view_id_provenance","content_id_provenance",b"content_id_provenance","impression_id_provenance",b"impression_id_provenance","insertion_id_provenance",b"insertion_id_provenance","log_user_id_provenance",b"log_user_id_provenance","request_id_provenance",b"request_id_provenance","session_id_provenance",b"session_id_provenance","user_id_provenance",b"user_id_provenance","view_id_provenance",b"view_id_provenance"]) -> None: ...
global___IdentifierProvenances = IdentifierProvenances

class User(google.protobuf.message.Message):
    """Used to store user properties.  E.g. purchasedContentIds.
    Clients can update each User multiple times by logging the User with the same
    user_id.  Unset fields will not be updated. Repeated fields will act like a
    merge if the item has a key.  Otherwise, it'll act like an append.
    Next ID = 8.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PLATFORM_ID_FIELD_NUMBER: builtins.int
    USER_INFO_FIELD_NUMBER: builtins.int
    TIMING_FIELD_NUMBER: builtins.int
    CLIENT_INFO_FIELD_NUMBER: builtins.int
    ID_PROVENANCES_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    platform_id: builtins.int = ...
    """Optional.  If not set, set by API servers.
    If not set, API server uses LogRequest.platform_id.
    """

    @property
    def user_info(self) -> proto.common.common_pb2.UserInfo:
        """Optional.  Must be set on LogRequest or here."""
        pass
    @property
    def timing(self) -> proto.common.common_pb2.Timing:
        """Optional.  If not set, set by API servers.
        If not set, API server uses LogRequest.timing.
        """
        pass
    @property
    def client_info(self) -> proto.common.common_pb2.ClientInfo:
        """Optional.  If not set, API server uses LogRequest.client_info."""
        pass
    @property
    def id_provenances(self) -> global___IdentifierProvenances:
        """Optional.  Used for debugging."""
        pass
    @property
    def properties(self) -> proto.common.common_pb2.Properties:
        """Optional.  Custom properties per platform."""
        pass
    def __init__(self,
        *,
        platform_id : builtins.int = ...,
        user_info : typing.Optional[proto.common.common_pb2.UserInfo] = ...,
        timing : typing.Optional[proto.common.common_pb2.Timing] = ...,
        client_info : typing.Optional[proto.common.common_pb2.ClientInfo] = ...,
        id_provenances : typing.Optional[global___IdentifierProvenances] = ...,
        properties : typing.Optional[proto.common.common_pb2.Properties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["client_info",b"client_info","id_provenances",b"id_provenances","properties",b"properties","timing",b"timing","user_info",b"user_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["client_info",b"client_info","id_provenances",b"id_provenances","platform_id",b"platform_id","properties",b"properties","timing",b"timing","user_info",b"user_info"]) -> None: ...
global___User = User

class CohortMembership(google.protobuf.message.Message):
    """For linking users to cohorts.
    Next ID = 11.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PLATFORM_ID_FIELD_NUMBER: builtins.int
    USER_INFO_FIELD_NUMBER: builtins.int
    TIMING_FIELD_NUMBER: builtins.int
    CLIENT_INFO_FIELD_NUMBER: builtins.int
    MEMBERSHIP_ID_FIELD_NUMBER: builtins.int
    COHORT_ID_FIELD_NUMBER: builtins.int
    ARM_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    platform_id: builtins.int = ...
    """Optional.  If not set, set by API servers.
    If not set, API server uses LogRequest.platform_id.
    """

    @property
    def user_info(self) -> proto.common.common_pb2.UserInfo:
        """Optional.  Must be set on LogRequest or here."""
        pass
    @property
    def timing(self) -> proto.common.common_pb2.Timing:
        """Optional.  If not set, set by API servers.
        If not set, API server uses LogRequest.timing.
        """
        pass
    @property
    def client_info(self) -> proto.common.common_pb2.ClientInfo:
        """Optional.  If not set, API server uses LogRequest.client_info."""
        pass
    membership_id: typing.Text = ...
    """Optional.  Primary key.
    SDKs usually handles this automatically. For details, see
    https://github.com/promotedai/schema#setting-primary-keys
    """

    cohort_id: typing.Text = ...
    """Optional.  This field refers to the cohort (currently stored as an enum)."""

    arm: global___CohortArm.V = ...
    """Optional."""

    @property
    def properties(self) -> proto.common.common_pb2.Properties:
        """Optional.  Custom properties per platform."""
        pass
    def __init__(self,
        *,
        platform_id : builtins.int = ...,
        user_info : typing.Optional[proto.common.common_pb2.UserInfo] = ...,
        timing : typing.Optional[proto.common.common_pb2.Timing] = ...,
        client_info : typing.Optional[proto.common.common_pb2.ClientInfo] = ...,
        membership_id : typing.Text = ...,
        cohort_id : typing.Text = ...,
        arm : global___CohortArm.V = ...,
        properties : typing.Optional[proto.common.common_pb2.Properties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["client_info",b"client_info","properties",b"properties","timing",b"timing","user_info",b"user_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["arm",b"arm","client_info",b"client_info","cohort_id",b"cohort_id","membership_id",b"membership_id","platform_id",b"platform_id","properties",b"properties","timing",b"timing","user_info",b"user_info"]) -> None: ...
global___CohortMembership = CohortMembership

class WebPageView(google.protobuf.message.Message):
    """Submessage on View for Web page visits.
    Next ID = 5.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    URL_FIELD_NUMBER: builtins.int
    REFERRER_FIELD_NUMBER: builtins.int
    DOCUMENT_SIZE_FIELD_NUMBER: builtins.int
    url: typing.Text = ...
    """Optional.  This is the url for the page."""

    referrer: typing.Text = ...
    """Optional.  Can be a full referrer string.  Could be just the UTM."""

    @property
    def document_size(self) -> proto.common.common_pb2.Size: ...
    def __init__(self,
        *,
        url : typing.Text = ...,
        referrer : typing.Text = ...,
        document_size : typing.Optional[proto.common.common_pb2.Size] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["document_size",b"document_size"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["document_size",b"document_size","referrer",b"referrer","url",b"url"]) -> None: ...
global___WebPageView = WebPageView

class AppScreenView(google.protobuf.message.Message):
    """Submessage on View for screen views.
    Next ID = 2.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___AppScreenView = AppScreenView

class View(google.protobuf.message.Message):
    """A view of a single page/screen (e.g. feed, search results, etc).
    Next ID = 20.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ViewType(_ViewType, metaclass=_ViewTypeEnumTypeWrapper):
        pass
    class _ViewType:
        V = typing.NewType('V', builtins.int)
    class _ViewTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ViewType.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN_VIEW_TYPE = View.ViewType.V(0)
        WEB_PAGE = View.ViewType.V(1)
        APP_SCREEN = View.ViewType.V(2)

    UNKNOWN_VIEW_TYPE = View.ViewType.V(0)
    WEB_PAGE = View.ViewType.V(1)
    APP_SCREEN = View.ViewType.V(2)

    PLATFORM_ID_FIELD_NUMBER: builtins.int
    USER_INFO_FIELD_NUMBER: builtins.int
    TIMING_FIELD_NUMBER: builtins.int
    CLIENT_INFO_FIELD_NUMBER: builtins.int
    VIEW_ID_FIELD_NUMBER: builtins.int
    AUTO_VIEW_ID_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    CONTENT_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    USE_CASE_FIELD_NUMBER: builtins.int
    SEARCH_QUERY_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    LOCALE_FIELD_NUMBER: builtins.int
    VIEW_TYPE_FIELD_NUMBER: builtins.int
    WEB_PAGE_VIEW_FIELD_NUMBER: builtins.int
    APP_SCREEN_VIEW_FIELD_NUMBER: builtins.int
    ID_PROVENANCES_FIELD_NUMBER: builtins.int
    platform_id: builtins.int = ...
    """Optional.  If not set, set by API servers.
    If not set, API server uses LogRequest.platform_id.
    """

    @property
    def user_info(self) -> proto.common.common_pb2.UserInfo:
        """Optional.  Must be set on LogRequest or here."""
        pass
    @property
    def timing(self) -> proto.common.common_pb2.Timing:
        """Optional.  If not set, set by API servers.
        If not set, API server uses LogRequest.timing.
        """
        pass
    @property
    def client_info(self) -> proto.common.common_pb2.ClientInfo:
        """Optional.  If not set, API server uses LogRequest.client_info."""
        pass
    view_id: typing.Text = ...
    """Optional.  Primary key.
    SDKs usually handles this automatically. For details, see
    https://github.com/promotedai/schema#setting-primary-keys
    """

    auto_view_id: typing.Text = ...
    """Optional.  Do not set this outside the client SDK."""

    session_id: typing.Text = ...
    """Optional."""

    content_id: typing.Text = ...
    """Optional.  Fill this in when this view is a content or product page."""

    name: typing.Text = ...
    """Optional.  The name of the view."""

    use_case: proto.delivery.delivery_pb2.UseCase.V = ...
    """Optional."""

    search_query: typing.Text = ...
    """Optional."""

    @property
    def properties(self) -> proto.common.common_pb2.Properties:
        """Optional.  Custom properties per platform."""
        pass
    @property
    def locale(self) -> proto.common.common_pb2.Locale:
        """Optional."""
        pass
    view_type: global___View.ViewType.V = ...
    """If a specific view is set (`web_page_view` and `app_screen_view`),
    clients do not need to set it directly.  If those fields and `view_type`
    have conflicting values, the specific view field is used.
    """

    @property
    def web_page_view(self) -> global___WebPageView: ...
    @property
    def app_screen_view(self) -> global___AppScreenView: ...
    @property
    def id_provenances(self) -> global___IdentifierProvenances:
        """Optional.  Used for debugging."""
        pass
    def __init__(self,
        *,
        platform_id : builtins.int = ...,
        user_info : typing.Optional[proto.common.common_pb2.UserInfo] = ...,
        timing : typing.Optional[proto.common.common_pb2.Timing] = ...,
        client_info : typing.Optional[proto.common.common_pb2.ClientInfo] = ...,
        view_id : typing.Text = ...,
        auto_view_id : typing.Text = ...,
        session_id : typing.Text = ...,
        content_id : typing.Text = ...,
        name : typing.Text = ...,
        use_case : proto.delivery.delivery_pb2.UseCase.V = ...,
        search_query : typing.Text = ...,
        properties : typing.Optional[proto.common.common_pb2.Properties] = ...,
        locale : typing.Optional[proto.common.common_pb2.Locale] = ...,
        view_type : global___View.ViewType.V = ...,
        web_page_view : typing.Optional[global___WebPageView] = ...,
        app_screen_view : typing.Optional[global___AppScreenView] = ...,
        id_provenances : typing.Optional[global___IdentifierProvenances] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["app_screen_view",b"app_screen_view","client_info",b"client_info","id_provenances",b"id_provenances","locale",b"locale","properties",b"properties","timing",b"timing","ui_type",b"ui_type","user_info",b"user_info","web_page_view",b"web_page_view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_screen_view",b"app_screen_view","auto_view_id",b"auto_view_id","client_info",b"client_info","content_id",b"content_id","id_provenances",b"id_provenances","locale",b"locale","name",b"name","platform_id",b"platform_id","properties",b"properties","search_query",b"search_query","session_id",b"session_id","timing",b"timing","ui_type",b"ui_type","use_case",b"use_case","user_info",b"user_info","view_id",b"view_id","view_type",b"view_type","web_page_view",b"web_page_view"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["ui_type",b"ui_type"]) -> typing.Optional[typing_extensions.Literal["web_page_view","app_screen_view"]]: ...
global___View = View

class AutoView(google.protobuf.message.Message):
    """An automatically generated view logged by web and mobile SDKs.
    Platform clients should never log this directly. Let the SDKs
    handle this instead.
    Next ID = 16.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PLATFORM_ID_FIELD_NUMBER: builtins.int
    USER_INFO_FIELD_NUMBER: builtins.int
    TIMING_FIELD_NUMBER: builtins.int
    CLIENT_INFO_FIELD_NUMBER: builtins.int
    AUTO_VIEW_ID_FIELD_NUMBER: builtins.int
    VIEW_ID_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    USE_CASE_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    LOCALE_FIELD_NUMBER: builtins.int
    WEB_PAGE_VIEW_FIELD_NUMBER: builtins.int
    APP_SCREEN_VIEW_FIELD_NUMBER: builtins.int
    ID_PROVENANCES_FIELD_NUMBER: builtins.int
    platform_id: builtins.int = ...
    """Optional.  If not set, set by API servers.
    If not set, API server uses LogRequest.platform_id.
    """

    @property
    def user_info(self) -> proto.common.common_pb2.UserInfo:
        """Optional.  Must be set on LogRequest or here."""
        pass
    @property
    def timing(self) -> proto.common.common_pb2.Timing:
        """Optional.  If not set, set by API servers.
        If not set, API server uses LogRequest.timing.
        """
        pass
    @property
    def client_info(self) -> proto.common.common_pb2.ClientInfo:
        """Optional.  If not set, API server uses LogRequest.client_info."""
        pass
    auto_view_id: typing.Text = ...
    """Optional.  Primary key.
    SDKs usually handles this automatically. For details, see
    https://github.com/promotedai/schema#setting-primary-keys
    """

    view_id: typing.Text = ...
    """Optional.  Do not set this outside the client SDK."""

    session_id: typing.Text = ...
    """Optional."""

    name: typing.Text = ...
    """Optional.  The name of the view."""

    use_case: proto.delivery.delivery_pb2.UseCase.V = ...
    """Optional."""

    @property
    def properties(self) -> proto.common.common_pb2.Properties:
        """Optional.  Custom properties per platform."""
        pass
    @property
    def locale(self) -> proto.common.common_pb2.Locale:
        """Optional."""
        pass
    @property
    def web_page_view(self) -> global___WebPageView: ...
    @property
    def app_screen_view(self) -> global___AppScreenView: ...
    @property
    def id_provenances(self) -> global___IdentifierProvenances:
        """Optional.  Used for debugging."""
        pass
    def __init__(self,
        *,
        platform_id : builtins.int = ...,
        user_info : typing.Optional[proto.common.common_pb2.UserInfo] = ...,
        timing : typing.Optional[proto.common.common_pb2.Timing] = ...,
        client_info : typing.Optional[proto.common.common_pb2.ClientInfo] = ...,
        auto_view_id : typing.Text = ...,
        view_id : typing.Text = ...,
        session_id : typing.Text = ...,
        name : typing.Text = ...,
        use_case : proto.delivery.delivery_pb2.UseCase.V = ...,
        properties : typing.Optional[proto.common.common_pb2.Properties] = ...,
        locale : typing.Optional[proto.common.common_pb2.Locale] = ...,
        web_page_view : typing.Optional[global___WebPageView] = ...,
        app_screen_view : typing.Optional[global___AppScreenView] = ...,
        id_provenances : typing.Optional[global___IdentifierProvenances] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["app_screen_view",b"app_screen_view","client_info",b"client_info","id_provenances",b"id_provenances","locale",b"locale","properties",b"properties","timing",b"timing","ui_type",b"ui_type","user_info",b"user_info","web_page_view",b"web_page_view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_screen_view",b"app_screen_view","auto_view_id",b"auto_view_id","client_info",b"client_info","id_provenances",b"id_provenances","locale",b"locale","name",b"name","platform_id",b"platform_id","properties",b"properties","session_id",b"session_id","timing",b"timing","ui_type",b"ui_type","use_case",b"use_case","user_info",b"user_info","view_id",b"view_id","web_page_view",b"web_page_view"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["ui_type",b"ui_type"]) -> typing.Optional[typing_extensions.Literal["web_page_view","app_screen_view"]]: ...
global___AutoView = AutoView

class IndexPath(google.protobuf.message.Message):
    """Represents a position in a list view, most commonly used with
    mobile clients (though it can apply to web too).
    The indexes represent a zero-based hierarchical path of sections,
    subsections, and items. For example:
    [2] -> Item at index 2 in a flat list
    [0, 1] -> Section 0, item 1 in a sectioned list
    [0, 1, 5] -> Section 0, subsection 1, item 5 in a sectioned list
    Next ID = 2.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INDEX_FIELD_NUMBER: builtins.int
    @property
    def index(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Index of item in path."""
        pass
    def __init__(self,
        *,
        index : typing.Optional[typing.Iterable[builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["index",b"index"]) -> None: ...
global___IndexPath = IndexPath

class Impression(google.protobuf.message.Message):
    """When an Insertion (instance of Content) is shown to a user.
    Impressions are immutable.
    Next ID = 18.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PLATFORM_ID_FIELD_NUMBER: builtins.int
    USER_INFO_FIELD_NUMBER: builtins.int
    TIMING_FIELD_NUMBER: builtins.int
    CLIENT_INFO_FIELD_NUMBER: builtins.int
    IMPRESSION_ID_FIELD_NUMBER: builtins.int
    INSERTION_ID_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    VIEW_ID_FIELD_NUMBER: builtins.int
    AUTO_VIEW_ID_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    CONTENT_ID_FIELD_NUMBER: builtins.int
    SOURCE_TYPE_FIELD_NUMBER: builtins.int
    HAS_SUPERIMPOSED_VIEWS_FIELD_NUMBER: builtins.int
    CLIENT_POSITION_FIELD_NUMBER: builtins.int
    ID_PROVENANCES_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    platform_id: builtins.int = ...
    """Optional.  If not set, set by API servers.
    If not set, API server uses LogRequest.platform_id.
    """

    @property
    def user_info(self) -> proto.common.common_pb2.UserInfo:
        """Optional.  Must be set on LogRequest or here."""
        pass
    @property
    def timing(self) -> proto.common.common_pb2.Timing:
        """Optional.  If not set, set by API servers.
        If not set, API server uses LogRequest.timing.
        """
        pass
    @property
    def client_info(self) -> proto.common.common_pb2.ClientInfo:
        """Optional.  If not set, API server uses LogRequest.client_info."""
        pass
    impression_id: typing.Text = ...
    """Optional.  Primary key.
    SDKs usually handles this automatically. For details, see
    https://github.com/promotedai/schema#setting-primary-keys
    """

    insertion_id: typing.Text = ...
    """Optional."""

    request_id: typing.Text = ...
    """Optional."""

    view_id: typing.Text = ...
    """Optional."""

    auto_view_id: typing.Text = ...
    """Optional."""

    session_id: typing.Text = ...
    """Optional."""

    content_id: typing.Text = ...
    """Optional. content_id is used as a hint when insertion_id is not set.
    For more accurate results, set insertion_id.
    """

    source_type: global___ImpressionSourceType.V = ...
    """Optional."""

    has_superimposed_views: builtins.bool = ...
    """Optional. Indicates that this impression occurred in a view that may
    not be topmost in the view hierarchy, and thus may have been obscured
    from the user.
    """

    @property
    def client_position(self) -> global___IndexPath:
        """Optional. Position the the impression within its enclosing list."""
        pass
    @property
    def id_provenances(self) -> global___IdentifierProvenances:
        """Optional.  Used for debugging."""
        pass
    @property
    def properties(self) -> proto.common.common_pb2.Properties:
        """Optional.  Custom properties per platform."""
        pass
    def __init__(self,
        *,
        platform_id : builtins.int = ...,
        user_info : typing.Optional[proto.common.common_pb2.UserInfo] = ...,
        timing : typing.Optional[proto.common.common_pb2.Timing] = ...,
        client_info : typing.Optional[proto.common.common_pb2.ClientInfo] = ...,
        impression_id : typing.Text = ...,
        insertion_id : typing.Text = ...,
        request_id : typing.Text = ...,
        view_id : typing.Text = ...,
        auto_view_id : typing.Text = ...,
        session_id : typing.Text = ...,
        content_id : typing.Text = ...,
        source_type : global___ImpressionSourceType.V = ...,
        has_superimposed_views : builtins.bool = ...,
        client_position : typing.Optional[global___IndexPath] = ...,
        id_provenances : typing.Optional[global___IdentifierProvenances] = ...,
        properties : typing.Optional[proto.common.common_pb2.Properties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["client_info",b"client_info","client_position",b"client_position","id_provenances",b"id_provenances","properties",b"properties","timing",b"timing","user_info",b"user_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auto_view_id",b"auto_view_id","client_info",b"client_info","client_position",b"client_position","content_id",b"content_id","has_superimposed_views",b"has_superimposed_views","id_provenances",b"id_provenances","impression_id",b"impression_id","insertion_id",b"insertion_id","platform_id",b"platform_id","properties",b"properties","request_id",b"request_id","session_id",b"session_id","source_type",b"source_type","timing",b"timing","user_info",b"user_info","view_id",b"view_id"]) -> None: ...
global___Impression = Impression

class NavigateAction(google.protobuf.message.Message):
    """Next ID = 2."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_URL_FIELD_NUMBER: builtins.int
    target_url: typing.Text = ...
    """Optional.  The next URL."""

    def __init__(self,
        *,
        target_url : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["target_url",b"target_url"]) -> None: ...
global___NavigateAction = NavigateAction

class Action(google.protobuf.message.Message):
    """Actions are user actions.  Example: Click.
    Actions are immutable.
    Next ID = 29.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PLATFORM_ID_FIELD_NUMBER: builtins.int
    USER_INFO_FIELD_NUMBER: builtins.int
    TIMING_FIELD_NUMBER: builtins.int
    CLIENT_INFO_FIELD_NUMBER: builtins.int
    ACTION_ID_FIELD_NUMBER: builtins.int
    IMPRESSION_ID_FIELD_NUMBER: builtins.int
    INSERTION_ID_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    VIEW_ID_FIELD_NUMBER: builtins.int
    AUTO_VIEW_ID_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    CONTENT_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    ACTION_TYPE_FIELD_NUMBER: builtins.int
    CUSTOM_ACTION_TYPE_FIELD_NUMBER: builtins.int
    ELEMENT_ID_FIELD_NUMBER: builtins.int
    NAVIGATE_ACTION_FIELD_NUMBER: builtins.int
    HAS_SUPERIMPOSED_VIEWS_FIELD_NUMBER: builtins.int
    CLIENT_POSITION_FIELD_NUMBER: builtins.int
    ID_PROVENANCES_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    DEVICE_FIELD_NUMBER: builtins.int
    CART_FIELD_NUMBER: builtins.int
    platform_id: builtins.int = ...
    """Optional.  If not set, set by API servers.
    If not set, API server uses LogRequest.platform_id.
    """

    @property
    def user_info(self) -> proto.common.common_pb2.UserInfo:
        """Optional.  Must be set on LogRequest or here."""
        pass
    @property
    def timing(self) -> proto.common.common_pb2.Timing:
        """Optional.  If not set, set by API servers.
        If not set, API server uses LogRequest.timing.
        """
        pass
    @property
    def client_info(self) -> proto.common.common_pb2.ClientInfo:
        """Optional.  If not set, API server uses LogRequest.client_info."""
        pass
    action_id: typing.Text = ...
    """Optional.  Primary key.
    SDKs usually handles this automatically. For details, see
    https://github.com/promotedai/schema#setting-primary-keys
    """

    impression_id: typing.Text = ...
    """Optional."""

    insertion_id: typing.Text = ...
    """Optional."""

    request_id: typing.Text = ...
    """Optional."""

    view_id: typing.Text = ...
    """Optional."""

    auto_view_id: typing.Text = ...
    """Optional."""

    session_id: typing.Text = ...
    """Optional."""

    content_id: typing.Text = ...
    """Optional.  The content ID for this action.
    If this is an action with a shopping cart (CHECKOUT, PURCHASE) with multiple items,
    it is okay to blank and fill in `cart.items.item_id`.

    content_id is used as a hint when impression_id is not set.
    For more accurate results, set impression_id if available.
    content_id is also useful for debugging.
    """

    name: typing.Text = ...
    """Optional.  Custom name of the action that the user performed.
    E.g. "Product clicked".  Do not stick parameters or pii in this name.
    """

    action_type: global___ActionType.V = ...
    """Optional.  The action that the user wants to perform."""

    custom_action_type: typing.Text = ...
    """Optional."""

    element_id: typing.Text = ...
    @property
    def navigate_action(self) -> global___NavigateAction: ...
    has_superimposed_views: builtins.bool = ...
    """Optional. Indicates that this action occurred in a view that may
    not be topmost in the view hierarchy.
    """

    @property
    def client_position(self) -> global___IndexPath:
        """Optional. Position the the action within its enclosing list."""
        pass
    @property
    def id_provenances(self) -> global___IdentifierProvenances:
        """Optional.  Used for debugging."""
        pass
    @property
    def properties(self) -> proto.common.common_pb2.Properties:
        """Optional.  Custom properties per platform."""
        pass
    @property
    def device(self) -> proto.common.common_pb2.Device:
        """Optional.  This is meant for debugging.
        If the client is fully integrated, this does not need to be filled in.
        """
        pass
    @property
    def cart(self) -> global___Cart:
        """Shopping cart."""
        pass
    def __init__(self,
        *,
        platform_id : builtins.int = ...,
        user_info : typing.Optional[proto.common.common_pb2.UserInfo] = ...,
        timing : typing.Optional[proto.common.common_pb2.Timing] = ...,
        client_info : typing.Optional[proto.common.common_pb2.ClientInfo] = ...,
        action_id : typing.Text = ...,
        impression_id : typing.Text = ...,
        insertion_id : typing.Text = ...,
        request_id : typing.Text = ...,
        view_id : typing.Text = ...,
        auto_view_id : typing.Text = ...,
        session_id : typing.Text = ...,
        content_id : typing.Text = ...,
        name : typing.Text = ...,
        action_type : global___ActionType.V = ...,
        custom_action_type : typing.Text = ...,
        element_id : typing.Text = ...,
        navigate_action : typing.Optional[global___NavigateAction] = ...,
        has_superimposed_views : builtins.bool = ...,
        client_position : typing.Optional[global___IndexPath] = ...,
        id_provenances : typing.Optional[global___IdentifierProvenances] = ...,
        properties : typing.Optional[proto.common.common_pb2.Properties] = ...,
        device : typing.Optional[proto.common.common_pb2.Device] = ...,
        cart : typing.Optional[global___Cart] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cart",b"_cart","action",b"action","cart",b"cart","client_info",b"client_info","client_position",b"client_position","device",b"device","id_provenances",b"id_provenances","navigate_action",b"navigate_action","properties",b"properties","timing",b"timing","user_info",b"user_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cart",b"_cart","action",b"action","action_id",b"action_id","action_type",b"action_type","auto_view_id",b"auto_view_id","cart",b"cart","client_info",b"client_info","client_position",b"client_position","content_id",b"content_id","custom_action_type",b"custom_action_type","device",b"device","element_id",b"element_id","has_superimposed_views",b"has_superimposed_views","id_provenances",b"id_provenances","impression_id",b"impression_id","insertion_id",b"insertion_id","name",b"name","navigate_action",b"navigate_action","platform_id",b"platform_id","properties",b"properties","request_id",b"request_id","session_id",b"session_id","timing",b"timing","user_info",b"user_info","view_id",b"view_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cart",b"_cart"]) -> typing.Optional[typing_extensions.Literal["cart"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["action",b"action"]) -> typing.Optional[typing_extensions.Literal["navigate_action"]]: ...
global___Action = Action

class Cart(google.protobuf.message.Message):
    """Shopping cart.
    Next ID = 2.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTENTS_FIELD_NUMBER: builtins.int
    @property
    def contents(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CartContent]:
        """Some APIs call these `items`."""
        pass
    def __init__(self,
        *,
        contents : typing.Optional[typing.Iterable[global___CartContent]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["contents",b"contents"]) -> None: ...
global___Cart = Cart

class CartContent(google.protobuf.message.Message):
    """Item in a shopping cart.
    Next ID = 4.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTENT_ID_FIELD_NUMBER: builtins.int
    QUANTITY_FIELD_NUMBER: builtins.int
    PRICE_PER_UNIT_FIELD_NUMBER: builtins.int
    content_id: typing.Text = ...
    """Same as other `content_id`s."""

    quantity: builtins.int = ...
    """Required.  Quantity, units, etc.  If there's only 1 item, set to 1."""

    @property
    def price_per_unit(self) -> proto.common.common_pb2.Money:
        """Price of a single unit of content.  `A unit` defaults to `quantity=1`."""
        pass
    def __init__(self,
        *,
        content_id : typing.Text = ...,
        quantity : builtins.int = ...,
        price_per_unit : typing.Optional[proto.common.common_pb2.Money] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["price_per_unit",b"price_per_unit"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["content_id",b"content_id","price_per_unit",b"price_per_unit","quantity",b"quantity"]) -> None: ...
global___CartContent = CartContent

class Attribution(google.protobuf.message.Message):
    """Details about how the Action is attributed to a touchpoint (Insertion, Impression and/or Action).

    Next ID = 3.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MODEL_ID_FIELD_NUMBER: builtins.int
    CREDIT_MILLIS_FIELD_NUMBER: builtins.int
    model_id: builtins.int = ...
    """The attribution model ID to use.
    - 0 should not be used.  This means we have a bug.
    - 1 is the last event attribution.
    - 2 is even attribution for the same priority group.
    TODO - write up a constants file with attribution model ID numbers.
    """

    credit_millis: builtins.int = ...
    """A weight from [0, 1000] that represents the credit that the `action` gets associated with the `attributed_event`.
    Int millis is used so aggregation is accurate and precise.
    """

    def __init__(self,
        *,
        model_id : builtins.int = ...,
        credit_millis : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["credit_millis",b"credit_millis","model_id",b"model_id"]) -> None: ...
global___Attribution = Attribution

class IOSError(google.protobuf.message.Message):
    """Error from iOS client.
    Next ID = 5.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CODE_FIELD_NUMBER: builtins.int
    DOMAIN_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    BATCH_NUMBER_FIELD_NUMBER: builtins.int
    code: builtins.int = ...
    """Error code from NSError."""

    domain: typing.Text = ...
    """Error domain from NSError."""

    description: typing.Text = ...
    """Description of error."""

    batch_number: builtins.int = ...
    """Which batch generated the error."""

    def __init__(self,
        *,
        code : builtins.int = ...,
        domain : typing.Text = ...,
        description : typing.Text = ...,
        batch_number : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch_number",b"batch_number","code",b"code","description",b"description","domain",b"domain"]) -> None: ...
global___IOSError = IOSError

class ErrorHistory(google.protobuf.message.Message):
    """History of errors from client.
    Next ID = 3.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IOS_ERRORS_FIELD_NUMBER: builtins.int
    TOTAL_ERRORS_FIELD_NUMBER: builtins.int
    @property
    def ios_errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IOSError]:
        """Window of latest errors."""
        pass
    total_errors: builtins.int = ...
    """Total number of errors encountered."""

    def __init__(self,
        *,
        ios_errors : typing.Optional[typing.Iterable[global___IOSError]] = ...,
        total_errors : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ios_errors",b"ios_errors","total_errors",b"total_errors"]) -> None: ...
global___ErrorHistory = ErrorHistory

class AncestorIdHistoryItem(google.protobuf.message.Message):
    """Ancestor ID either logged as event or external ID.
    Next ID = 7.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ANCESTOR_ID_FIELD_NUMBER: builtins.int
    USER_EVENT_FIELD_NUMBER: builtins.int
    SESSION_ID_FROM_USER_EVENT_FIELD_NUMBER: builtins.int
    VIEW_EVENT_FIELD_NUMBER: builtins.int
    AUTO_VIEW_EVENT_FIELD_NUMBER: builtins.int
    BATCH_NUMBER_FIELD_NUMBER: builtins.int
    ancestor_id: typing.Text = ...
    """Changed value of ancestor ID."""

    @property
    def user_event(self) -> global___User: ...
    session_id_from_user_event: typing.Text = ...
    """Internally autogenerated session ID."""

    @property
    def view_event(self) -> global___View: ...
    @property
    def auto_view_event(self) -> global___AutoView: ...
    batch_number: builtins.int = ...
    """Which batch number the event was logged in"""

    def __init__(self,
        *,
        ancestor_id : typing.Text = ...,
        user_event : typing.Optional[global___User] = ...,
        session_id_from_user_event : typing.Text = ...,
        view_event : typing.Optional[global___View] = ...,
        auto_view_event : typing.Optional[global___AutoView] = ...,
        batch_number : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auto_view_event",b"auto_view_event","logged_event",b"logged_event","session_id_from_user_event",b"session_id_from_user_event","user_event",b"user_event","view_event",b"view_event"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ancestor_id",b"ancestor_id","auto_view_event",b"auto_view_event","batch_number",b"batch_number","logged_event",b"logged_event","session_id_from_user_event",b"session_id_from_user_event","user_event",b"user_event","view_event",b"view_event"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["logged_event",b"logged_event"]) -> typing.Optional[typing_extensions.Literal["user_event","session_id_from_user_event","view_event","auto_view_event"]]: ...
global___AncestorIdHistoryItem = AncestorIdHistoryItem

class AncestorIdHistory(google.protobuf.message.Message):
    """History of ancestor IDs logged by client.
    Next ID = 9.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOG_USER_ID_HISTORY_FIELD_NUMBER: builtins.int
    TOTAL_LOG_USER_IDS_LOGGED_FIELD_NUMBER: builtins.int
    SESSION_ID_HISTORY_FIELD_NUMBER: builtins.int
    TOTAL_SESSION_IDS_LOGGED_FIELD_NUMBER: builtins.int
    VIEW_ID_HISTORY_FIELD_NUMBER: builtins.int
    TOTAL_VIEW_IDS_LOGGED_FIELD_NUMBER: builtins.int
    AUTO_VIEW_ID_HISTORY_FIELD_NUMBER: builtins.int
    TOTAL_AUTO_VIEW_IDS_LOGGED_FIELD_NUMBER: builtins.int
    @property
    def log_user_id_history(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AncestorIdHistoryItem]:
        """Window of latest log user ids."""
        pass
    total_log_user_ids_logged: builtins.int = ...
    """Total number of log user ids logged this session."""

    @property
    def session_id_history(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AncestorIdHistoryItem]:
        """Window of latest session ids."""
        pass
    total_session_ids_logged: builtins.int = ...
    """Total number of session ids logged this session."""

    @property
    def view_id_history(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AncestorIdHistoryItem]:
        """Window of latest view ids."""
        pass
    total_view_ids_logged: builtins.int = ...
    """Total number of view ids logged this session."""

    @property
    def auto_view_id_history(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AncestorIdHistoryItem]:
        """Window of latest auto view ids."""
        pass
    total_auto_view_ids_logged: builtins.int = ...
    """Total number of auto view ids logged this session."""

    def __init__(self,
        *,
        log_user_id_history : typing.Optional[typing.Iterable[global___AncestorIdHistoryItem]] = ...,
        total_log_user_ids_logged : builtins.int = ...,
        session_id_history : typing.Optional[typing.Iterable[global___AncestorIdHistoryItem]] = ...,
        total_session_ids_logged : builtins.int = ...,
        view_id_history : typing.Optional[typing.Iterable[global___AncestorIdHistoryItem]] = ...,
        total_view_ids_logged : builtins.int = ...,
        auto_view_id_history : typing.Optional[typing.Iterable[global___AncestorIdHistoryItem]] = ...,
        total_auto_view_ids_logged : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["auto_view_id_history",b"auto_view_id_history","log_user_id_history",b"log_user_id_history","session_id_history",b"session_id_history","total_auto_view_ids_logged",b"total_auto_view_ids_logged","total_log_user_ids_logged",b"total_log_user_ids_logged","total_session_ids_logged",b"total_session_ids_logged","total_view_ids_logged",b"total_view_ids_logged","view_id_history",b"view_id_history"]) -> None: ...
global___AncestorIdHistory = AncestorIdHistory

class MobileDiagnostics(google.protobuf.message.Message):
    """Diagnostic information for mobile clients.
    Next ID = 9.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEVICE_IDENTIFIER_FIELD_NUMBER: builtins.int
    CLIENT_VERSION_FIELD_NUMBER: builtins.int
    PROMOTED_LIBRARY_VERSION_FIELD_NUMBER: builtins.int
    BATCHES_ATTEMPTED_FIELD_NUMBER: builtins.int
    BATCHES_SENT_SUCCESSFULLY_FIELD_NUMBER: builtins.int
    BATCHES_WITH_ERRORS_FIELD_NUMBER: builtins.int
    ERROR_HISTORY_FIELD_NUMBER: builtins.int
    ANCESTOR_ID_HISTORY_FIELD_NUMBER: builtins.int
    device_identifier: typing.Text = ...
    """Unique identifier for device sending this message."""

    client_version: typing.Text = ...
    """Version identifier for client app.
    DEPRECATED: Use the field on common.Device instead.
    """

    promoted_library_version: typing.Text = ...
    """Version of Promoted library.
    DEPRECATED: Use the field on common.Device instead.
    """

    batches_attempted: builtins.int = ...
    """Number of batch logs attempted."""

    batches_sent_successfully: builtins.int = ...
    """Number of batch logs sent successfully."""

    batches_with_errors: builtins.int = ...
    """Number of batch logs that failed to send."""

    @property
    def error_history(self) -> global___ErrorHistory:
        """Error history."""
        pass
    @property
    def ancestor_id_history(self) -> global___AncestorIdHistory:
        """Ancestor ID history. See #133."""
        pass
    def __init__(self,
        *,
        device_identifier : typing.Text = ...,
        client_version : typing.Text = ...,
        promoted_library_version : typing.Text = ...,
        batches_attempted : builtins.int = ...,
        batches_sent_successfully : builtins.int = ...,
        batches_with_errors : builtins.int = ...,
        error_history : typing.Optional[global___ErrorHistory] = ...,
        ancestor_id_history : typing.Optional[global___AncestorIdHistory] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ancestor_id_history",b"ancestor_id_history","error_history",b"error_history"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ancestor_id_history",b"ancestor_id_history","batches_attempted",b"batches_attempted","batches_sent_successfully",b"batches_sent_successfully","batches_with_errors",b"batches_with_errors","client_version",b"client_version","device_identifier",b"device_identifier","error_history",b"error_history","promoted_library_version",b"promoted_library_version"]) -> None: ...
global___MobileDiagnostics = MobileDiagnostics

class Diagnostics(google.protobuf.message.Message):
    """Wrapper message for all kinds of diagnostic messages.
    Next ID = 6.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PLATFORM_ID_FIELD_NUMBER: builtins.int
    USER_INFO_FIELD_NUMBER: builtins.int
    TIMING_FIELD_NUMBER: builtins.int
    CLIENT_INFO_FIELD_NUMBER: builtins.int
    MOBILE_DIAGNOSTICS_FIELD_NUMBER: builtins.int
    platform_id: builtins.int = ...
    """Common fields."""

    @property
    def user_info(self) -> proto.common.common_pb2.UserInfo: ...
    @property
    def timing(self) -> proto.common.common_pb2.Timing: ...
    @property
    def client_info(self) -> proto.common.common_pb2.ClientInfo: ...
    @property
    def mobile_diagnostics(self) -> global___MobileDiagnostics: ...
    def __init__(self,
        *,
        platform_id : builtins.int = ...,
        user_info : typing.Optional[proto.common.common_pb2.UserInfo] = ...,
        timing : typing.Optional[proto.common.common_pb2.Timing] = ...,
        client_info : typing.Optional[proto.common.common_pb2.ClientInfo] = ...,
        mobile_diagnostics : typing.Optional[global___MobileDiagnostics] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["client_info",b"client_info","diagnostics_message",b"diagnostics_message","mobile_diagnostics",b"mobile_diagnostics","timing",b"timing","user_info",b"user_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["client_info",b"client_info","diagnostics_message",b"diagnostics_message","mobile_diagnostics",b"mobile_diagnostics","platform_id",b"platform_id","timing",b"timing","user_info",b"user_info"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["diagnostics_message",b"diagnostics_message"]) -> typing.Optional[typing_extensions.Literal["mobile_diagnostics"]]: ...
global___Diagnostics = Diagnostics

class LogRequest(google.protobuf.message.Message):
    """A way to batch up log requests into the same request.
    Clients can reference logs in different batches.
    Next ID = 26.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PLATFORM_ID_FIELD_NUMBER: builtins.int
    USER_INFO_FIELD_NUMBER: builtins.int
    TIMING_FIELD_NUMBER: builtins.int
    CLIENT_INFO_FIELD_NUMBER: builtins.int
    DEVICE_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    COHORT_MEMBERSHIP_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    AUTO_VIEW_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    INSERTION_FIELD_NUMBER: builtins.int
    IMPRESSION_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    DELIVERY_LOG_FIELD_NUMBER: builtins.int
    DIAGNOSTICS_FIELD_NUMBER: builtins.int
    platform_id: builtins.int = ...
    """Optional.  If not set, set by API servers.
    If not set, API server uses the value set on each log record.
    """

    @property
    def user_info(self) -> proto.common.common_pb2.UserInfo:
        """Optional.  This field is a default user_info to use on all log records
        on this LogRequest.  Must be set here or on each child log record.
        Clients need to validate that the user_info fields match the actual user.
        """
        pass
    @property
    def timing(self) -> proto.common.common_pb2.Timing:
        """Optional.  This field is a default timing to use on all log records
        on this LogRequest.  If neither the log record timing or LogRequest
        timing is set, then Promoted's API creates one.
        """
        pass
    @property
    def client_info(self) -> proto.common.common_pb2.ClientInfo:
        """Optional."""
        pass
    @property
    def device(self) -> proto.common.common_pb2.Device:
        """Optional. Information about the user device."""
        pass
    @property
    def user(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___User]: ...
    @property
    def cohort_membership(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CohortMembership]: ...
    @property
    def view(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___View]: ...
    @property
    def auto_view(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AutoView]: ...
    @property
    def request(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.delivery.delivery_pb2.Request]: ...
    @property
    def insertion(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.delivery.delivery_pb2.Insertion]: ...
    @property
    def impression(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Impression]: ...
    @property
    def action(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Action]: ...
    @property
    def delivery_log(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.delivery.execution_pb2.DeliveryLog]: ...
    @property
    def diagnostics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Diagnostics]: ...
    def __init__(self,
        *,
        platform_id : builtins.int = ...,
        user_info : typing.Optional[proto.common.common_pb2.UserInfo] = ...,
        timing : typing.Optional[proto.common.common_pb2.Timing] = ...,
        client_info : typing.Optional[proto.common.common_pb2.ClientInfo] = ...,
        device : typing.Optional[proto.common.common_pb2.Device] = ...,
        user : typing.Optional[typing.Iterable[global___User]] = ...,
        cohort_membership : typing.Optional[typing.Iterable[global___CohortMembership]] = ...,
        view : typing.Optional[typing.Iterable[global___View]] = ...,
        auto_view : typing.Optional[typing.Iterable[global___AutoView]] = ...,
        request : typing.Optional[typing.Iterable[proto.delivery.delivery_pb2.Request]] = ...,
        insertion : typing.Optional[typing.Iterable[proto.delivery.delivery_pb2.Insertion]] = ...,
        impression : typing.Optional[typing.Iterable[global___Impression]] = ...,
        action : typing.Optional[typing.Iterable[global___Action]] = ...,
        delivery_log : typing.Optional[typing.Iterable[proto.delivery.execution_pb2.DeliveryLog]] = ...,
        diagnostics : typing.Optional[typing.Iterable[global___Diagnostics]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["client_info",b"client_info","device",b"device","timing",b"timing","user_info",b"user_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","auto_view",b"auto_view","client_info",b"client_info","cohort_membership",b"cohort_membership","delivery_log",b"delivery_log","device",b"device","diagnostics",b"diagnostics","impression",b"impression","insertion",b"insertion","platform_id",b"platform_id","request",b"request","timing",b"timing","user",b"user","user_info",b"user_info","view",b"view"]) -> None: ...
global___LogRequest = LogRequest
