// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/event/event.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Event {

  /// <summary>Holder for reflection information generated from proto/event/event.proto</summary>
  public static partial class EventReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/event/event.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdwcm90by9ldmVudC9ldmVudC5wcm90bxIFZXZlbnQaGXByb3RvL2NvbW1v",
            "bi9jb21tb24ucHJvdG8aHXByb3RvL2RlbGl2ZXJ5L2RlbGl2ZXJ5LnByb3Rv",
            "Gh5wcm90by9kZWxpdmVyeS9leGVjdXRpb24ucHJvdG8i0AIKEUpvaW5lZElk",
            "ZW50aWZpZXJzEh8KC3BsYXRmb3JtX2lkGAEgASgEUgpwbGF0Zm9ybUlkEhcK",
            "B3VzZXJfaWQYAiABKAlSBnVzZXJJZBIeCgtsb2dfdXNlcl9pZBgDIAEoCVIJ",
            "bG9nVXNlcklkEiAKDGFub25fdXNlcl9pZBgKIAEoCVIKYW5vblVzZXJJZBId",
            "CgpzZXNzaW9uX2lkGAQgASgJUglzZXNzaW9uSWQSFwoHdmlld19pZBgFIAEo",
            "CVIGdmlld0lkEiAKDGF1dG9fdmlld19pZBgJIAEoCVIKYXV0b1ZpZXdJZBId",
            "CgpyZXF1ZXN0X2lkGAYgASgJUglyZXF1ZXN0SWQSIQoMaW5zZXJ0aW9uX2lk",
            "GAcgASgJUgtpbnNlcnRpb25JZBIjCg1pbXByZXNzaW9uX2lkGAggASgJUgxp",
            "bXByZXNzaW9uSWQiwQYKFUlkZW50aWZpZXJQcm92ZW5hbmNlcxJJChJ1c2Vy",
            "X2lkX3Byb3ZlbmFuY2UYASABKA4yGy5ldmVudC5JZGVudGlmaWVyUHJvdmVu",
            "YW5jZVIQdXNlcklkUHJvdmVuYW5jZRJQChZsb2dfdXNlcl9pZF9wcm92ZW5h",
            "bmNlGAkgASgOMhsuZXZlbnQuSWRlbnRpZmllclByb3ZlbmFuY2VSE2xvZ1Vz",
            "ZXJJZFByb3ZlbmFuY2USTwoVc2Vzc2lvbl9pZF9wcm92ZW5hbmNlGAIgASgO",
            "MhsuZXZlbnQuSWRlbnRpZmllclByb3ZlbmFuY2VSE3Nlc3Npb25JZFByb3Zl",
            "bmFuY2USSQoSdmlld19pZF9wcm92ZW5hbmNlGAMgASgOMhsuZXZlbnQuSWRl",
            "bnRpZmllclByb3ZlbmFuY2VSEHZpZXdJZFByb3ZlbmFuY2USUgoXYXV0b192",
            "aWV3X2lkX3Byb3ZlbmFuY2UYCCABKA4yGy5ldmVudC5JZGVudGlmaWVyUHJv",
            "dmVuYW5jZVIUYXV0b1ZpZXdJZFByb3ZlbmFuY2USUwoXaW5zZXJ0aW9uX2lk",
            "X3Byb3ZlbmFuY2UYCiABKA4yGy5ldmVudC5JZGVudGlmaWVyUHJvdmVuYW5j",
            "ZVIVaW5zZXJ0aW9uSWRQcm92ZW5hbmNlElUKGGltcHJlc3Npb25faWRfcHJv",
            "dmVuYW5jZRgEIAEoDjIbLmV2ZW50LklkZW50aWZpZXJQcm92ZW5hbmNlUhZp",
            "bXByZXNzaW9uSWRQcm92ZW5hbmNlEk0KFGFjdGlvbl9pZF9wcm92ZW5hbmNl",
            "GAUgASgOMhsuZXZlbnQuSWRlbnRpZmllclByb3ZlbmFuY2VSEmFjdGlvbklk",
            "UHJvdmVuYW5jZRJPChVjb250ZW50X2lkX3Byb3ZlbmFuY2UYBiABKA4yGy5l",
            "dmVudC5JZGVudGlmaWVyUHJvdmVuYW5jZVITY29udGVudElkUHJvdmVuYW5j",
            "ZRJPChVyZXF1ZXN0X2lkX3Byb3ZlbmFuY2UYByABKA4yGy5ldmVudC5JZGVu",
            "dGlmaWVyUHJvdmVuYW5jZVITcmVxdWVzdElkUHJvdmVuYW5jZSKyAgoEVXNl",
            "chIfCgtwbGF0Zm9ybV9pZBgBIAEoBFIKcGxhdGZvcm1JZBItCgl1c2VyX2lu",
            "Zm8YAiABKAsyEC5jb21tb24uVXNlckluZm9SCHVzZXJJbmZvEiYKBnRpbWlu",
            "ZxgDIAEoCzIOLmNvbW1vbi5UaW1pbmdSBnRpbWluZxIzCgtjbGllbnRfaW5m",
            "bxgEIAEoCzISLmNvbW1vbi5DbGllbnRJbmZvUgpjbGllbnRJbmZvEkMKDmlk",
            "X3Byb3ZlbmFuY2VzGAcgASgLMhwuZXZlbnQuSWRlbnRpZmllclByb3ZlbmFu",
            "Y2VzUg1pZFByb3ZlbmFuY2VzEjIKCnByb3BlcnRpZXMYBiABKAsyEi5jb21t",
            "b24uUHJvcGVydGllc1IKcHJvcGVydGllc0oECAUQBiLlAgoQQ29ob3J0TWVt",
            "YmVyc2hpcBIfCgtwbGF0Zm9ybV9pZBgBIAEoBFIKcGxhdGZvcm1JZBItCgl1",
            "c2VyX2luZm8YAiABKAsyEC5jb21tb24uVXNlckluZm9SCHVzZXJJbmZvEiYK",
            "BnRpbWluZxgDIAEoCzIOLmNvbW1vbi5UaW1pbmdSBnRpbWluZxIzCgtjbGll",
            "bnRfaW5mbxgEIAEoCzISLmNvbW1vbi5DbGllbnRJbmZvUgpjbGllbnRJbmZv",
            "EiMKDW1lbWJlcnNoaXBfaWQYBiABKAlSDG1lbWJlcnNoaXBJZBIbCgljb2hv",
            "cnRfaWQYCCABKAlSCGNvaG9ydElkEiIKA2FybRgJIAEoDjIQLmV2ZW50LkNv",
            "aG9ydEFybVIDYXJtEjIKCnByb3BlcnRpZXMYCiABKAsyEi5jb21tb24uUHJv",
            "cGVydGllc1IKcHJvcGVydGllc0oECAUQBkoECAcQCCJ0CgtXZWJQYWdlVmll",
            "dxIQCgN1cmwYASABKAlSA3VybBIaCghyZWZlcnJlchgDIAEoCVIIcmVmZXJy",
            "ZXISMQoNZG9jdW1lbnRfc2l6ZRgEIAEoCzIMLmNvbW1vbi5TaXplUgxkb2N1",
            "bWVudFNpemVKBAgCEAMiFQoNQXBwU2NyZWVuVmlld0oECAEQAiK3BgoEVmll",
            "dxIfCgtwbGF0Zm9ybV9pZBgBIAEoBFIKcGxhdGZvcm1JZBItCgl1c2VyX2lu",
            "Zm8YAiABKAsyEC5jb21tb24uVXNlckluZm9SCHVzZXJJbmZvEiYKBnRpbWlu",
            "ZxgDIAEoCzIOLmNvbW1vbi5UaW1pbmdSBnRpbWluZxIzCgtjbGllbnRfaW5m",
            "bxgEIAEoCzISLmNvbW1vbi5DbGllbnRJbmZvUgpjbGllbnRJbmZvEhcKB3Zp",
            "ZXdfaWQYBiABKAlSBnZpZXdJZBIgCgxhdXRvX3ZpZXdfaWQYESABKAlSCmF1",
            "dG9WaWV3SWQSHQoKc2Vzc2lvbl9pZBgHIAEoCVIJc2Vzc2lvbklkEh0KCmNv",
            "bnRlbnRfaWQYEyABKAlSCWNvbnRlbnRJZBISCgRuYW1lGAggASgJUgRuYW1l",
            "EiwKCHVzZV9jYXNlGAkgASgOMhEuZGVsaXZlcnkuVXNlQ2FzZVIHdXNlQ2Fz",
            "ZRIhCgxzZWFyY2hfcXVlcnkYCiABKAlSC3NlYXJjaFF1ZXJ5EjIKCnByb3Bl",
            "cnRpZXMYCyABKAsyEi5jb21tb24uUHJvcGVydGllc1IKcHJvcGVydGllcxIm",
            "CgZsb2NhbGUYECABKAsyDi5jb21tb24uTG9jYWxlUgZsb2NhbGUSMQoJdmll",
            "d190eXBlGA0gASgOMhQuZXZlbnQuVmlldy5WaWV3VHlwZVIIdmlld1R5cGUS",
            "OAoNd2ViX3BhZ2VfdmlldxgOIAEoCzISLmV2ZW50LldlYlBhZ2VWaWV3SABS",
            "C3dlYlBhZ2VWaWV3Ej4KD2FwcF9zY3JlZW5fdmlldxgPIAEoCzIULmV2ZW50",
            "LkFwcFNjcmVlblZpZXdIAFINYXBwU2NyZWVuVmlldxJDCg5pZF9wcm92ZW5h",
            "bmNlcxgSIAEoCzIcLmV2ZW50LklkZW50aWZpZXJQcm92ZW5hbmNlc1INaWRQ",
            "cm92ZW5hbmNlcyI/CghWaWV3VHlwZRIVChFVTktOT1dOX1ZJRVdfVFlQRRAA",
            "EgwKCFdFQl9QQUdFEAESDgoKQVBQX1NDUkVFThACQgkKB3VpX3R5cGVKBAgF",
            "EAZKBAgMEA0i/wQKCEF1dG9WaWV3Eh8KC3BsYXRmb3JtX2lkGAEgASgEUgpw",
            "bGF0Zm9ybUlkEi0KCXVzZXJfaW5mbxgCIAEoCzIQLmNvbW1vbi5Vc2VySW5m",
            "b1IIdXNlckluZm8SJgoGdGltaW5nGAMgASgLMg4uY29tbW9uLlRpbWluZ1IG",
            "dGltaW5nEjMKC2NsaWVudF9pbmZvGAQgASgLMhIuY29tbW9uLkNsaWVudElu",
            "Zm9SCmNsaWVudEluZm8SIAoMYXV0b192aWV3X2lkGAYgASgJUgphdXRvVmll",
            "d0lkEhcKB3ZpZXdfaWQYDiABKAlSBnZpZXdJZBIdCgpzZXNzaW9uX2lkGAcg",
            "ASgJUglzZXNzaW9uSWQSEgoEbmFtZRgIIAEoCVIEbmFtZRIsCgh1c2VfY2Fz",
            "ZRgJIAEoDjIRLmRlbGl2ZXJ5LlVzZUNhc2VSB3VzZUNhc2USMgoKcHJvcGVy",
            "dGllcxgKIAEoCzISLmNvbW1vbi5Qcm9wZXJ0aWVzUgpwcm9wZXJ0aWVzEiYK",
            "BmxvY2FsZRgLIAEoCzIOLmNvbW1vbi5Mb2NhbGVSBmxvY2FsZRI4Cg13ZWJf",
            "cGFnZV92aWV3GAwgASgLMhIuZXZlbnQuV2ViUGFnZVZpZXdIAFILd2ViUGFn",
            "ZVZpZXcSPgoPYXBwX3NjcmVlbl92aWV3GA0gASgLMhQuZXZlbnQuQXBwU2Ny",
            "ZWVuVmlld0gAUg1hcHBTY3JlZW5WaWV3EkMKDmlkX3Byb3ZlbmFuY2VzGA8g",
            "ASgLMhwuZXZlbnQuSWRlbnRpZmllclByb3ZlbmFuY2VzUg1pZFByb3ZlbmFu",
            "Y2VzQgkKB3VpX3R5cGVKBAgFEAYiIQoJSW5kZXhQYXRoEhQKBWluZGV4GAEg",
            "AygFUgVpbmRleCLHBQoKSW1wcmVzc2lvbhIfCgtwbGF0Zm9ybV9pZBgBIAEo",
            "BFIKcGxhdGZvcm1JZBItCgl1c2VyX2luZm8YAiABKAsyEC5jb21tb24uVXNl",
            "ckluZm9SCHVzZXJJbmZvEiYKBnRpbWluZxgDIAEoCzIOLmNvbW1vbi5UaW1p",
            "bmdSBnRpbWluZxIzCgtjbGllbnRfaW5mbxgEIAEoCzISLmNvbW1vbi5DbGll",
            "bnRJbmZvUgpjbGllbnRJbmZvEiMKDWltcHJlc3Npb25faWQYBiABKAlSDGlt",
            "cHJlc3Npb25JZBIhCgxpbnNlcnRpb25faWQYByABKAlSC2luc2VydGlvbklk",
            "Eh0KCnJlcXVlc3RfaWQYCCABKAlSCXJlcXVlc3RJZBIXCgd2aWV3X2lkGAog",
            "ASgJUgZ2aWV3SWQSIAoMYXV0b192aWV3X2lkGA8gASgJUgphdXRvVmlld0lk",
            "Eh0KCnNlc3Npb25faWQYCSABKAlSCXNlc3Npb25JZBIdCgpjb250ZW50X2lk",
            "GAwgASgJUgljb250ZW50SWQSPAoLc291cmNlX3R5cGUYDSABKA4yGy5ldmVu",
            "dC5JbXByZXNzaW9uU291cmNlVHlwZVIKc291cmNlVHlwZRI0ChZoYXNfc3Vw",
            "ZXJpbXBvc2VkX3ZpZXdzGA4gASgIUhRoYXNTdXBlcmltcG9zZWRWaWV3cxI5",
            "Cg9jbGllbnRfcG9zaXRpb24YECABKAsyEC5ldmVudC5JbmRleFBhdGhSDmNs",
            "aWVudFBvc2l0aW9uEkMKDmlkX3Byb3ZlbmFuY2VzGBEgASgLMhwuZXZlbnQu",
            "SWRlbnRpZmllclByb3ZlbmFuY2VzUg1pZFByb3ZlbmFuY2VzEjIKCnByb3Bl",
            "cnRpZXMYCyABKAsyEi5jb21tb24uUHJvcGVydGllc1IKcHJvcGVydGllc0oE",
            "CAUQBiIvCg5OYXZpZ2F0ZUFjdGlvbhIdCgp0YXJnZXRfdXJsGAEgASgJUgl0",
            "YXJnZXRVcmwi8gcKBkFjdGlvbhIfCgtwbGF0Zm9ybV9pZBgBIAEoBFIKcGxh",
            "dGZvcm1JZBItCgl1c2VyX2luZm8YAiABKAsyEC5jb21tb24uVXNlckluZm9S",
            "CHVzZXJJbmZvEiYKBnRpbWluZxgDIAEoCzIOLmNvbW1vbi5UaW1pbmdSBnRp",
            "bWluZxIzCgtjbGllbnRfaW5mbxgEIAEoCzISLmNvbW1vbi5DbGllbnRJbmZv",
            "UgpjbGllbnRJbmZvEhsKCWFjdGlvbl9pZBgGIAEoCVIIYWN0aW9uSWQSIwoN",
            "aW1wcmVzc2lvbl9pZBgHIAEoCVIMaW1wcmVzc2lvbklkEiEKDGluc2VydGlv",
            "bl9pZBgIIAEoCVILaW5zZXJ0aW9uSWQSHQoKcmVxdWVzdF9pZBgJIAEoCVIJ",
            "cmVxdWVzdElkEhcKB3ZpZXdfaWQYCyABKAlSBnZpZXdJZBIgCgxhdXRvX3Zp",
            "ZXdfaWQYFyABKAlSCmF1dG9WaWV3SWQSHQoKc2Vzc2lvbl9pZBgKIAEoCVIJ",
            "c2Vzc2lvbklkEh0KCmNvbnRlbnRfaWQYFSABKAlSCWNvbnRlbnRJZBISCgRu",
            "YW1lGAwgASgJUgRuYW1lEjIKC2FjdGlvbl90eXBlGA4gASgOMhEuZXZlbnQu",
            "QWN0aW9uVHlwZVIKYWN0aW9uVHlwZRIsChJjdXN0b21fYWN0aW9uX3R5cGUY",
            "DyABKAlSEGN1c3RvbUFjdGlvblR5cGUSHQoKZWxlbWVudF9pZBgRIAEoCVIJ",
            "ZWxlbWVudElkEkAKD25hdmlnYXRlX2FjdGlvbhgSIAEoCzIVLmV2ZW50Lk5h",
            "dmlnYXRlQWN0aW9uSABSDm5hdmlnYXRlQWN0aW9uEjQKFmhhc19zdXBlcmlt",
            "cG9zZWRfdmlld3MYFiABKAhSFGhhc1N1cGVyaW1wb3NlZFZpZXdzEjkKD2Ns",
            "aWVudF9wb3NpdGlvbhgYIAEoCzIQLmV2ZW50LkluZGV4UGF0aFIOY2xpZW50",
            "UG9zaXRpb24SQwoOaWRfcHJvdmVuYW5jZXMYGSABKAsyHC5ldmVudC5JZGVu",
            "dGlmaWVyUHJvdmVuYW5jZXNSDWlkUHJvdmVuYW5jZXMSMgoKcHJvcGVydGll",
            "cxgUIAEoCzISLmNvbW1vbi5Qcm9wZXJ0aWVzUgpwcm9wZXJ0aWVzEiYKBmRl",
            "dmljZRgaIAEoCzIOLmNvbW1vbi5EZXZpY2VSBmRldmljZRIkCgRjYXJ0GBwg",
            "ASgLMgsuZXZlbnQuQ2FydEgBUgRjYXJ0iAEBQggKBmFjdGlvbkIHCgVfY2Fy",
            "dEoECAUQBkoECA0QDkoECBAQEUoECBMQFEoECBsQHCI2CgRDYXJ0Ei4KCGNv",
            "bnRlbnRzGAEgAygLMhIuZXZlbnQuQ2FydENvbnRlbnRSCGNvbnRlbnRzIn0K",
            "C0NhcnRDb250ZW50Eh0KCmNvbnRlbnRfaWQYASABKAlSCWNvbnRlbnRJZBIa",
            "CghxdWFudGl0eRgCIAEoA1IIcXVhbnRpdHkSMwoOcHJpY2VfcGVyX3VuaXQY",
            "AyABKAsyDS5jb21tb24uTW9uZXlSDHByaWNlUGVyVW5pdCJNCgtBdHRyaWJ1",
            "dGlvbhIZCghtb2RlbF9pZBgBIAEoBFIHbW9kZWxJZBIjCg1jcmVkaXRfbWls",
            "bGlzGAIgASgFUgxjcmVkaXRNaWxsaXMiewoISU9TRXJyb3ISEgoEY29kZRgB",
            "IAEoBVIEY29kZRIWCgZkb21haW4YAiABKAlSBmRvbWFpbhIgCgtkZXNjcmlw",
            "dGlvbhgDIAEoCVILZGVzY3JpcHRpb24SIQoMYmF0Y2hfbnVtYmVyGAQgASgF",
            "UgtiYXRjaE51bWJlciJhCgxFcnJvckhpc3RvcnkSLgoKaW9zX2Vycm9ycxgB",
            "IAMoCzIPLmV2ZW50LklPU0Vycm9yUglpb3NFcnJvcnMSIQoMdG90YWxfZXJy",
            "b3JzGAIgASgFUgt0b3RhbEVycm9ycyLAAgoVQW5jZXN0b3JJZEhpc3RvcnlJ",
            "dGVtEh8KC2FuY2VzdG9yX2lkGAEgASgJUgphbmNlc3RvcklkEiwKCnVzZXJf",
            "ZXZlbnQYAiABKAsyCy5ldmVudC5Vc2VySABSCXVzZXJFdmVudBI8ChpzZXNz",
            "aW9uX2lkX2Zyb21fdXNlcl9ldmVudBgDIAEoCUgAUhZzZXNzaW9uSWRGcm9t",
            "VXNlckV2ZW50EiwKCnZpZXdfZXZlbnQYBCABKAsyCy5ldmVudC5WaWV3SABS",
            "CXZpZXdFdmVudBI5Cg9hdXRvX3ZpZXdfZXZlbnQYBiABKAsyDy5ldmVudC5B",
            "dXRvVmlld0gAUg1hdXRvVmlld0V2ZW50EiEKDGJhdGNoX251bWJlchgFIAEo",
            "BVILYmF0Y2hOdW1iZXJCDgoMbG9nZ2VkX2V2ZW50IqMEChFBbmNlc3Rvcklk",
            "SGlzdG9yeRJLChNsb2dfdXNlcl9pZF9oaXN0b3J5GAEgAygLMhwuZXZlbnQu",
            "QW5jZXN0b3JJZEhpc3RvcnlJdGVtUhBsb2dVc2VySWRIaXN0b3J5EjgKGXRv",
            "dGFsX2xvZ191c2VyX2lkc19sb2dnZWQYAiABKAVSFXRvdGFsTG9nVXNlcklk",
            "c0xvZ2dlZBJKChJzZXNzaW9uX2lkX2hpc3RvcnkYAyADKAsyHC5ldmVudC5B",
            "bmNlc3RvcklkSGlzdG9yeUl0ZW1SEHNlc3Npb25JZEhpc3RvcnkSNwoYdG90",
            "YWxfc2Vzc2lvbl9pZHNfbG9nZ2VkGAQgASgFUhV0b3RhbFNlc3Npb25JZHNM",
            "b2dnZWQSRAoPdmlld19pZF9oaXN0b3J5GAUgAygLMhwuZXZlbnQuQW5jZXN0",
            "b3JJZEhpc3RvcnlJdGVtUg12aWV3SWRIaXN0b3J5EjEKFXRvdGFsX3ZpZXdf",
            "aWRzX2xvZ2dlZBgGIAEoBVISdG90YWxWaWV3SWRzTG9nZ2VkEk0KFGF1dG9f",
            "dmlld19pZF9oaXN0b3J5GAcgAygLMhwuZXZlbnQuQW5jZXN0b3JJZEhpc3Rv",
            "cnlJdGVtUhFhdXRvVmlld0lkSGlzdG9yeRI6Chp0b3RhbF9hdXRvX3ZpZXdf",
            "aWRzX2xvZ2dlZBgIIAEoBVIWdG90YWxBdXRvVmlld0lkc0xvZ2dlZCLGAwoR",
            "TW9iaWxlRGlhZ25vc3RpY3MSKwoRZGV2aWNlX2lkZW50aWZpZXIYASABKAlS",
            "EGRldmljZUlkZW50aWZpZXISKQoOY2xpZW50X3ZlcnNpb24YAiABKAlCAhgB",
            "Ug1jbGllbnRWZXJzaW9uEjwKGHByb21vdGVkX2xpYnJhcnlfdmVyc2lvbhgD",
            "IAEoCUICGAFSFnByb21vdGVkTGlicmFyeVZlcnNpb24SKwoRYmF0Y2hlc19h",
            "dHRlbXB0ZWQYBCABKAVSEGJhdGNoZXNBdHRlbXB0ZWQSOgoZYmF0Y2hlc19z",
            "ZW50X3N1Y2Nlc3NmdWxseRgFIAEoBVIXYmF0Y2hlc1NlbnRTdWNjZXNzZnVs",
            "bHkSLgoTYmF0Y2hlc193aXRoX2Vycm9ycxgGIAEoBVIRYmF0Y2hlc1dpdGhF",
            "cnJvcnMSOAoNZXJyb3JfaGlzdG9yeRgHIAEoCzITLmV2ZW50LkVycm9ySGlz",
            "dG9yeVIMZXJyb3JIaXN0b3J5EkgKE2FuY2VzdG9yX2lkX2hpc3RvcnkYCCAB",
            "KAsyGC5ldmVudC5BbmNlc3RvcklkSGlzdG9yeVIRYW5jZXN0b3JJZEhpc3Rv",
            "cnkinAIKC0RpYWdub3N0aWNzEh8KC3BsYXRmb3JtX2lkGAEgASgEUgpwbGF0",
            "Zm9ybUlkEi0KCXVzZXJfaW5mbxgCIAEoCzIQLmNvbW1vbi5Vc2VySW5mb1II",
            "dXNlckluZm8SJgoGdGltaW5nGAMgASgLMg4uY29tbW9uLlRpbWluZ1IGdGlt",
            "aW5nEjMKC2NsaWVudF9pbmZvGAQgASgLMhIuY29tbW9uLkNsaWVudEluZm9S",
            "CmNsaWVudEluZm8SSQoSbW9iaWxlX2RpYWdub3N0aWNzGAUgASgLMhguZXZl",
            "bnQuTW9iaWxlRGlhZ25vc3RpY3NIAFIRbW9iaWxlRGlhZ25vc3RpY3NCFQoT",
            "ZGlhZ25vc3RpY3NfbWVzc2FnZSLlBQoKTG9nUmVxdWVzdBIfCgtwbGF0Zm9y",
            "bV9pZBgBIAEoBFIKcGxhdGZvcm1JZBItCgl1c2VyX2luZm8YAiABKAsyEC5j",
            "b21tb24uVXNlckluZm9SCHVzZXJJbmZvEiYKBnRpbWluZxgDIAEoCzIOLmNv",
            "bW1vbi5UaW1pbmdSBnRpbWluZxIzCgtjbGllbnRfaW5mbxgEIAEoCzISLmNv",
            "bW1vbi5DbGllbnRJbmZvUgpjbGllbnRJbmZvEiYKBmRldmljZRgYIAEoCzIO",
            "LmNvbW1vbi5EZXZpY2VSBmRldmljZRIfCgR1c2VyGAcgAygLMgsuZXZlbnQu",
            "VXNlclIEdXNlchJEChFjb2hvcnRfbWVtYmVyc2hpcBgIIAMoCzIXLmV2ZW50",
            "LkNvaG9ydE1lbWJlcnNoaXBSEGNvaG9ydE1lbWJlcnNoaXASHwoEdmlldxgL",
            "IAMoCzILLmV2ZW50LlZpZXdSBHZpZXcSLAoJYXV0b192aWV3GBkgAygLMg8u",
            "ZXZlbnQuQXV0b1ZpZXdSCGF1dG9WaWV3EisKB3JlcXVlc3QYDCADKAsyES5k",
            "ZWxpdmVyeS5SZXF1ZXN0UgdyZXF1ZXN0EjEKCWluc2VydGlvbhgNIAMoCzIT",
            "LmRlbGl2ZXJ5Lkluc2VydGlvblIJaW5zZXJ0aW9uEjEKCmltcHJlc3Npb24Y",
            "DiADKAsyES5ldmVudC5JbXByZXNzaW9uUgppbXByZXNzaW9uEiUKBmFjdGlv",
            "bhgPIAMoCzINLmV2ZW50LkFjdGlvblIGYWN0aW9uEjgKDGRlbGl2ZXJ5X2xv",
            "ZxgSIAMoCzIVLmRlbGl2ZXJ5LkRlbGl2ZXJ5TG9nUgtkZWxpdmVyeUxvZxI0",
            "CgtkaWFnbm9zdGljcxgXIAMoCzISLmV2ZW50LkRpYWdub3N0aWNzUgtkaWFn",
            "bm9zdGljc0oECAUQBkoECAkQCkoECAoQC0oECBAQEUoECBEQEkoECBMQFypj",
            "ChRJZGVudGlmaWVyUHJvdmVuYW5jZRILCgdVTktOT1dOEAASCAoETlVMTBAB",
            "EgkKBUVNUFRZEAISEQoNQVVUT0dFTkVSQVRFRBADEhYKElBMQVRGT1JNX1NQ",
            "RUNJRklFRBAEKmoKCUNvaG9ydEFybRIRCg1VTktOT1dOX0dST1VQEAASCwoH",
            "Q09OVFJPTBABEg0KCVRSRUFUTUVOVBACEg4KClRSRUFUTUVOVDEQAxIOCgpU",
            "UkVBVE1FTlQyEAQSDgoKVFJFQVRNRU5UMxAFKlwKFEltcHJlc3Npb25Tb3Vy",
            "Y2VUeXBlEiIKHlVOS05PV05fSU1QUkVTU0lPTl9TT1VSQ0VfVFlQRRAAEgwK",
            "CERFTElWRVJZEAESEgoOQ0xJRU5UX0JBQ0tFTkQQAiqLAwoKQWN0aW9uVHlw",
            "ZRIXChNVTktOT1dOX0FDVElPTl9UWVBFEAASFgoSQ1VTVE9NX0FDVElPTl9U",
            "WVBFEAESDAoITkFWSUdBVEUQAhIPCgtBRERfVE9fQ0FSVBAEEhQKEFJFTU9W",
            "RV9GUk9NX0NBUlQQChIMCghDSEVDS09VVBAIEgwKCFBVUkNIQVNFEAMSCQoF",
            "U0hBUkUQBRIICgRMSUtFEAYSCgoGVU5MSUtFEAkSCwoHQ09NTUVOVBAHEg4K",
            "Ck1BS0VfT0ZGRVIQCxIQCgxBU0tfUVVFU1RJT04QDBITCg9BTlNXRVJfUVVF",
            "U1RJT04QDRIUChBDT01QTEVURV9TSUdOX0lOEA4SFAoQQ09NUExFVEVfU0lH",
            "Tl9VUBAPEgwKCEJPT0tNQVJLEBASEwoPUkVNT1ZFX0JPT0tNQVJLEBESDwoL",
            "QUREX1RPX0xJU1QQEhIUChBSRU1PVkVfRlJPTV9MSVNUEBMSCgoGRk9MTE9X",
            "EBQSDAoIVU5GT0xMT1cQFSIGCP8BEP8BQlkKF2FpLnByb21vdGVkLnByb3Rv",
            "LmV2ZW50QgVFdmVudFABWjVnaXRodWIuY29tL3Byb21vdGVkYWkvc2NoZW1h",
            "L2dlbmVyYXRlZC9nby9wcm90by9ldmVudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Promoted.Common.CommonReflection.Descriptor, global::Promoted.Delivery.DeliveryReflection.Descriptor, global::Promoted.Delivery.ExecutionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Event.IdentifierProvenance), typeof(global::Event.CohortArm), typeof(global::Event.ImpressionSourceType), typeof(global::Event.ActionType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.JoinedIdentifiers), global::Event.JoinedIdentifiers.Parser, new[]{ "PlatformId", "UserId", "LogUserId", "AnonUserId", "SessionId", "ViewId", "AutoViewId", "RequestId", "InsertionId", "ImpressionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.IdentifierProvenances), global::Event.IdentifierProvenances.Parser, new[]{ "UserIdProvenance", "LogUserIdProvenance", "SessionIdProvenance", "ViewIdProvenance", "AutoViewIdProvenance", "InsertionIdProvenance", "ImpressionIdProvenance", "ActionIdProvenance", "ContentIdProvenance", "RequestIdProvenance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.User), global::Event.User.Parser, new[]{ "PlatformId", "UserInfo", "Timing", "ClientInfo", "IdProvenances", "Properties" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.CohortMembership), global::Event.CohortMembership.Parser, new[]{ "PlatformId", "UserInfo", "Timing", "ClientInfo", "MembershipId", "CohortId", "Arm", "Properties" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.WebPageView), global::Event.WebPageView.Parser, new[]{ "Url", "Referrer", "DocumentSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.AppScreenView), global::Event.AppScreenView.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.View), global::Event.View.Parser, new[]{ "PlatformId", "UserInfo", "Timing", "ClientInfo", "ViewId", "AutoViewId", "SessionId", "ContentId", "Name", "UseCase", "SearchQuery", "Properties", "Locale", "ViewType", "WebPageView", "AppScreenView", "IdProvenances" }, new[]{ "UiType" }, new[]{ typeof(global::Event.View.Types.ViewType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.AutoView), global::Event.AutoView.Parser, new[]{ "PlatformId", "UserInfo", "Timing", "ClientInfo", "AutoViewId", "ViewId", "SessionId", "Name", "UseCase", "Properties", "Locale", "WebPageView", "AppScreenView", "IdProvenances" }, new[]{ "UiType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.IndexPath), global::Event.IndexPath.Parser, new[]{ "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.Impression), global::Event.Impression.Parser, new[]{ "PlatformId", "UserInfo", "Timing", "ClientInfo", "ImpressionId", "InsertionId", "RequestId", "ViewId", "AutoViewId", "SessionId", "ContentId", "SourceType", "HasSuperimposedViews", "ClientPosition", "IdProvenances", "Properties" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.NavigateAction), global::Event.NavigateAction.Parser, new[]{ "TargetUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.Action), global::Event.Action.Parser, new[]{ "PlatformId", "UserInfo", "Timing", "ClientInfo", "ActionId", "ImpressionId", "InsertionId", "RequestId", "ViewId", "AutoViewId", "SessionId", "ContentId", "Name", "ActionType", "CustomActionType", "ElementId", "NavigateAction", "HasSuperimposedViews", "ClientPosition", "IdProvenances", "Properties", "Device", "Cart" }, new[]{ "Action", "Cart" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.Cart), global::Event.Cart.Parser, new[]{ "Contents" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.CartContent), global::Event.CartContent.Parser, new[]{ "ContentId", "Quantity", "PricePerUnit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.Attribution), global::Event.Attribution.Parser, new[]{ "ModelId", "CreditMillis" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.IOSError), global::Event.IOSError.Parser, new[]{ "Code", "Domain", "Description", "BatchNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.ErrorHistory), global::Event.ErrorHistory.Parser, new[]{ "IosErrors", "TotalErrors" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.AncestorIdHistoryItem), global::Event.AncestorIdHistoryItem.Parser, new[]{ "AncestorId", "UserEvent", "SessionIdFromUserEvent", "ViewEvent", "AutoViewEvent", "BatchNumber" }, new[]{ "LoggedEvent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.AncestorIdHistory), global::Event.AncestorIdHistory.Parser, new[]{ "LogUserIdHistory", "TotalLogUserIdsLogged", "SessionIdHistory", "TotalSessionIdsLogged", "ViewIdHistory", "TotalViewIdsLogged", "AutoViewIdHistory", "TotalAutoViewIdsLogged" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.MobileDiagnostics), global::Event.MobileDiagnostics.Parser, new[]{ "DeviceIdentifier", "ClientVersion", "PromotedLibraryVersion", "BatchesAttempted", "BatchesSentSuccessfully", "BatchesWithErrors", "ErrorHistory", "AncestorIdHistory" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.Diagnostics), global::Event.Diagnostics.Parser, new[]{ "PlatformId", "UserInfo", "Timing", "ClientInfo", "MobileDiagnostics" }, new[]{ "DiagnosticsMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Event.LogRequest), global::Event.LogRequest.Parser, new[]{ "PlatformId", "UserInfo", "Timing", "ClientInfo", "Device", "User", "CohortMembership", "View", "AutoView", "Request", "Insertion", "Impression", "Action", "DeliveryLog", "Diagnostics" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum IdentifierProvenance {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("NULL")] Null = 1,
    [pbr::OriginalName("EMPTY")] Empty = 2,
    [pbr::OriginalName("AUTOGENERATED")] Autogenerated = 3,
    [pbr::OriginalName("PLATFORM_SPECIFIED")] PlatformSpecified = 4,
  }

  public enum CohortArm {
    [pbr::OriginalName("UNKNOWN_GROUP")] UnknownGroup = 0,
    [pbr::OriginalName("CONTROL")] Control = 1,
    [pbr::OriginalName("TREATMENT")] Treatment = 2,
    [pbr::OriginalName("TREATMENT1")] Treatment1 = 3,
    [pbr::OriginalName("TREATMENT2")] Treatment2 = 4,
    [pbr::OriginalName("TREATMENT3")] Treatment3 = 5,
  }

  public enum ImpressionSourceType {
    [pbr::OriginalName("UNKNOWN_IMPRESSION_SOURCE_TYPE")] UnknownImpressionSourceType = 0,
    [pbr::OriginalName("DELIVERY")] Delivery = 1,
    [pbr::OriginalName("CLIENT_BACKEND")] ClientBackend = 2,
  }

  public enum ActionType {
    [pbr::OriginalName("UNKNOWN_ACTION_TYPE")] UnknownActionType = 0,
    [pbr::OriginalName("CUSTOM_ACTION_TYPE")] CustomActionType = 1,
    [pbr::OriginalName("NAVIGATE")] Navigate = 2,
    [pbr::OriginalName("ADD_TO_CART")] AddToCart = 4,
    [pbr::OriginalName("REMOVE_FROM_CART")] RemoveFromCart = 10,
    [pbr::OriginalName("CHECKOUT")] Checkout = 8,
    [pbr::OriginalName("PURCHASE")] Purchase = 3,
    [pbr::OriginalName("SHARE")] Share = 5,
    [pbr::OriginalName("LIKE")] Like = 6,
    [pbr::OriginalName("UNLIKE")] Unlike = 9,
    [pbr::OriginalName("COMMENT")] Comment = 7,
    [pbr::OriginalName("MAKE_OFFER")] MakeOffer = 11,
    [pbr::OriginalName("ASK_QUESTION")] AskQuestion = 12,
    [pbr::OriginalName("ANSWER_QUESTION")] AnswerQuestion = 13,
    [pbr::OriginalName("COMPLETE_SIGN_IN")] CompleteSignIn = 14,
    [pbr::OriginalName("COMPLETE_SIGN_UP")] CompleteSignUp = 15,
    [pbr::OriginalName("BOOKMARK")] Bookmark = 16,
    [pbr::OriginalName("REMOVE_BOOKMARK")] RemoveBookmark = 17,
    [pbr::OriginalName("ADD_TO_LIST")] AddToList = 18,
    [pbr::OriginalName("REMOVE_FROM_LIST")] RemoveFromList = 19,
    [pbr::OriginalName("FOLLOW")] Follow = 20,
    [pbr::OriginalName("UNFOLLOW")] Unfollow = 21,
  }

  #endregion

  #region Messages
  public sealed partial class JoinedIdentifiers : pb::IMessage<JoinedIdentifiers>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JoinedIdentifiers> _parser = new pb::MessageParser<JoinedIdentifiers>(() => new JoinedIdentifiers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinedIdentifiers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinedIdentifiers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinedIdentifiers(JoinedIdentifiers other) : this() {
      platformId_ = other.platformId_;
      userId_ = other.userId_;
      logUserId_ = other.logUserId_;
      anonUserId_ = other.anonUserId_;
      sessionId_ = other.sessionId_;
      viewId_ = other.viewId_;
      autoViewId_ = other.autoViewId_;
      requestId_ = other.requestId_;
      insertionId_ = other.insertionId_;
      impressionId_ = other.impressionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinedIdentifiers Clone() {
      return new JoinedIdentifiers(this);
    }

    /// <summary>Field number for the "platform_id" field.</summary>
    public const int PlatformIdFieldNumber = 1;
    private ulong platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "log_user_id" field.</summary>
    public const int LogUserIdFieldNumber = 3;
    private string logUserId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogUserId {
      get { return logUserId_; }
      set {
        logUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "anon_user_id" field.</summary>
    public const int AnonUserIdFieldNumber = 10;
    private string anonUserId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AnonUserId {
      get { return anonUserId_; }
      set {
        anonUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 4;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "view_id" field.</summary>
    public const int ViewIdFieldNumber = 5;
    private string viewId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ViewId {
      get { return viewId_; }
      set {
        viewId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "auto_view_id" field.</summary>
    public const int AutoViewIdFieldNumber = 9;
    private string autoViewId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AutoViewId {
      get { return autoViewId_; }
      set {
        autoViewId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 6;
    private string requestId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "insertion_id" field.</summary>
    public const int InsertionIdFieldNumber = 7;
    private string insertionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InsertionId {
      get { return insertionId_; }
      set {
        insertionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "impression_id" field.</summary>
    public const int ImpressionIdFieldNumber = 8;
    private string impressionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImpressionId {
      get { return impressionId_; }
      set {
        impressionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinedIdentifiers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinedIdentifiers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlatformId != other.PlatformId) return false;
      if (UserId != other.UserId) return false;
      if (LogUserId != other.LogUserId) return false;
      if (AnonUserId != other.AnonUserId) return false;
      if (SessionId != other.SessionId) return false;
      if (ViewId != other.ViewId) return false;
      if (AutoViewId != other.AutoViewId) return false;
      if (RequestId != other.RequestId) return false;
      if (InsertionId != other.InsertionId) return false;
      if (ImpressionId != other.ImpressionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlatformId != 0UL) hash ^= PlatformId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (LogUserId.Length != 0) hash ^= LogUserId.GetHashCode();
      if (AnonUserId.Length != 0) hash ^= AnonUserId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (ViewId.Length != 0) hash ^= ViewId.GetHashCode();
      if (AutoViewId.Length != 0) hash ^= AutoViewId.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (InsertionId.Length != 0) hash ^= InsertionId.GetHashCode();
      if (ImpressionId.Length != 0) hash ^= ImpressionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (LogUserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LogUserId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SessionId);
      }
      if (ViewId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ViewId);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RequestId);
      }
      if (InsertionId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(InsertionId);
      }
      if (ImpressionId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ImpressionId);
      }
      if (AutoViewId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(AutoViewId);
      }
      if (AnonUserId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(AnonUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (LogUserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LogUserId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SessionId);
      }
      if (ViewId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ViewId);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RequestId);
      }
      if (InsertionId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(InsertionId);
      }
      if (ImpressionId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ImpressionId);
      }
      if (AutoViewId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(AutoViewId);
      }
      if (AnonUserId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(AnonUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlatformId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlatformId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (LogUserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogUserId);
      }
      if (AnonUserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnonUserId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (ViewId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViewId);
      }
      if (AutoViewId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AutoViewId);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (InsertionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InsertionId);
      }
      if (ImpressionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImpressionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinedIdentifiers other) {
      if (other == null) {
        return;
      }
      if (other.PlatformId != 0UL) {
        PlatformId = other.PlatformId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.LogUserId.Length != 0) {
        LogUserId = other.LogUserId;
      }
      if (other.AnonUserId.Length != 0) {
        AnonUserId = other.AnonUserId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.ViewId.Length != 0) {
        ViewId = other.ViewId;
      }
      if (other.AutoViewId.Length != 0) {
        AutoViewId = other.AutoViewId;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      if (other.InsertionId.Length != 0) {
        InsertionId = other.InsertionId;
      }
      if (other.ImpressionId.Length != 0) {
        ImpressionId = other.ImpressionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            LogUserId = input.ReadString();
            break;
          }
          case 34: {
            SessionId = input.ReadString();
            break;
          }
          case 42: {
            ViewId = input.ReadString();
            break;
          }
          case 50: {
            RequestId = input.ReadString();
            break;
          }
          case 58: {
            InsertionId = input.ReadString();
            break;
          }
          case 66: {
            ImpressionId = input.ReadString();
            break;
          }
          case 74: {
            AutoViewId = input.ReadString();
            break;
          }
          case 82: {
            AnonUserId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            LogUserId = input.ReadString();
            break;
          }
          case 34: {
            SessionId = input.ReadString();
            break;
          }
          case 42: {
            ViewId = input.ReadString();
            break;
          }
          case 50: {
            RequestId = input.ReadString();
            break;
          }
          case 58: {
            InsertionId = input.ReadString();
            break;
          }
          case 66: {
            ImpressionId = input.ReadString();
            break;
          }
          case 74: {
            AutoViewId = input.ReadString();
            break;
          }
          case 82: {
            AnonUserId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IdentifierProvenances : pb::IMessage<IdentifierProvenances>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IdentifierProvenances> _parser = new pb::MessageParser<IdentifierProvenances>(() => new IdentifierProvenances());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdentifierProvenances> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentifierProvenances() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentifierProvenances(IdentifierProvenances other) : this() {
      userIdProvenance_ = other.userIdProvenance_;
      logUserIdProvenance_ = other.logUserIdProvenance_;
      sessionIdProvenance_ = other.sessionIdProvenance_;
      viewIdProvenance_ = other.viewIdProvenance_;
      autoViewIdProvenance_ = other.autoViewIdProvenance_;
      insertionIdProvenance_ = other.insertionIdProvenance_;
      impressionIdProvenance_ = other.impressionIdProvenance_;
      actionIdProvenance_ = other.actionIdProvenance_;
      contentIdProvenance_ = other.contentIdProvenance_;
      requestIdProvenance_ = other.requestIdProvenance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentifierProvenances Clone() {
      return new IdentifierProvenances(this);
    }

    /// <summary>Field number for the "user_id_provenance" field.</summary>
    public const int UserIdProvenanceFieldNumber = 1;
    private global::Event.IdentifierProvenance userIdProvenance_ = global::Event.IdentifierProvenance.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenance UserIdProvenance {
      get { return userIdProvenance_; }
      set {
        userIdProvenance_ = value;
      }
    }

    /// <summary>Field number for the "log_user_id_provenance" field.</summary>
    public const int LogUserIdProvenanceFieldNumber = 9;
    private global::Event.IdentifierProvenance logUserIdProvenance_ = global::Event.IdentifierProvenance.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenance LogUserIdProvenance {
      get { return logUserIdProvenance_; }
      set {
        logUserIdProvenance_ = value;
      }
    }

    /// <summary>Field number for the "session_id_provenance" field.</summary>
    public const int SessionIdProvenanceFieldNumber = 2;
    private global::Event.IdentifierProvenance sessionIdProvenance_ = global::Event.IdentifierProvenance.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenance SessionIdProvenance {
      get { return sessionIdProvenance_; }
      set {
        sessionIdProvenance_ = value;
      }
    }

    /// <summary>Field number for the "view_id_provenance" field.</summary>
    public const int ViewIdProvenanceFieldNumber = 3;
    private global::Event.IdentifierProvenance viewIdProvenance_ = global::Event.IdentifierProvenance.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenance ViewIdProvenance {
      get { return viewIdProvenance_; }
      set {
        viewIdProvenance_ = value;
      }
    }

    /// <summary>Field number for the "auto_view_id_provenance" field.</summary>
    public const int AutoViewIdProvenanceFieldNumber = 8;
    private global::Event.IdentifierProvenance autoViewIdProvenance_ = global::Event.IdentifierProvenance.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenance AutoViewIdProvenance {
      get { return autoViewIdProvenance_; }
      set {
        autoViewIdProvenance_ = value;
      }
    }

    /// <summary>Field number for the "insertion_id_provenance" field.</summary>
    public const int InsertionIdProvenanceFieldNumber = 10;
    private global::Event.IdentifierProvenance insertionIdProvenance_ = global::Event.IdentifierProvenance.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenance InsertionIdProvenance {
      get { return insertionIdProvenance_; }
      set {
        insertionIdProvenance_ = value;
      }
    }

    /// <summary>Field number for the "impression_id_provenance" field.</summary>
    public const int ImpressionIdProvenanceFieldNumber = 4;
    private global::Event.IdentifierProvenance impressionIdProvenance_ = global::Event.IdentifierProvenance.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenance ImpressionIdProvenance {
      get { return impressionIdProvenance_; }
      set {
        impressionIdProvenance_ = value;
      }
    }

    /// <summary>Field number for the "action_id_provenance" field.</summary>
    public const int ActionIdProvenanceFieldNumber = 5;
    private global::Event.IdentifierProvenance actionIdProvenance_ = global::Event.IdentifierProvenance.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenance ActionIdProvenance {
      get { return actionIdProvenance_; }
      set {
        actionIdProvenance_ = value;
      }
    }

    /// <summary>Field number for the "content_id_provenance" field.</summary>
    public const int ContentIdProvenanceFieldNumber = 6;
    private global::Event.IdentifierProvenance contentIdProvenance_ = global::Event.IdentifierProvenance.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenance ContentIdProvenance {
      get { return contentIdProvenance_; }
      set {
        contentIdProvenance_ = value;
      }
    }

    /// <summary>Field number for the "request_id_provenance" field.</summary>
    public const int RequestIdProvenanceFieldNumber = 7;
    private global::Event.IdentifierProvenance requestIdProvenance_ = global::Event.IdentifierProvenance.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenance RequestIdProvenance {
      get { return requestIdProvenance_; }
      set {
        requestIdProvenance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdentifierProvenances);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdentifierProvenances other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserIdProvenance != other.UserIdProvenance) return false;
      if (LogUserIdProvenance != other.LogUserIdProvenance) return false;
      if (SessionIdProvenance != other.SessionIdProvenance) return false;
      if (ViewIdProvenance != other.ViewIdProvenance) return false;
      if (AutoViewIdProvenance != other.AutoViewIdProvenance) return false;
      if (InsertionIdProvenance != other.InsertionIdProvenance) return false;
      if (ImpressionIdProvenance != other.ImpressionIdProvenance) return false;
      if (ActionIdProvenance != other.ActionIdProvenance) return false;
      if (ContentIdProvenance != other.ContentIdProvenance) return false;
      if (RequestIdProvenance != other.RequestIdProvenance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserIdProvenance != global::Event.IdentifierProvenance.Unknown) hash ^= UserIdProvenance.GetHashCode();
      if (LogUserIdProvenance != global::Event.IdentifierProvenance.Unknown) hash ^= LogUserIdProvenance.GetHashCode();
      if (SessionIdProvenance != global::Event.IdentifierProvenance.Unknown) hash ^= SessionIdProvenance.GetHashCode();
      if (ViewIdProvenance != global::Event.IdentifierProvenance.Unknown) hash ^= ViewIdProvenance.GetHashCode();
      if (AutoViewIdProvenance != global::Event.IdentifierProvenance.Unknown) hash ^= AutoViewIdProvenance.GetHashCode();
      if (InsertionIdProvenance != global::Event.IdentifierProvenance.Unknown) hash ^= InsertionIdProvenance.GetHashCode();
      if (ImpressionIdProvenance != global::Event.IdentifierProvenance.Unknown) hash ^= ImpressionIdProvenance.GetHashCode();
      if (ActionIdProvenance != global::Event.IdentifierProvenance.Unknown) hash ^= ActionIdProvenance.GetHashCode();
      if (ContentIdProvenance != global::Event.IdentifierProvenance.Unknown) hash ^= ContentIdProvenance.GetHashCode();
      if (RequestIdProvenance != global::Event.IdentifierProvenance.Unknown) hash ^= RequestIdProvenance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) UserIdProvenance);
      }
      if (SessionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SessionIdProvenance);
      }
      if (ViewIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ViewIdProvenance);
      }
      if (ImpressionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ImpressionIdProvenance);
      }
      if (ActionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ActionIdProvenance);
      }
      if (ContentIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ContentIdProvenance);
      }
      if (RequestIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) RequestIdProvenance);
      }
      if (AutoViewIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) AutoViewIdProvenance);
      }
      if (LogUserIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(72);
        output.WriteEnum((int) LogUserIdProvenance);
      }
      if (InsertionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(80);
        output.WriteEnum((int) InsertionIdProvenance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) UserIdProvenance);
      }
      if (SessionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SessionIdProvenance);
      }
      if (ViewIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ViewIdProvenance);
      }
      if (ImpressionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ImpressionIdProvenance);
      }
      if (ActionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ActionIdProvenance);
      }
      if (ContentIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ContentIdProvenance);
      }
      if (RequestIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(56);
        output.WriteEnum((int) RequestIdProvenance);
      }
      if (AutoViewIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) AutoViewIdProvenance);
      }
      if (LogUserIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(72);
        output.WriteEnum((int) LogUserIdProvenance);
      }
      if (InsertionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        output.WriteRawTag(80);
        output.WriteEnum((int) InsertionIdProvenance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UserIdProvenance);
      }
      if (LogUserIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LogUserIdProvenance);
      }
      if (SessionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SessionIdProvenance);
      }
      if (ViewIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ViewIdProvenance);
      }
      if (AutoViewIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AutoViewIdProvenance);
      }
      if (InsertionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InsertionIdProvenance);
      }
      if (ImpressionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ImpressionIdProvenance);
      }
      if (ActionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActionIdProvenance);
      }
      if (ContentIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentIdProvenance);
      }
      if (RequestIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestIdProvenance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdentifierProvenances other) {
      if (other == null) {
        return;
      }
      if (other.UserIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        UserIdProvenance = other.UserIdProvenance;
      }
      if (other.LogUserIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        LogUserIdProvenance = other.LogUserIdProvenance;
      }
      if (other.SessionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        SessionIdProvenance = other.SessionIdProvenance;
      }
      if (other.ViewIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        ViewIdProvenance = other.ViewIdProvenance;
      }
      if (other.AutoViewIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        AutoViewIdProvenance = other.AutoViewIdProvenance;
      }
      if (other.InsertionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        InsertionIdProvenance = other.InsertionIdProvenance;
      }
      if (other.ImpressionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        ImpressionIdProvenance = other.ImpressionIdProvenance;
      }
      if (other.ActionIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        ActionIdProvenance = other.ActionIdProvenance;
      }
      if (other.ContentIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        ContentIdProvenance = other.ContentIdProvenance;
      }
      if (other.RequestIdProvenance != global::Event.IdentifierProvenance.Unknown) {
        RequestIdProvenance = other.RequestIdProvenance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 16: {
            SessionIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 24: {
            ViewIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 32: {
            ImpressionIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 40: {
            ActionIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 48: {
            ContentIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 56: {
            RequestIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 64: {
            AutoViewIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 72: {
            LogUserIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 80: {
            InsertionIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 16: {
            SessionIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 24: {
            ViewIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 32: {
            ImpressionIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 40: {
            ActionIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 48: {
            ContentIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 56: {
            RequestIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 64: {
            AutoViewIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 72: {
            LogUserIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
          case 80: {
            InsertionIdProvenance = (global::Event.IdentifierProvenance) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class User : pb::IMessage<User>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      platformId_ = other.platformId_;
      userInfo_ = other.userInfo_ != null ? other.userInfo_.Clone() : null;
      timing_ = other.timing_ != null ? other.timing_.Clone() : null;
      clientInfo_ = other.clientInfo_ != null ? other.clientInfo_.Clone() : null;
      idProvenances_ = other.idProvenances_ != null ? other.idProvenances_.Clone() : null;
      properties_ = other.properties_ != null ? other.properties_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "platform_id" field.</summary>
    public const int PlatformIdFieldNumber = 1;
    private ulong platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    /// <summary>Field number for the "user_info" field.</summary>
    public const int UserInfoFieldNumber = 2;
    private global::Promoted.Common.UserInfo userInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.UserInfo UserInfo {
      get { return userInfo_; }
      set {
        userInfo_ = value;
      }
    }

    /// <summary>Field number for the "timing" field.</summary>
    public const int TimingFieldNumber = 3;
    private global::Promoted.Common.Timing timing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Timing Timing {
      get { return timing_; }
      set {
        timing_ = value;
      }
    }

    /// <summary>Field number for the "client_info" field.</summary>
    public const int ClientInfoFieldNumber = 4;
    private global::Promoted.Common.ClientInfo clientInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.ClientInfo ClientInfo {
      get { return clientInfo_; }
      set {
        clientInfo_ = value;
      }
    }

    /// <summary>Field number for the "id_provenances" field.</summary>
    public const int IdProvenancesFieldNumber = 7;
    private global::Event.IdentifierProvenances idProvenances_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenances IdProvenances {
      get { return idProvenances_; }
      set {
        idProvenances_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 6;
    private global::Promoted.Common.Properties properties_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Properties Properties {
      get { return properties_; }
      set {
        properties_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlatformId != other.PlatformId) return false;
      if (!object.Equals(UserInfo, other.UserInfo)) return false;
      if (!object.Equals(Timing, other.Timing)) return false;
      if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
      if (!object.Equals(IdProvenances, other.IdProvenances)) return false;
      if (!object.Equals(Properties, other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlatformId != 0UL) hash ^= PlatformId.GetHashCode();
      if (userInfo_ != null) hash ^= UserInfo.GetHashCode();
      if (timing_ != null) hash ^= Timing.GetHashCode();
      if (clientInfo_ != null) hash ^= ClientInfo.GetHashCode();
      if (idProvenances_ != null) hash ^= IdProvenances.GetHashCode();
      if (properties_ != null) hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (properties_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Properties);
      }
      if (idProvenances_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(IdProvenances);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (properties_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Properties);
      }
      if (idProvenances_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(IdProvenances);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlatformId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlatformId);
      }
      if (userInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInfo);
      }
      if (timing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timing);
      }
      if (clientInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
      }
      if (idProvenances_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdProvenances);
      }
      if (properties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Properties);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.PlatformId != 0UL) {
        PlatformId = other.PlatformId;
      }
      if (other.userInfo_ != null) {
        if (userInfo_ == null) {
          UserInfo = new global::Promoted.Common.UserInfo();
        }
        UserInfo.MergeFrom(other.UserInfo);
      }
      if (other.timing_ != null) {
        if (timing_ == null) {
          Timing = new global::Promoted.Common.Timing();
        }
        Timing.MergeFrom(other.Timing);
      }
      if (other.clientInfo_ != null) {
        if (clientInfo_ == null) {
          ClientInfo = new global::Promoted.Common.ClientInfo();
        }
        ClientInfo.MergeFrom(other.ClientInfo);
      }
      if (other.idProvenances_ != null) {
        if (idProvenances_ == null) {
          IdProvenances = new global::Event.IdentifierProvenances();
        }
        IdProvenances.MergeFrom(other.IdProvenances);
      }
      if (other.properties_ != null) {
        if (properties_ == null) {
          Properties = new global::Promoted.Common.Properties();
        }
        Properties.MergeFrom(other.Properties);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 50: {
            if (properties_ == null) {
              Properties = new global::Promoted.Common.Properties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 58: {
            if (idProvenances_ == null) {
              IdProvenances = new global::Event.IdentifierProvenances();
            }
            input.ReadMessage(IdProvenances);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 50: {
            if (properties_ == null) {
              Properties = new global::Promoted.Common.Properties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 58: {
            if (idProvenances_ == null) {
              IdProvenances = new global::Event.IdentifierProvenances();
            }
            input.ReadMessage(IdProvenances);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CohortMembership : pb::IMessage<CohortMembership>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CohortMembership> _parser = new pb::MessageParser<CohortMembership>(() => new CohortMembership());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CohortMembership> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CohortMembership() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CohortMembership(CohortMembership other) : this() {
      platformId_ = other.platformId_;
      userInfo_ = other.userInfo_ != null ? other.userInfo_.Clone() : null;
      timing_ = other.timing_ != null ? other.timing_.Clone() : null;
      clientInfo_ = other.clientInfo_ != null ? other.clientInfo_.Clone() : null;
      membershipId_ = other.membershipId_;
      cohortId_ = other.cohortId_;
      arm_ = other.arm_;
      properties_ = other.properties_ != null ? other.properties_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CohortMembership Clone() {
      return new CohortMembership(this);
    }

    /// <summary>Field number for the "platform_id" field.</summary>
    public const int PlatformIdFieldNumber = 1;
    private ulong platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    /// <summary>Field number for the "user_info" field.</summary>
    public const int UserInfoFieldNumber = 2;
    private global::Promoted.Common.UserInfo userInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.UserInfo UserInfo {
      get { return userInfo_; }
      set {
        userInfo_ = value;
      }
    }

    /// <summary>Field number for the "timing" field.</summary>
    public const int TimingFieldNumber = 3;
    private global::Promoted.Common.Timing timing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Timing Timing {
      get { return timing_; }
      set {
        timing_ = value;
      }
    }

    /// <summary>Field number for the "client_info" field.</summary>
    public const int ClientInfoFieldNumber = 4;
    private global::Promoted.Common.ClientInfo clientInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.ClientInfo ClientInfo {
      get { return clientInfo_; }
      set {
        clientInfo_ = value;
      }
    }

    /// <summary>Field number for the "membership_id" field.</summary>
    public const int MembershipIdFieldNumber = 6;
    private string membershipId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MembershipId {
      get { return membershipId_; }
      set {
        membershipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cohort_id" field.</summary>
    public const int CohortIdFieldNumber = 8;
    private string cohortId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CohortId {
      get { return cohortId_; }
      set {
        cohortId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "arm" field.</summary>
    public const int ArmFieldNumber = 9;
    private global::Event.CohortArm arm_ = global::Event.CohortArm.UnknownGroup;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.CohortArm Arm {
      get { return arm_; }
      set {
        arm_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 10;
    private global::Promoted.Common.Properties properties_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Properties Properties {
      get { return properties_; }
      set {
        properties_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CohortMembership);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CohortMembership other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlatformId != other.PlatformId) return false;
      if (!object.Equals(UserInfo, other.UserInfo)) return false;
      if (!object.Equals(Timing, other.Timing)) return false;
      if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
      if (MembershipId != other.MembershipId) return false;
      if (CohortId != other.CohortId) return false;
      if (Arm != other.Arm) return false;
      if (!object.Equals(Properties, other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlatformId != 0UL) hash ^= PlatformId.GetHashCode();
      if (userInfo_ != null) hash ^= UserInfo.GetHashCode();
      if (timing_ != null) hash ^= Timing.GetHashCode();
      if (clientInfo_ != null) hash ^= ClientInfo.GetHashCode();
      if (MembershipId.Length != 0) hash ^= MembershipId.GetHashCode();
      if (CohortId.Length != 0) hash ^= CohortId.GetHashCode();
      if (Arm != global::Event.CohortArm.UnknownGroup) hash ^= Arm.GetHashCode();
      if (properties_ != null) hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (MembershipId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MembershipId);
      }
      if (CohortId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CohortId);
      }
      if (Arm != global::Event.CohortArm.UnknownGroup) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Arm);
      }
      if (properties_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Properties);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (MembershipId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MembershipId);
      }
      if (CohortId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CohortId);
      }
      if (Arm != global::Event.CohortArm.UnknownGroup) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Arm);
      }
      if (properties_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Properties);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlatformId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlatformId);
      }
      if (userInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInfo);
      }
      if (timing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timing);
      }
      if (clientInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
      }
      if (MembershipId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MembershipId);
      }
      if (CohortId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CohortId);
      }
      if (Arm != global::Event.CohortArm.UnknownGroup) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Arm);
      }
      if (properties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Properties);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CohortMembership other) {
      if (other == null) {
        return;
      }
      if (other.PlatformId != 0UL) {
        PlatformId = other.PlatformId;
      }
      if (other.userInfo_ != null) {
        if (userInfo_ == null) {
          UserInfo = new global::Promoted.Common.UserInfo();
        }
        UserInfo.MergeFrom(other.UserInfo);
      }
      if (other.timing_ != null) {
        if (timing_ == null) {
          Timing = new global::Promoted.Common.Timing();
        }
        Timing.MergeFrom(other.Timing);
      }
      if (other.clientInfo_ != null) {
        if (clientInfo_ == null) {
          ClientInfo = new global::Promoted.Common.ClientInfo();
        }
        ClientInfo.MergeFrom(other.ClientInfo);
      }
      if (other.MembershipId.Length != 0) {
        MembershipId = other.MembershipId;
      }
      if (other.CohortId.Length != 0) {
        CohortId = other.CohortId;
      }
      if (other.Arm != global::Event.CohortArm.UnknownGroup) {
        Arm = other.Arm;
      }
      if (other.properties_ != null) {
        if (properties_ == null) {
          Properties = new global::Promoted.Common.Properties();
        }
        Properties.MergeFrom(other.Properties);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 50: {
            MembershipId = input.ReadString();
            break;
          }
          case 66: {
            CohortId = input.ReadString();
            break;
          }
          case 72: {
            Arm = (global::Event.CohortArm) input.ReadEnum();
            break;
          }
          case 82: {
            if (properties_ == null) {
              Properties = new global::Promoted.Common.Properties();
            }
            input.ReadMessage(Properties);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 50: {
            MembershipId = input.ReadString();
            break;
          }
          case 66: {
            CohortId = input.ReadString();
            break;
          }
          case 72: {
            Arm = (global::Event.CohortArm) input.ReadEnum();
            break;
          }
          case 82: {
            if (properties_ == null) {
              Properties = new global::Promoted.Common.Properties();
            }
            input.ReadMessage(Properties);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebPageView : pb::IMessage<WebPageView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebPageView> _parser = new pb::MessageParser<WebPageView>(() => new WebPageView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebPageView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebPageView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebPageView(WebPageView other) : this() {
      url_ = other.url_;
      referrer_ = other.referrer_;
      documentSize_ = other.documentSize_ != null ? other.documentSize_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebPageView Clone() {
      return new WebPageView(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "referrer" field.</summary>
    public const int ReferrerFieldNumber = 3;
    private string referrer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Referrer {
      get { return referrer_; }
      set {
        referrer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "document_size" field.</summary>
    public const int DocumentSizeFieldNumber = 4;
    private global::Promoted.Common.Size documentSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Size DocumentSize {
      get { return documentSize_; }
      set {
        documentSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebPageView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebPageView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Referrer != other.Referrer) return false;
      if (!object.Equals(DocumentSize, other.DocumentSize)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Referrer.Length != 0) hash ^= Referrer.GetHashCode();
      if (documentSize_ != null) hash ^= DocumentSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (Referrer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Referrer);
      }
      if (documentSize_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DocumentSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (Referrer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Referrer);
      }
      if (documentSize_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DocumentSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Referrer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Referrer);
      }
      if (documentSize_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocumentSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebPageView other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Referrer.Length != 0) {
        Referrer = other.Referrer;
      }
      if (other.documentSize_ != null) {
        if (documentSize_ == null) {
          DocumentSize = new global::Promoted.Common.Size();
        }
        DocumentSize.MergeFrom(other.DocumentSize);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Referrer = input.ReadString();
            break;
          }
          case 34: {
            if (documentSize_ == null) {
              DocumentSize = new global::Promoted.Common.Size();
            }
            input.ReadMessage(DocumentSize);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Referrer = input.ReadString();
            break;
          }
          case 34: {
            if (documentSize_ == null) {
              DocumentSize = new global::Promoted.Common.Size();
            }
            input.ReadMessage(DocumentSize);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AppScreenView : pb::IMessage<AppScreenView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppScreenView> _parser = new pb::MessageParser<AppScreenView>(() => new AppScreenView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppScreenView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppScreenView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppScreenView(AppScreenView other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppScreenView Clone() {
      return new AppScreenView(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppScreenView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppScreenView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppScreenView other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class View : pb::IMessage<View>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<View> _parser = new pb::MessageParser<View>(() => new View());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<View> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public View() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public View(View other) : this() {
      platformId_ = other.platformId_;
      userInfo_ = other.userInfo_ != null ? other.userInfo_.Clone() : null;
      timing_ = other.timing_ != null ? other.timing_.Clone() : null;
      clientInfo_ = other.clientInfo_ != null ? other.clientInfo_.Clone() : null;
      viewId_ = other.viewId_;
      autoViewId_ = other.autoViewId_;
      sessionId_ = other.sessionId_;
      contentId_ = other.contentId_;
      name_ = other.name_;
      useCase_ = other.useCase_;
      searchQuery_ = other.searchQuery_;
      properties_ = other.properties_ != null ? other.properties_.Clone() : null;
      locale_ = other.locale_ != null ? other.locale_.Clone() : null;
      viewType_ = other.viewType_;
      idProvenances_ = other.idProvenances_ != null ? other.idProvenances_.Clone() : null;
      switch (other.UiTypeCase) {
        case UiTypeOneofCase.WebPageView:
          WebPageView = other.WebPageView.Clone();
          break;
        case UiTypeOneofCase.AppScreenView:
          AppScreenView = other.AppScreenView.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public View Clone() {
      return new View(this);
    }

    /// <summary>Field number for the "platform_id" field.</summary>
    public const int PlatformIdFieldNumber = 1;
    private ulong platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    /// <summary>Field number for the "user_info" field.</summary>
    public const int UserInfoFieldNumber = 2;
    private global::Promoted.Common.UserInfo userInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.UserInfo UserInfo {
      get { return userInfo_; }
      set {
        userInfo_ = value;
      }
    }

    /// <summary>Field number for the "timing" field.</summary>
    public const int TimingFieldNumber = 3;
    private global::Promoted.Common.Timing timing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Timing Timing {
      get { return timing_; }
      set {
        timing_ = value;
      }
    }

    /// <summary>Field number for the "client_info" field.</summary>
    public const int ClientInfoFieldNumber = 4;
    private global::Promoted.Common.ClientInfo clientInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.ClientInfo ClientInfo {
      get { return clientInfo_; }
      set {
        clientInfo_ = value;
      }
    }

    /// <summary>Field number for the "view_id" field.</summary>
    public const int ViewIdFieldNumber = 6;
    private string viewId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ViewId {
      get { return viewId_; }
      set {
        viewId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "auto_view_id" field.</summary>
    public const int AutoViewIdFieldNumber = 17;
    private string autoViewId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AutoViewId {
      get { return autoViewId_; }
      set {
        autoViewId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 7;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_id" field.</summary>
    public const int ContentIdFieldNumber = 19;
    private string contentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentId {
      get { return contentId_; }
      set {
        contentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 8;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_case" field.</summary>
    public const int UseCaseFieldNumber = 9;
    private global::Promoted.Delivery.UseCase useCase_ = global::Promoted.Delivery.UseCase.UnknownUseCase;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Delivery.UseCase UseCase {
      get { return useCase_; }
      set {
        useCase_ = value;
      }
    }

    /// <summary>Field number for the "search_query" field.</summary>
    public const int SearchQueryFieldNumber = 10;
    private string searchQuery_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchQuery {
      get { return searchQuery_; }
      set {
        searchQuery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 11;
    private global::Promoted.Common.Properties properties_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Properties Properties {
      get { return properties_; }
      set {
        properties_ = value;
      }
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 16;
    private global::Promoted.Common.Locale locale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Locale Locale {
      get { return locale_; }
      set {
        locale_ = value;
      }
    }

    /// <summary>Field number for the "view_type" field.</summary>
    public const int ViewTypeFieldNumber = 13;
    private global::Event.View.Types.ViewType viewType_ = global::Event.View.Types.ViewType.UnknownViewType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.View.Types.ViewType ViewType {
      get { return viewType_; }
      set {
        viewType_ = value;
      }
    }

    /// <summary>Field number for the "web_page_view" field.</summary>
    public const int WebPageViewFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.WebPageView WebPageView {
      get { return uiTypeCase_ == UiTypeOneofCase.WebPageView ? (global::Event.WebPageView) uiType_ : null; }
      set {
        uiType_ = value;
        uiTypeCase_ = value == null ? UiTypeOneofCase.None : UiTypeOneofCase.WebPageView;
      }
    }

    /// <summary>Field number for the "app_screen_view" field.</summary>
    public const int AppScreenViewFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.AppScreenView AppScreenView {
      get { return uiTypeCase_ == UiTypeOneofCase.AppScreenView ? (global::Event.AppScreenView) uiType_ : null; }
      set {
        uiType_ = value;
        uiTypeCase_ = value == null ? UiTypeOneofCase.None : UiTypeOneofCase.AppScreenView;
      }
    }

    /// <summary>Field number for the "id_provenances" field.</summary>
    public const int IdProvenancesFieldNumber = 18;
    private global::Event.IdentifierProvenances idProvenances_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenances IdProvenances {
      get { return idProvenances_; }
      set {
        idProvenances_ = value;
      }
    }

    private object uiType_;
    /// <summary>Enum of possible cases for the "ui_type" oneof.</summary>
    public enum UiTypeOneofCase {
      None = 0,
      WebPageView = 14,
      AppScreenView = 15,
    }
    private UiTypeOneofCase uiTypeCase_ = UiTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UiTypeOneofCase UiTypeCase {
      get { return uiTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUiType() {
      uiTypeCase_ = UiTypeOneofCase.None;
      uiType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as View);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(View other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlatformId != other.PlatformId) return false;
      if (!object.Equals(UserInfo, other.UserInfo)) return false;
      if (!object.Equals(Timing, other.Timing)) return false;
      if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
      if (ViewId != other.ViewId) return false;
      if (AutoViewId != other.AutoViewId) return false;
      if (SessionId != other.SessionId) return false;
      if (ContentId != other.ContentId) return false;
      if (Name != other.Name) return false;
      if (UseCase != other.UseCase) return false;
      if (SearchQuery != other.SearchQuery) return false;
      if (!object.Equals(Properties, other.Properties)) return false;
      if (!object.Equals(Locale, other.Locale)) return false;
      if (ViewType != other.ViewType) return false;
      if (!object.Equals(WebPageView, other.WebPageView)) return false;
      if (!object.Equals(AppScreenView, other.AppScreenView)) return false;
      if (!object.Equals(IdProvenances, other.IdProvenances)) return false;
      if (UiTypeCase != other.UiTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlatformId != 0UL) hash ^= PlatformId.GetHashCode();
      if (userInfo_ != null) hash ^= UserInfo.GetHashCode();
      if (timing_ != null) hash ^= Timing.GetHashCode();
      if (clientInfo_ != null) hash ^= ClientInfo.GetHashCode();
      if (ViewId.Length != 0) hash ^= ViewId.GetHashCode();
      if (AutoViewId.Length != 0) hash ^= AutoViewId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (ContentId.Length != 0) hash ^= ContentId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (UseCase != global::Promoted.Delivery.UseCase.UnknownUseCase) hash ^= UseCase.GetHashCode();
      if (SearchQuery.Length != 0) hash ^= SearchQuery.GetHashCode();
      if (properties_ != null) hash ^= Properties.GetHashCode();
      if (locale_ != null) hash ^= Locale.GetHashCode();
      if (ViewType != global::Event.View.Types.ViewType.UnknownViewType) hash ^= ViewType.GetHashCode();
      if (uiTypeCase_ == UiTypeOneofCase.WebPageView) hash ^= WebPageView.GetHashCode();
      if (uiTypeCase_ == UiTypeOneofCase.AppScreenView) hash ^= AppScreenView.GetHashCode();
      if (idProvenances_ != null) hash ^= IdProvenances.GetHashCode();
      hash ^= (int) uiTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (ViewId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ViewId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SessionId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Name);
      }
      if (UseCase != global::Promoted.Delivery.UseCase.UnknownUseCase) {
        output.WriteRawTag(72);
        output.WriteEnum((int) UseCase);
      }
      if (SearchQuery.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SearchQuery);
      }
      if (properties_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Properties);
      }
      if (ViewType != global::Event.View.Types.ViewType.UnknownViewType) {
        output.WriteRawTag(104);
        output.WriteEnum((int) ViewType);
      }
      if (uiTypeCase_ == UiTypeOneofCase.WebPageView) {
        output.WriteRawTag(114);
        output.WriteMessage(WebPageView);
      }
      if (uiTypeCase_ == UiTypeOneofCase.AppScreenView) {
        output.WriteRawTag(122);
        output.WriteMessage(AppScreenView);
      }
      if (locale_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Locale);
      }
      if (AutoViewId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AutoViewId);
      }
      if (idProvenances_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(IdProvenances);
      }
      if (ContentId.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ContentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (ViewId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ViewId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SessionId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Name);
      }
      if (UseCase != global::Promoted.Delivery.UseCase.UnknownUseCase) {
        output.WriteRawTag(72);
        output.WriteEnum((int) UseCase);
      }
      if (SearchQuery.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SearchQuery);
      }
      if (properties_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Properties);
      }
      if (ViewType != global::Event.View.Types.ViewType.UnknownViewType) {
        output.WriteRawTag(104);
        output.WriteEnum((int) ViewType);
      }
      if (uiTypeCase_ == UiTypeOneofCase.WebPageView) {
        output.WriteRawTag(114);
        output.WriteMessage(WebPageView);
      }
      if (uiTypeCase_ == UiTypeOneofCase.AppScreenView) {
        output.WriteRawTag(122);
        output.WriteMessage(AppScreenView);
      }
      if (locale_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Locale);
      }
      if (AutoViewId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AutoViewId);
      }
      if (idProvenances_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(IdProvenances);
      }
      if (ContentId.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ContentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlatformId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlatformId);
      }
      if (userInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInfo);
      }
      if (timing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timing);
      }
      if (clientInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
      }
      if (ViewId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViewId);
      }
      if (AutoViewId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AutoViewId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (ContentId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContentId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (UseCase != global::Promoted.Delivery.UseCase.UnknownUseCase) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UseCase);
      }
      if (SearchQuery.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchQuery);
      }
      if (properties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Properties);
      }
      if (locale_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Locale);
      }
      if (ViewType != global::Event.View.Types.ViewType.UnknownViewType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ViewType);
      }
      if (uiTypeCase_ == UiTypeOneofCase.WebPageView) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WebPageView);
      }
      if (uiTypeCase_ == UiTypeOneofCase.AppScreenView) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppScreenView);
      }
      if (idProvenances_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IdProvenances);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(View other) {
      if (other == null) {
        return;
      }
      if (other.PlatformId != 0UL) {
        PlatformId = other.PlatformId;
      }
      if (other.userInfo_ != null) {
        if (userInfo_ == null) {
          UserInfo = new global::Promoted.Common.UserInfo();
        }
        UserInfo.MergeFrom(other.UserInfo);
      }
      if (other.timing_ != null) {
        if (timing_ == null) {
          Timing = new global::Promoted.Common.Timing();
        }
        Timing.MergeFrom(other.Timing);
      }
      if (other.clientInfo_ != null) {
        if (clientInfo_ == null) {
          ClientInfo = new global::Promoted.Common.ClientInfo();
        }
        ClientInfo.MergeFrom(other.ClientInfo);
      }
      if (other.ViewId.Length != 0) {
        ViewId = other.ViewId;
      }
      if (other.AutoViewId.Length != 0) {
        AutoViewId = other.AutoViewId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.ContentId.Length != 0) {
        ContentId = other.ContentId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.UseCase != global::Promoted.Delivery.UseCase.UnknownUseCase) {
        UseCase = other.UseCase;
      }
      if (other.SearchQuery.Length != 0) {
        SearchQuery = other.SearchQuery;
      }
      if (other.properties_ != null) {
        if (properties_ == null) {
          Properties = new global::Promoted.Common.Properties();
        }
        Properties.MergeFrom(other.Properties);
      }
      if (other.locale_ != null) {
        if (locale_ == null) {
          Locale = new global::Promoted.Common.Locale();
        }
        Locale.MergeFrom(other.Locale);
      }
      if (other.ViewType != global::Event.View.Types.ViewType.UnknownViewType) {
        ViewType = other.ViewType;
      }
      if (other.idProvenances_ != null) {
        if (idProvenances_ == null) {
          IdProvenances = new global::Event.IdentifierProvenances();
        }
        IdProvenances.MergeFrom(other.IdProvenances);
      }
      switch (other.UiTypeCase) {
        case UiTypeOneofCase.WebPageView:
          if (WebPageView == null) {
            WebPageView = new global::Event.WebPageView();
          }
          WebPageView.MergeFrom(other.WebPageView);
          break;
        case UiTypeOneofCase.AppScreenView:
          if (AppScreenView == null) {
            AppScreenView = new global::Event.AppScreenView();
          }
          AppScreenView.MergeFrom(other.AppScreenView);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 50: {
            ViewId = input.ReadString();
            break;
          }
          case 58: {
            SessionId = input.ReadString();
            break;
          }
          case 66: {
            Name = input.ReadString();
            break;
          }
          case 72: {
            UseCase = (global::Promoted.Delivery.UseCase) input.ReadEnum();
            break;
          }
          case 82: {
            SearchQuery = input.ReadString();
            break;
          }
          case 90: {
            if (properties_ == null) {
              Properties = new global::Promoted.Common.Properties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 104: {
            ViewType = (global::Event.View.Types.ViewType) input.ReadEnum();
            break;
          }
          case 114: {
            global::Event.WebPageView subBuilder = new global::Event.WebPageView();
            if (uiTypeCase_ == UiTypeOneofCase.WebPageView) {
              subBuilder.MergeFrom(WebPageView);
            }
            input.ReadMessage(subBuilder);
            WebPageView = subBuilder;
            break;
          }
          case 122: {
            global::Event.AppScreenView subBuilder = new global::Event.AppScreenView();
            if (uiTypeCase_ == UiTypeOneofCase.AppScreenView) {
              subBuilder.MergeFrom(AppScreenView);
            }
            input.ReadMessage(subBuilder);
            AppScreenView = subBuilder;
            break;
          }
          case 130: {
            if (locale_ == null) {
              Locale = new global::Promoted.Common.Locale();
            }
            input.ReadMessage(Locale);
            break;
          }
          case 138: {
            AutoViewId = input.ReadString();
            break;
          }
          case 146: {
            if (idProvenances_ == null) {
              IdProvenances = new global::Event.IdentifierProvenances();
            }
            input.ReadMessage(IdProvenances);
            break;
          }
          case 154: {
            ContentId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 50: {
            ViewId = input.ReadString();
            break;
          }
          case 58: {
            SessionId = input.ReadString();
            break;
          }
          case 66: {
            Name = input.ReadString();
            break;
          }
          case 72: {
            UseCase = (global::Promoted.Delivery.UseCase) input.ReadEnum();
            break;
          }
          case 82: {
            SearchQuery = input.ReadString();
            break;
          }
          case 90: {
            if (properties_ == null) {
              Properties = new global::Promoted.Common.Properties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 104: {
            ViewType = (global::Event.View.Types.ViewType) input.ReadEnum();
            break;
          }
          case 114: {
            global::Event.WebPageView subBuilder = new global::Event.WebPageView();
            if (uiTypeCase_ == UiTypeOneofCase.WebPageView) {
              subBuilder.MergeFrom(WebPageView);
            }
            input.ReadMessage(subBuilder);
            WebPageView = subBuilder;
            break;
          }
          case 122: {
            global::Event.AppScreenView subBuilder = new global::Event.AppScreenView();
            if (uiTypeCase_ == UiTypeOneofCase.AppScreenView) {
              subBuilder.MergeFrom(AppScreenView);
            }
            input.ReadMessage(subBuilder);
            AppScreenView = subBuilder;
            break;
          }
          case 130: {
            if (locale_ == null) {
              Locale = new global::Promoted.Common.Locale();
            }
            input.ReadMessage(Locale);
            break;
          }
          case 138: {
            AutoViewId = input.ReadString();
            break;
          }
          case 146: {
            if (idProvenances_ == null) {
              IdProvenances = new global::Event.IdentifierProvenances();
            }
            input.ReadMessage(IdProvenances);
            break;
          }
          case 154: {
            ContentId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the View message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ViewType {
        [pbr::OriginalName("UNKNOWN_VIEW_TYPE")] UnknownViewType = 0,
        [pbr::OriginalName("WEB_PAGE")] WebPage = 1,
        [pbr::OriginalName("APP_SCREEN")] AppScreen = 2,
      }

    }
    #endregion

  }

  public sealed partial class AutoView : pb::IMessage<AutoView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AutoView> _parser = new pb::MessageParser<AutoView>(() => new AutoView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AutoView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoView(AutoView other) : this() {
      platformId_ = other.platformId_;
      userInfo_ = other.userInfo_ != null ? other.userInfo_.Clone() : null;
      timing_ = other.timing_ != null ? other.timing_.Clone() : null;
      clientInfo_ = other.clientInfo_ != null ? other.clientInfo_.Clone() : null;
      autoViewId_ = other.autoViewId_;
      viewId_ = other.viewId_;
      sessionId_ = other.sessionId_;
      name_ = other.name_;
      useCase_ = other.useCase_;
      properties_ = other.properties_ != null ? other.properties_.Clone() : null;
      locale_ = other.locale_ != null ? other.locale_.Clone() : null;
      idProvenances_ = other.idProvenances_ != null ? other.idProvenances_.Clone() : null;
      switch (other.UiTypeCase) {
        case UiTypeOneofCase.WebPageView:
          WebPageView = other.WebPageView.Clone();
          break;
        case UiTypeOneofCase.AppScreenView:
          AppScreenView = other.AppScreenView.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoView Clone() {
      return new AutoView(this);
    }

    /// <summary>Field number for the "platform_id" field.</summary>
    public const int PlatformIdFieldNumber = 1;
    private ulong platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    /// <summary>Field number for the "user_info" field.</summary>
    public const int UserInfoFieldNumber = 2;
    private global::Promoted.Common.UserInfo userInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.UserInfo UserInfo {
      get { return userInfo_; }
      set {
        userInfo_ = value;
      }
    }

    /// <summary>Field number for the "timing" field.</summary>
    public const int TimingFieldNumber = 3;
    private global::Promoted.Common.Timing timing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Timing Timing {
      get { return timing_; }
      set {
        timing_ = value;
      }
    }

    /// <summary>Field number for the "client_info" field.</summary>
    public const int ClientInfoFieldNumber = 4;
    private global::Promoted.Common.ClientInfo clientInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.ClientInfo ClientInfo {
      get { return clientInfo_; }
      set {
        clientInfo_ = value;
      }
    }

    /// <summary>Field number for the "auto_view_id" field.</summary>
    public const int AutoViewIdFieldNumber = 6;
    private string autoViewId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AutoViewId {
      get { return autoViewId_; }
      set {
        autoViewId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "view_id" field.</summary>
    public const int ViewIdFieldNumber = 14;
    private string viewId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ViewId {
      get { return viewId_; }
      set {
        viewId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 7;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 8;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_case" field.</summary>
    public const int UseCaseFieldNumber = 9;
    private global::Promoted.Delivery.UseCase useCase_ = global::Promoted.Delivery.UseCase.UnknownUseCase;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Delivery.UseCase UseCase {
      get { return useCase_; }
      set {
        useCase_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 10;
    private global::Promoted.Common.Properties properties_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Properties Properties {
      get { return properties_; }
      set {
        properties_ = value;
      }
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 11;
    private global::Promoted.Common.Locale locale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Locale Locale {
      get { return locale_; }
      set {
        locale_ = value;
      }
    }

    /// <summary>Field number for the "web_page_view" field.</summary>
    public const int WebPageViewFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.WebPageView WebPageView {
      get { return uiTypeCase_ == UiTypeOneofCase.WebPageView ? (global::Event.WebPageView) uiType_ : null; }
      set {
        uiType_ = value;
        uiTypeCase_ = value == null ? UiTypeOneofCase.None : UiTypeOneofCase.WebPageView;
      }
    }

    /// <summary>Field number for the "app_screen_view" field.</summary>
    public const int AppScreenViewFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.AppScreenView AppScreenView {
      get { return uiTypeCase_ == UiTypeOneofCase.AppScreenView ? (global::Event.AppScreenView) uiType_ : null; }
      set {
        uiType_ = value;
        uiTypeCase_ = value == null ? UiTypeOneofCase.None : UiTypeOneofCase.AppScreenView;
      }
    }

    /// <summary>Field number for the "id_provenances" field.</summary>
    public const int IdProvenancesFieldNumber = 15;
    private global::Event.IdentifierProvenances idProvenances_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenances IdProvenances {
      get { return idProvenances_; }
      set {
        idProvenances_ = value;
      }
    }

    private object uiType_;
    /// <summary>Enum of possible cases for the "ui_type" oneof.</summary>
    public enum UiTypeOneofCase {
      None = 0,
      WebPageView = 12,
      AppScreenView = 13,
    }
    private UiTypeOneofCase uiTypeCase_ = UiTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UiTypeOneofCase UiTypeCase {
      get { return uiTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUiType() {
      uiTypeCase_ = UiTypeOneofCase.None;
      uiType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AutoView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AutoView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlatformId != other.PlatformId) return false;
      if (!object.Equals(UserInfo, other.UserInfo)) return false;
      if (!object.Equals(Timing, other.Timing)) return false;
      if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
      if (AutoViewId != other.AutoViewId) return false;
      if (ViewId != other.ViewId) return false;
      if (SessionId != other.SessionId) return false;
      if (Name != other.Name) return false;
      if (UseCase != other.UseCase) return false;
      if (!object.Equals(Properties, other.Properties)) return false;
      if (!object.Equals(Locale, other.Locale)) return false;
      if (!object.Equals(WebPageView, other.WebPageView)) return false;
      if (!object.Equals(AppScreenView, other.AppScreenView)) return false;
      if (!object.Equals(IdProvenances, other.IdProvenances)) return false;
      if (UiTypeCase != other.UiTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlatformId != 0UL) hash ^= PlatformId.GetHashCode();
      if (userInfo_ != null) hash ^= UserInfo.GetHashCode();
      if (timing_ != null) hash ^= Timing.GetHashCode();
      if (clientInfo_ != null) hash ^= ClientInfo.GetHashCode();
      if (AutoViewId.Length != 0) hash ^= AutoViewId.GetHashCode();
      if (ViewId.Length != 0) hash ^= ViewId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (UseCase != global::Promoted.Delivery.UseCase.UnknownUseCase) hash ^= UseCase.GetHashCode();
      if (properties_ != null) hash ^= Properties.GetHashCode();
      if (locale_ != null) hash ^= Locale.GetHashCode();
      if (uiTypeCase_ == UiTypeOneofCase.WebPageView) hash ^= WebPageView.GetHashCode();
      if (uiTypeCase_ == UiTypeOneofCase.AppScreenView) hash ^= AppScreenView.GetHashCode();
      if (idProvenances_ != null) hash ^= IdProvenances.GetHashCode();
      hash ^= (int) uiTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (AutoViewId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AutoViewId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SessionId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Name);
      }
      if (UseCase != global::Promoted.Delivery.UseCase.UnknownUseCase) {
        output.WriteRawTag(72);
        output.WriteEnum((int) UseCase);
      }
      if (properties_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Properties);
      }
      if (locale_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Locale);
      }
      if (uiTypeCase_ == UiTypeOneofCase.WebPageView) {
        output.WriteRawTag(98);
        output.WriteMessage(WebPageView);
      }
      if (uiTypeCase_ == UiTypeOneofCase.AppScreenView) {
        output.WriteRawTag(106);
        output.WriteMessage(AppScreenView);
      }
      if (ViewId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ViewId);
      }
      if (idProvenances_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(IdProvenances);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (AutoViewId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AutoViewId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SessionId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Name);
      }
      if (UseCase != global::Promoted.Delivery.UseCase.UnknownUseCase) {
        output.WriteRawTag(72);
        output.WriteEnum((int) UseCase);
      }
      if (properties_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Properties);
      }
      if (locale_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Locale);
      }
      if (uiTypeCase_ == UiTypeOneofCase.WebPageView) {
        output.WriteRawTag(98);
        output.WriteMessage(WebPageView);
      }
      if (uiTypeCase_ == UiTypeOneofCase.AppScreenView) {
        output.WriteRawTag(106);
        output.WriteMessage(AppScreenView);
      }
      if (ViewId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ViewId);
      }
      if (idProvenances_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(IdProvenances);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlatformId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlatformId);
      }
      if (userInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInfo);
      }
      if (timing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timing);
      }
      if (clientInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
      }
      if (AutoViewId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AutoViewId);
      }
      if (ViewId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViewId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (UseCase != global::Promoted.Delivery.UseCase.UnknownUseCase) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UseCase);
      }
      if (properties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Properties);
      }
      if (locale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Locale);
      }
      if (uiTypeCase_ == UiTypeOneofCase.WebPageView) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WebPageView);
      }
      if (uiTypeCase_ == UiTypeOneofCase.AppScreenView) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppScreenView);
      }
      if (idProvenances_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdProvenances);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AutoView other) {
      if (other == null) {
        return;
      }
      if (other.PlatformId != 0UL) {
        PlatformId = other.PlatformId;
      }
      if (other.userInfo_ != null) {
        if (userInfo_ == null) {
          UserInfo = new global::Promoted.Common.UserInfo();
        }
        UserInfo.MergeFrom(other.UserInfo);
      }
      if (other.timing_ != null) {
        if (timing_ == null) {
          Timing = new global::Promoted.Common.Timing();
        }
        Timing.MergeFrom(other.Timing);
      }
      if (other.clientInfo_ != null) {
        if (clientInfo_ == null) {
          ClientInfo = new global::Promoted.Common.ClientInfo();
        }
        ClientInfo.MergeFrom(other.ClientInfo);
      }
      if (other.AutoViewId.Length != 0) {
        AutoViewId = other.AutoViewId;
      }
      if (other.ViewId.Length != 0) {
        ViewId = other.ViewId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.UseCase != global::Promoted.Delivery.UseCase.UnknownUseCase) {
        UseCase = other.UseCase;
      }
      if (other.properties_ != null) {
        if (properties_ == null) {
          Properties = new global::Promoted.Common.Properties();
        }
        Properties.MergeFrom(other.Properties);
      }
      if (other.locale_ != null) {
        if (locale_ == null) {
          Locale = new global::Promoted.Common.Locale();
        }
        Locale.MergeFrom(other.Locale);
      }
      if (other.idProvenances_ != null) {
        if (idProvenances_ == null) {
          IdProvenances = new global::Event.IdentifierProvenances();
        }
        IdProvenances.MergeFrom(other.IdProvenances);
      }
      switch (other.UiTypeCase) {
        case UiTypeOneofCase.WebPageView:
          if (WebPageView == null) {
            WebPageView = new global::Event.WebPageView();
          }
          WebPageView.MergeFrom(other.WebPageView);
          break;
        case UiTypeOneofCase.AppScreenView:
          if (AppScreenView == null) {
            AppScreenView = new global::Event.AppScreenView();
          }
          AppScreenView.MergeFrom(other.AppScreenView);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 50: {
            AutoViewId = input.ReadString();
            break;
          }
          case 58: {
            SessionId = input.ReadString();
            break;
          }
          case 66: {
            Name = input.ReadString();
            break;
          }
          case 72: {
            UseCase = (global::Promoted.Delivery.UseCase) input.ReadEnum();
            break;
          }
          case 82: {
            if (properties_ == null) {
              Properties = new global::Promoted.Common.Properties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 90: {
            if (locale_ == null) {
              Locale = new global::Promoted.Common.Locale();
            }
            input.ReadMessage(Locale);
            break;
          }
          case 98: {
            global::Event.WebPageView subBuilder = new global::Event.WebPageView();
            if (uiTypeCase_ == UiTypeOneofCase.WebPageView) {
              subBuilder.MergeFrom(WebPageView);
            }
            input.ReadMessage(subBuilder);
            WebPageView = subBuilder;
            break;
          }
          case 106: {
            global::Event.AppScreenView subBuilder = new global::Event.AppScreenView();
            if (uiTypeCase_ == UiTypeOneofCase.AppScreenView) {
              subBuilder.MergeFrom(AppScreenView);
            }
            input.ReadMessage(subBuilder);
            AppScreenView = subBuilder;
            break;
          }
          case 114: {
            ViewId = input.ReadString();
            break;
          }
          case 122: {
            if (idProvenances_ == null) {
              IdProvenances = new global::Event.IdentifierProvenances();
            }
            input.ReadMessage(IdProvenances);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 50: {
            AutoViewId = input.ReadString();
            break;
          }
          case 58: {
            SessionId = input.ReadString();
            break;
          }
          case 66: {
            Name = input.ReadString();
            break;
          }
          case 72: {
            UseCase = (global::Promoted.Delivery.UseCase) input.ReadEnum();
            break;
          }
          case 82: {
            if (properties_ == null) {
              Properties = new global::Promoted.Common.Properties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 90: {
            if (locale_ == null) {
              Locale = new global::Promoted.Common.Locale();
            }
            input.ReadMessage(Locale);
            break;
          }
          case 98: {
            global::Event.WebPageView subBuilder = new global::Event.WebPageView();
            if (uiTypeCase_ == UiTypeOneofCase.WebPageView) {
              subBuilder.MergeFrom(WebPageView);
            }
            input.ReadMessage(subBuilder);
            WebPageView = subBuilder;
            break;
          }
          case 106: {
            global::Event.AppScreenView subBuilder = new global::Event.AppScreenView();
            if (uiTypeCase_ == UiTypeOneofCase.AppScreenView) {
              subBuilder.MergeFrom(AppScreenView);
            }
            input.ReadMessage(subBuilder);
            AppScreenView = subBuilder;
            break;
          }
          case 114: {
            ViewId = input.ReadString();
            break;
          }
          case 122: {
            if (idProvenances_ == null) {
              IdProvenances = new global::Event.IdentifierProvenances();
            }
            input.ReadMessage(IdProvenances);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IndexPath : pb::IMessage<IndexPath>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IndexPath> _parser = new pb::MessageParser<IndexPath>(() => new IndexPath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndexPath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexPath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexPath(IndexPath other) : this() {
      index_ = other.index_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexPath Clone() {
      return new IndexPath(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_index_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> index_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Index {
      get { return index_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndexPath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndexPath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!index_.Equals(other.index_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= index_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      index_.WriteTo(output, _repeated_index_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      index_.WriteTo(ref output, _repeated_index_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += index_.CalculateSize(_repeated_index_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndexPath other) {
      if (other == null) {
        return;
      }
      index_.Add(other.index_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            index_.AddEntriesFrom(input, _repeated_index_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            index_.AddEntriesFrom(ref input, _repeated_index_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Impression : pb::IMessage<Impression>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Impression> _parser = new pb::MessageParser<Impression>(() => new Impression());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Impression> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Impression() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Impression(Impression other) : this() {
      platformId_ = other.platformId_;
      userInfo_ = other.userInfo_ != null ? other.userInfo_.Clone() : null;
      timing_ = other.timing_ != null ? other.timing_.Clone() : null;
      clientInfo_ = other.clientInfo_ != null ? other.clientInfo_.Clone() : null;
      impressionId_ = other.impressionId_;
      insertionId_ = other.insertionId_;
      requestId_ = other.requestId_;
      viewId_ = other.viewId_;
      autoViewId_ = other.autoViewId_;
      sessionId_ = other.sessionId_;
      contentId_ = other.contentId_;
      sourceType_ = other.sourceType_;
      hasSuperimposedViews_ = other.hasSuperimposedViews_;
      clientPosition_ = other.clientPosition_ != null ? other.clientPosition_.Clone() : null;
      idProvenances_ = other.idProvenances_ != null ? other.idProvenances_.Clone() : null;
      properties_ = other.properties_ != null ? other.properties_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Impression Clone() {
      return new Impression(this);
    }

    /// <summary>Field number for the "platform_id" field.</summary>
    public const int PlatformIdFieldNumber = 1;
    private ulong platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    /// <summary>Field number for the "user_info" field.</summary>
    public const int UserInfoFieldNumber = 2;
    private global::Promoted.Common.UserInfo userInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.UserInfo UserInfo {
      get { return userInfo_; }
      set {
        userInfo_ = value;
      }
    }

    /// <summary>Field number for the "timing" field.</summary>
    public const int TimingFieldNumber = 3;
    private global::Promoted.Common.Timing timing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Timing Timing {
      get { return timing_; }
      set {
        timing_ = value;
      }
    }

    /// <summary>Field number for the "client_info" field.</summary>
    public const int ClientInfoFieldNumber = 4;
    private global::Promoted.Common.ClientInfo clientInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.ClientInfo ClientInfo {
      get { return clientInfo_; }
      set {
        clientInfo_ = value;
      }
    }

    /// <summary>Field number for the "impression_id" field.</summary>
    public const int ImpressionIdFieldNumber = 6;
    private string impressionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImpressionId {
      get { return impressionId_; }
      set {
        impressionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "insertion_id" field.</summary>
    public const int InsertionIdFieldNumber = 7;
    private string insertionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InsertionId {
      get { return insertionId_; }
      set {
        insertionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 8;
    private string requestId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "view_id" field.</summary>
    public const int ViewIdFieldNumber = 10;
    private string viewId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ViewId {
      get { return viewId_; }
      set {
        viewId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "auto_view_id" field.</summary>
    public const int AutoViewIdFieldNumber = 15;
    private string autoViewId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AutoViewId {
      get { return autoViewId_; }
      set {
        autoViewId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 9;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_id" field.</summary>
    public const int ContentIdFieldNumber = 12;
    private string contentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentId {
      get { return contentId_; }
      set {
        contentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_type" field.</summary>
    public const int SourceTypeFieldNumber = 13;
    private global::Event.ImpressionSourceType sourceType_ = global::Event.ImpressionSourceType.UnknownImpressionSourceType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.ImpressionSourceType SourceType {
      get { return sourceType_; }
      set {
        sourceType_ = value;
      }
    }

    /// <summary>Field number for the "has_superimposed_views" field.</summary>
    public const int HasSuperimposedViewsFieldNumber = 14;
    private bool hasSuperimposedViews_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSuperimposedViews {
      get { return hasSuperimposedViews_; }
      set {
        hasSuperimposedViews_ = value;
      }
    }

    /// <summary>Field number for the "client_position" field.</summary>
    public const int ClientPositionFieldNumber = 16;
    private global::Event.IndexPath clientPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IndexPath ClientPosition {
      get { return clientPosition_; }
      set {
        clientPosition_ = value;
      }
    }

    /// <summary>Field number for the "id_provenances" field.</summary>
    public const int IdProvenancesFieldNumber = 17;
    private global::Event.IdentifierProvenances idProvenances_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenances IdProvenances {
      get { return idProvenances_; }
      set {
        idProvenances_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 11;
    private global::Promoted.Common.Properties properties_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Properties Properties {
      get { return properties_; }
      set {
        properties_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Impression);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Impression other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlatformId != other.PlatformId) return false;
      if (!object.Equals(UserInfo, other.UserInfo)) return false;
      if (!object.Equals(Timing, other.Timing)) return false;
      if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
      if (ImpressionId != other.ImpressionId) return false;
      if (InsertionId != other.InsertionId) return false;
      if (RequestId != other.RequestId) return false;
      if (ViewId != other.ViewId) return false;
      if (AutoViewId != other.AutoViewId) return false;
      if (SessionId != other.SessionId) return false;
      if (ContentId != other.ContentId) return false;
      if (SourceType != other.SourceType) return false;
      if (HasSuperimposedViews != other.HasSuperimposedViews) return false;
      if (!object.Equals(ClientPosition, other.ClientPosition)) return false;
      if (!object.Equals(IdProvenances, other.IdProvenances)) return false;
      if (!object.Equals(Properties, other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlatformId != 0UL) hash ^= PlatformId.GetHashCode();
      if (userInfo_ != null) hash ^= UserInfo.GetHashCode();
      if (timing_ != null) hash ^= Timing.GetHashCode();
      if (clientInfo_ != null) hash ^= ClientInfo.GetHashCode();
      if (ImpressionId.Length != 0) hash ^= ImpressionId.GetHashCode();
      if (InsertionId.Length != 0) hash ^= InsertionId.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (ViewId.Length != 0) hash ^= ViewId.GetHashCode();
      if (AutoViewId.Length != 0) hash ^= AutoViewId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (ContentId.Length != 0) hash ^= ContentId.GetHashCode();
      if (SourceType != global::Event.ImpressionSourceType.UnknownImpressionSourceType) hash ^= SourceType.GetHashCode();
      if (HasSuperimposedViews != false) hash ^= HasSuperimposedViews.GetHashCode();
      if (clientPosition_ != null) hash ^= ClientPosition.GetHashCode();
      if (idProvenances_ != null) hash ^= IdProvenances.GetHashCode();
      if (properties_ != null) hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (ImpressionId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ImpressionId);
      }
      if (InsertionId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(InsertionId);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RequestId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SessionId);
      }
      if (ViewId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ViewId);
      }
      if (properties_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Properties);
      }
      if (ContentId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ContentId);
      }
      if (SourceType != global::Event.ImpressionSourceType.UnknownImpressionSourceType) {
        output.WriteRawTag(104);
        output.WriteEnum((int) SourceType);
      }
      if (HasSuperimposedViews != false) {
        output.WriteRawTag(112);
        output.WriteBool(HasSuperimposedViews);
      }
      if (AutoViewId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(AutoViewId);
      }
      if (clientPosition_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ClientPosition);
      }
      if (idProvenances_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(IdProvenances);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (ImpressionId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ImpressionId);
      }
      if (InsertionId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(InsertionId);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RequestId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SessionId);
      }
      if (ViewId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ViewId);
      }
      if (properties_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Properties);
      }
      if (ContentId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ContentId);
      }
      if (SourceType != global::Event.ImpressionSourceType.UnknownImpressionSourceType) {
        output.WriteRawTag(104);
        output.WriteEnum((int) SourceType);
      }
      if (HasSuperimposedViews != false) {
        output.WriteRawTag(112);
        output.WriteBool(HasSuperimposedViews);
      }
      if (AutoViewId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(AutoViewId);
      }
      if (clientPosition_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ClientPosition);
      }
      if (idProvenances_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(IdProvenances);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlatformId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlatformId);
      }
      if (userInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInfo);
      }
      if (timing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timing);
      }
      if (clientInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
      }
      if (ImpressionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImpressionId);
      }
      if (InsertionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InsertionId);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (ViewId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViewId);
      }
      if (AutoViewId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AutoViewId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (ContentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentId);
      }
      if (SourceType != global::Event.ImpressionSourceType.UnknownImpressionSourceType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SourceType);
      }
      if (HasSuperimposedViews != false) {
        size += 1 + 1;
      }
      if (clientPosition_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ClientPosition);
      }
      if (idProvenances_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IdProvenances);
      }
      if (properties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Properties);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Impression other) {
      if (other == null) {
        return;
      }
      if (other.PlatformId != 0UL) {
        PlatformId = other.PlatformId;
      }
      if (other.userInfo_ != null) {
        if (userInfo_ == null) {
          UserInfo = new global::Promoted.Common.UserInfo();
        }
        UserInfo.MergeFrom(other.UserInfo);
      }
      if (other.timing_ != null) {
        if (timing_ == null) {
          Timing = new global::Promoted.Common.Timing();
        }
        Timing.MergeFrom(other.Timing);
      }
      if (other.clientInfo_ != null) {
        if (clientInfo_ == null) {
          ClientInfo = new global::Promoted.Common.ClientInfo();
        }
        ClientInfo.MergeFrom(other.ClientInfo);
      }
      if (other.ImpressionId.Length != 0) {
        ImpressionId = other.ImpressionId;
      }
      if (other.InsertionId.Length != 0) {
        InsertionId = other.InsertionId;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      if (other.ViewId.Length != 0) {
        ViewId = other.ViewId;
      }
      if (other.AutoViewId.Length != 0) {
        AutoViewId = other.AutoViewId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.ContentId.Length != 0) {
        ContentId = other.ContentId;
      }
      if (other.SourceType != global::Event.ImpressionSourceType.UnknownImpressionSourceType) {
        SourceType = other.SourceType;
      }
      if (other.HasSuperimposedViews != false) {
        HasSuperimposedViews = other.HasSuperimposedViews;
      }
      if (other.clientPosition_ != null) {
        if (clientPosition_ == null) {
          ClientPosition = new global::Event.IndexPath();
        }
        ClientPosition.MergeFrom(other.ClientPosition);
      }
      if (other.idProvenances_ != null) {
        if (idProvenances_ == null) {
          IdProvenances = new global::Event.IdentifierProvenances();
        }
        IdProvenances.MergeFrom(other.IdProvenances);
      }
      if (other.properties_ != null) {
        if (properties_ == null) {
          Properties = new global::Promoted.Common.Properties();
        }
        Properties.MergeFrom(other.Properties);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 50: {
            ImpressionId = input.ReadString();
            break;
          }
          case 58: {
            InsertionId = input.ReadString();
            break;
          }
          case 66: {
            RequestId = input.ReadString();
            break;
          }
          case 74: {
            SessionId = input.ReadString();
            break;
          }
          case 82: {
            ViewId = input.ReadString();
            break;
          }
          case 90: {
            if (properties_ == null) {
              Properties = new global::Promoted.Common.Properties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 98: {
            ContentId = input.ReadString();
            break;
          }
          case 104: {
            SourceType = (global::Event.ImpressionSourceType) input.ReadEnum();
            break;
          }
          case 112: {
            HasSuperimposedViews = input.ReadBool();
            break;
          }
          case 122: {
            AutoViewId = input.ReadString();
            break;
          }
          case 130: {
            if (clientPosition_ == null) {
              ClientPosition = new global::Event.IndexPath();
            }
            input.ReadMessage(ClientPosition);
            break;
          }
          case 138: {
            if (idProvenances_ == null) {
              IdProvenances = new global::Event.IdentifierProvenances();
            }
            input.ReadMessage(IdProvenances);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 50: {
            ImpressionId = input.ReadString();
            break;
          }
          case 58: {
            InsertionId = input.ReadString();
            break;
          }
          case 66: {
            RequestId = input.ReadString();
            break;
          }
          case 74: {
            SessionId = input.ReadString();
            break;
          }
          case 82: {
            ViewId = input.ReadString();
            break;
          }
          case 90: {
            if (properties_ == null) {
              Properties = new global::Promoted.Common.Properties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 98: {
            ContentId = input.ReadString();
            break;
          }
          case 104: {
            SourceType = (global::Event.ImpressionSourceType) input.ReadEnum();
            break;
          }
          case 112: {
            HasSuperimposedViews = input.ReadBool();
            break;
          }
          case 122: {
            AutoViewId = input.ReadString();
            break;
          }
          case 130: {
            if (clientPosition_ == null) {
              ClientPosition = new global::Event.IndexPath();
            }
            input.ReadMessage(ClientPosition);
            break;
          }
          case 138: {
            if (idProvenances_ == null) {
              IdProvenances = new global::Event.IdentifierProvenances();
            }
            input.ReadMessage(IdProvenances);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NavigateAction : pb::IMessage<NavigateAction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NavigateAction> _parser = new pb::MessageParser<NavigateAction>(() => new NavigateAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NavigateAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NavigateAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NavigateAction(NavigateAction other) : this() {
      targetUrl_ = other.targetUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NavigateAction Clone() {
      return new NavigateAction(this);
    }

    /// <summary>Field number for the "target_url" field.</summary>
    public const int TargetUrlFieldNumber = 1;
    private string targetUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetUrl {
      get { return targetUrl_; }
      set {
        targetUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NavigateAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NavigateAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetUrl != other.TargetUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetUrl.Length != 0) hash ^= TargetUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TargetUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TargetUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TargetUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TargetUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NavigateAction other) {
      if (other == null) {
        return;
      }
      if (other.TargetUrl.Length != 0) {
        TargetUrl = other.TargetUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TargetUrl = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TargetUrl = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Action : pb::IMessage<Action>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Action> _parser = new pb::MessageParser<Action>(() => new Action());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Action> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action(Action other) : this() {
      platformId_ = other.platformId_;
      userInfo_ = other.userInfo_ != null ? other.userInfo_.Clone() : null;
      timing_ = other.timing_ != null ? other.timing_.Clone() : null;
      clientInfo_ = other.clientInfo_ != null ? other.clientInfo_.Clone() : null;
      actionId_ = other.actionId_;
      impressionId_ = other.impressionId_;
      insertionId_ = other.insertionId_;
      requestId_ = other.requestId_;
      viewId_ = other.viewId_;
      autoViewId_ = other.autoViewId_;
      sessionId_ = other.sessionId_;
      contentId_ = other.contentId_;
      name_ = other.name_;
      actionType_ = other.actionType_;
      customActionType_ = other.customActionType_;
      elementId_ = other.elementId_;
      hasSuperimposedViews_ = other.hasSuperimposedViews_;
      clientPosition_ = other.clientPosition_ != null ? other.clientPosition_.Clone() : null;
      idProvenances_ = other.idProvenances_ != null ? other.idProvenances_.Clone() : null;
      properties_ = other.properties_ != null ? other.properties_.Clone() : null;
      device_ = other.device_ != null ? other.device_.Clone() : null;
      cart_ = other.cart_ != null ? other.cart_.Clone() : null;
      switch (other.ActionCase) {
        case ActionOneofCase.NavigateAction:
          NavigateAction = other.NavigateAction.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action Clone() {
      return new Action(this);
    }

    /// <summary>Field number for the "platform_id" field.</summary>
    public const int PlatformIdFieldNumber = 1;
    private ulong platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    /// <summary>Field number for the "user_info" field.</summary>
    public const int UserInfoFieldNumber = 2;
    private global::Promoted.Common.UserInfo userInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.UserInfo UserInfo {
      get { return userInfo_; }
      set {
        userInfo_ = value;
      }
    }

    /// <summary>Field number for the "timing" field.</summary>
    public const int TimingFieldNumber = 3;
    private global::Promoted.Common.Timing timing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Timing Timing {
      get { return timing_; }
      set {
        timing_ = value;
      }
    }

    /// <summary>Field number for the "client_info" field.</summary>
    public const int ClientInfoFieldNumber = 4;
    private global::Promoted.Common.ClientInfo clientInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.ClientInfo ClientInfo {
      get { return clientInfo_; }
      set {
        clientInfo_ = value;
      }
    }

    /// <summary>Field number for the "action_id" field.</summary>
    public const int ActionIdFieldNumber = 6;
    private string actionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActionId {
      get { return actionId_; }
      set {
        actionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "impression_id" field.</summary>
    public const int ImpressionIdFieldNumber = 7;
    private string impressionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImpressionId {
      get { return impressionId_; }
      set {
        impressionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "insertion_id" field.</summary>
    public const int InsertionIdFieldNumber = 8;
    private string insertionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InsertionId {
      get { return insertionId_; }
      set {
        insertionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 9;
    private string requestId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "view_id" field.</summary>
    public const int ViewIdFieldNumber = 11;
    private string viewId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ViewId {
      get { return viewId_; }
      set {
        viewId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "auto_view_id" field.</summary>
    public const int AutoViewIdFieldNumber = 23;
    private string autoViewId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AutoViewId {
      get { return autoViewId_; }
      set {
        autoViewId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 10;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_id" field.</summary>
    public const int ContentIdFieldNumber = 21;
    private string contentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentId {
      get { return contentId_; }
      set {
        contentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 12;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "action_type" field.</summary>
    public const int ActionTypeFieldNumber = 14;
    private global::Event.ActionType actionType_ = global::Event.ActionType.UnknownActionType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.ActionType ActionType {
      get { return actionType_; }
      set {
        actionType_ = value;
      }
    }

    /// <summary>Field number for the "custom_action_type" field.</summary>
    public const int CustomActionTypeFieldNumber = 15;
    private string customActionType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomActionType {
      get { return customActionType_; }
      set {
        customActionType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "element_id" field.</summary>
    public const int ElementIdFieldNumber = 17;
    private string elementId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ElementId {
      get { return elementId_; }
      set {
        elementId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "navigate_action" field.</summary>
    public const int NavigateActionFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.NavigateAction NavigateAction {
      get { return actionCase_ == ActionOneofCase.NavigateAction ? (global::Event.NavigateAction) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.NavigateAction;
      }
    }

    /// <summary>Field number for the "has_superimposed_views" field.</summary>
    public const int HasSuperimposedViewsFieldNumber = 22;
    private bool hasSuperimposedViews_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSuperimposedViews {
      get { return hasSuperimposedViews_; }
      set {
        hasSuperimposedViews_ = value;
      }
    }

    /// <summary>Field number for the "client_position" field.</summary>
    public const int ClientPositionFieldNumber = 24;
    private global::Event.IndexPath clientPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IndexPath ClientPosition {
      get { return clientPosition_; }
      set {
        clientPosition_ = value;
      }
    }

    /// <summary>Field number for the "id_provenances" field.</summary>
    public const int IdProvenancesFieldNumber = 25;
    private global::Event.IdentifierProvenances idProvenances_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.IdentifierProvenances IdProvenances {
      get { return idProvenances_; }
      set {
        idProvenances_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 20;
    private global::Promoted.Common.Properties properties_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Properties Properties {
      get { return properties_; }
      set {
        properties_ = value;
      }
    }

    /// <summary>Field number for the "device" field.</summary>
    public const int DeviceFieldNumber = 26;
    private global::Promoted.Common.Device device_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Device Device {
      get { return device_; }
      set {
        device_ = value;
      }
    }

    /// <summary>Field number for the "cart" field.</summary>
    public const int CartFieldNumber = 28;
    private global::Event.Cart cart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.Cart Cart {
      get { return cart_; }
      set {
        cart_ = value;
      }
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      NavigateAction = 18,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Action);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Action other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlatformId != other.PlatformId) return false;
      if (!object.Equals(UserInfo, other.UserInfo)) return false;
      if (!object.Equals(Timing, other.Timing)) return false;
      if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
      if (ActionId != other.ActionId) return false;
      if (ImpressionId != other.ImpressionId) return false;
      if (InsertionId != other.InsertionId) return false;
      if (RequestId != other.RequestId) return false;
      if (ViewId != other.ViewId) return false;
      if (AutoViewId != other.AutoViewId) return false;
      if (SessionId != other.SessionId) return false;
      if (ContentId != other.ContentId) return false;
      if (Name != other.Name) return false;
      if (ActionType != other.ActionType) return false;
      if (CustomActionType != other.CustomActionType) return false;
      if (ElementId != other.ElementId) return false;
      if (!object.Equals(NavigateAction, other.NavigateAction)) return false;
      if (HasSuperimposedViews != other.HasSuperimposedViews) return false;
      if (!object.Equals(ClientPosition, other.ClientPosition)) return false;
      if (!object.Equals(IdProvenances, other.IdProvenances)) return false;
      if (!object.Equals(Properties, other.Properties)) return false;
      if (!object.Equals(Device, other.Device)) return false;
      if (!object.Equals(Cart, other.Cart)) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlatformId != 0UL) hash ^= PlatformId.GetHashCode();
      if (userInfo_ != null) hash ^= UserInfo.GetHashCode();
      if (timing_ != null) hash ^= Timing.GetHashCode();
      if (clientInfo_ != null) hash ^= ClientInfo.GetHashCode();
      if (ActionId.Length != 0) hash ^= ActionId.GetHashCode();
      if (ImpressionId.Length != 0) hash ^= ImpressionId.GetHashCode();
      if (InsertionId.Length != 0) hash ^= InsertionId.GetHashCode();
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (ViewId.Length != 0) hash ^= ViewId.GetHashCode();
      if (AutoViewId.Length != 0) hash ^= AutoViewId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (ContentId.Length != 0) hash ^= ContentId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ActionType != global::Event.ActionType.UnknownActionType) hash ^= ActionType.GetHashCode();
      if (CustomActionType.Length != 0) hash ^= CustomActionType.GetHashCode();
      if (ElementId.Length != 0) hash ^= ElementId.GetHashCode();
      if (actionCase_ == ActionOneofCase.NavigateAction) hash ^= NavigateAction.GetHashCode();
      if (HasSuperimposedViews != false) hash ^= HasSuperimposedViews.GetHashCode();
      if (clientPosition_ != null) hash ^= ClientPosition.GetHashCode();
      if (idProvenances_ != null) hash ^= IdProvenances.GetHashCode();
      if (properties_ != null) hash ^= Properties.GetHashCode();
      if (device_ != null) hash ^= Device.GetHashCode();
      if (cart_ != null) hash ^= Cart.GetHashCode();
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (ActionId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ActionId);
      }
      if (ImpressionId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ImpressionId);
      }
      if (InsertionId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InsertionId);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RequestId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SessionId);
      }
      if (ViewId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ViewId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Name);
      }
      if (ActionType != global::Event.ActionType.UnknownActionType) {
        output.WriteRawTag(112);
        output.WriteEnum((int) ActionType);
      }
      if (CustomActionType.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(CustomActionType);
      }
      if (ElementId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(ElementId);
      }
      if (actionCase_ == ActionOneofCase.NavigateAction) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(NavigateAction);
      }
      if (properties_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Properties);
      }
      if (ContentId.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ContentId);
      }
      if (HasSuperimposedViews != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(HasSuperimposedViews);
      }
      if (AutoViewId.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(AutoViewId);
      }
      if (clientPosition_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(ClientPosition);
      }
      if (idProvenances_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(IdProvenances);
      }
      if (device_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(Device);
      }
      if (cart_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(Cart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (ActionId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ActionId);
      }
      if (ImpressionId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ImpressionId);
      }
      if (InsertionId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InsertionId);
      }
      if (RequestId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RequestId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SessionId);
      }
      if (ViewId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ViewId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Name);
      }
      if (ActionType != global::Event.ActionType.UnknownActionType) {
        output.WriteRawTag(112);
        output.WriteEnum((int) ActionType);
      }
      if (CustomActionType.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(CustomActionType);
      }
      if (ElementId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(ElementId);
      }
      if (actionCase_ == ActionOneofCase.NavigateAction) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(NavigateAction);
      }
      if (properties_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Properties);
      }
      if (ContentId.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ContentId);
      }
      if (HasSuperimposedViews != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(HasSuperimposedViews);
      }
      if (AutoViewId.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(AutoViewId);
      }
      if (clientPosition_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(ClientPosition);
      }
      if (idProvenances_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(IdProvenances);
      }
      if (device_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(Device);
      }
      if (cart_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(Cart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlatformId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlatformId);
      }
      if (userInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInfo);
      }
      if (timing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timing);
      }
      if (clientInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
      }
      if (ActionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionId);
      }
      if (ImpressionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImpressionId);
      }
      if (InsertionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InsertionId);
      }
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (ViewId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViewId);
      }
      if (AutoViewId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AutoViewId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (ContentId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContentId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ActionType != global::Event.ActionType.UnknownActionType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActionType);
      }
      if (CustomActionType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomActionType);
      }
      if (ElementId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ElementId);
      }
      if (actionCase_ == ActionOneofCase.NavigateAction) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NavigateAction);
      }
      if (HasSuperimposedViews != false) {
        size += 2 + 1;
      }
      if (clientPosition_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ClientPosition);
      }
      if (idProvenances_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IdProvenances);
      }
      if (properties_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Properties);
      }
      if (device_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Device);
      }
      if (cart_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Cart);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Action other) {
      if (other == null) {
        return;
      }
      if (other.PlatformId != 0UL) {
        PlatformId = other.PlatformId;
      }
      if (other.userInfo_ != null) {
        if (userInfo_ == null) {
          UserInfo = new global::Promoted.Common.UserInfo();
        }
        UserInfo.MergeFrom(other.UserInfo);
      }
      if (other.timing_ != null) {
        if (timing_ == null) {
          Timing = new global::Promoted.Common.Timing();
        }
        Timing.MergeFrom(other.Timing);
      }
      if (other.clientInfo_ != null) {
        if (clientInfo_ == null) {
          ClientInfo = new global::Promoted.Common.ClientInfo();
        }
        ClientInfo.MergeFrom(other.ClientInfo);
      }
      if (other.ActionId.Length != 0) {
        ActionId = other.ActionId;
      }
      if (other.ImpressionId.Length != 0) {
        ImpressionId = other.ImpressionId;
      }
      if (other.InsertionId.Length != 0) {
        InsertionId = other.InsertionId;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      if (other.ViewId.Length != 0) {
        ViewId = other.ViewId;
      }
      if (other.AutoViewId.Length != 0) {
        AutoViewId = other.AutoViewId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.ContentId.Length != 0) {
        ContentId = other.ContentId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ActionType != global::Event.ActionType.UnknownActionType) {
        ActionType = other.ActionType;
      }
      if (other.CustomActionType.Length != 0) {
        CustomActionType = other.CustomActionType;
      }
      if (other.ElementId.Length != 0) {
        ElementId = other.ElementId;
      }
      if (other.HasSuperimposedViews != false) {
        HasSuperimposedViews = other.HasSuperimposedViews;
      }
      if (other.clientPosition_ != null) {
        if (clientPosition_ == null) {
          ClientPosition = new global::Event.IndexPath();
        }
        ClientPosition.MergeFrom(other.ClientPosition);
      }
      if (other.idProvenances_ != null) {
        if (idProvenances_ == null) {
          IdProvenances = new global::Event.IdentifierProvenances();
        }
        IdProvenances.MergeFrom(other.IdProvenances);
      }
      if (other.properties_ != null) {
        if (properties_ == null) {
          Properties = new global::Promoted.Common.Properties();
        }
        Properties.MergeFrom(other.Properties);
      }
      if (other.device_ != null) {
        if (device_ == null) {
          Device = new global::Promoted.Common.Device();
        }
        Device.MergeFrom(other.Device);
      }
      if (other.cart_ != null) {
        if (cart_ == null) {
          Cart = new global::Event.Cart();
        }
        Cart.MergeFrom(other.Cart);
      }
      switch (other.ActionCase) {
        case ActionOneofCase.NavigateAction:
          if (NavigateAction == null) {
            NavigateAction = new global::Event.NavigateAction();
          }
          NavigateAction.MergeFrom(other.NavigateAction);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 50: {
            ActionId = input.ReadString();
            break;
          }
          case 58: {
            ImpressionId = input.ReadString();
            break;
          }
          case 66: {
            InsertionId = input.ReadString();
            break;
          }
          case 74: {
            RequestId = input.ReadString();
            break;
          }
          case 82: {
            SessionId = input.ReadString();
            break;
          }
          case 90: {
            ViewId = input.ReadString();
            break;
          }
          case 98: {
            Name = input.ReadString();
            break;
          }
          case 112: {
            ActionType = (global::Event.ActionType) input.ReadEnum();
            break;
          }
          case 122: {
            CustomActionType = input.ReadString();
            break;
          }
          case 138: {
            ElementId = input.ReadString();
            break;
          }
          case 146: {
            global::Event.NavigateAction subBuilder = new global::Event.NavigateAction();
            if (actionCase_ == ActionOneofCase.NavigateAction) {
              subBuilder.MergeFrom(NavigateAction);
            }
            input.ReadMessage(subBuilder);
            NavigateAction = subBuilder;
            break;
          }
          case 162: {
            if (properties_ == null) {
              Properties = new global::Promoted.Common.Properties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 170: {
            ContentId = input.ReadString();
            break;
          }
          case 176: {
            HasSuperimposedViews = input.ReadBool();
            break;
          }
          case 186: {
            AutoViewId = input.ReadString();
            break;
          }
          case 194: {
            if (clientPosition_ == null) {
              ClientPosition = new global::Event.IndexPath();
            }
            input.ReadMessage(ClientPosition);
            break;
          }
          case 202: {
            if (idProvenances_ == null) {
              IdProvenances = new global::Event.IdentifierProvenances();
            }
            input.ReadMessage(IdProvenances);
            break;
          }
          case 210: {
            if (device_ == null) {
              Device = new global::Promoted.Common.Device();
            }
            input.ReadMessage(Device);
            break;
          }
          case 226: {
            if (cart_ == null) {
              Cart = new global::Event.Cart();
            }
            input.ReadMessage(Cart);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 50: {
            ActionId = input.ReadString();
            break;
          }
          case 58: {
            ImpressionId = input.ReadString();
            break;
          }
          case 66: {
            InsertionId = input.ReadString();
            break;
          }
          case 74: {
            RequestId = input.ReadString();
            break;
          }
          case 82: {
            SessionId = input.ReadString();
            break;
          }
          case 90: {
            ViewId = input.ReadString();
            break;
          }
          case 98: {
            Name = input.ReadString();
            break;
          }
          case 112: {
            ActionType = (global::Event.ActionType) input.ReadEnum();
            break;
          }
          case 122: {
            CustomActionType = input.ReadString();
            break;
          }
          case 138: {
            ElementId = input.ReadString();
            break;
          }
          case 146: {
            global::Event.NavigateAction subBuilder = new global::Event.NavigateAction();
            if (actionCase_ == ActionOneofCase.NavigateAction) {
              subBuilder.MergeFrom(NavigateAction);
            }
            input.ReadMessage(subBuilder);
            NavigateAction = subBuilder;
            break;
          }
          case 162: {
            if (properties_ == null) {
              Properties = new global::Promoted.Common.Properties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 170: {
            ContentId = input.ReadString();
            break;
          }
          case 176: {
            HasSuperimposedViews = input.ReadBool();
            break;
          }
          case 186: {
            AutoViewId = input.ReadString();
            break;
          }
          case 194: {
            if (clientPosition_ == null) {
              ClientPosition = new global::Event.IndexPath();
            }
            input.ReadMessage(ClientPosition);
            break;
          }
          case 202: {
            if (idProvenances_ == null) {
              IdProvenances = new global::Event.IdentifierProvenances();
            }
            input.ReadMessage(IdProvenances);
            break;
          }
          case 210: {
            if (device_ == null) {
              Device = new global::Promoted.Common.Device();
            }
            input.ReadMessage(Device);
            break;
          }
          case 226: {
            if (cart_ == null) {
              Cart = new global::Event.Cart();
            }
            input.ReadMessage(Cart);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Cart : pb::IMessage<Cart>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cart> _parser = new pb::MessageParser<Cart>(() => new Cart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cart(Cart other) : this() {
      contents_ = other.contents_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cart Clone() {
      return new Cart(this);
    }

    /// <summary>Field number for the "contents" field.</summary>
    public const int ContentsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Event.CartContent> _repeated_contents_codec
        = pb::FieldCodec.ForMessage(10, global::Event.CartContent.Parser);
    private readonly pbc::RepeatedField<global::Event.CartContent> contents_ = new pbc::RepeatedField<global::Event.CartContent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Event.CartContent> Contents {
      get { return contents_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!contents_.Equals(other.contents_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= contents_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      contents_.WriteTo(output, _repeated_contents_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      contents_.WriteTo(ref output, _repeated_contents_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += contents_.CalculateSize(_repeated_contents_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cart other) {
      if (other == null) {
        return;
      }
      contents_.Add(other.contents_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            contents_.AddEntriesFrom(input, _repeated_contents_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            contents_.AddEntriesFrom(ref input, _repeated_contents_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CartContent : pb::IMessage<CartContent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CartContent> _parser = new pb::MessageParser<CartContent>(() => new CartContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CartContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartContent(CartContent other) : this() {
      contentId_ = other.contentId_;
      quantity_ = other.quantity_;
      pricePerUnit_ = other.pricePerUnit_ != null ? other.pricePerUnit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartContent Clone() {
      return new CartContent(this);
    }

    /// <summary>Field number for the "content_id" field.</summary>
    public const int ContentIdFieldNumber = 1;
    private string contentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentId {
      get { return contentId_; }
      set {
        contentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private long quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "price_per_unit" field.</summary>
    public const int PricePerUnitFieldNumber = 3;
    private global::Promoted.Common.Money pricePerUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Money PricePerUnit {
      get { return pricePerUnit_; }
      set {
        pricePerUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CartContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CartContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContentId != other.ContentId) return false;
      if (Quantity != other.Quantity) return false;
      if (!object.Equals(PricePerUnit, other.PricePerUnit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContentId.Length != 0) hash ^= ContentId.GetHashCode();
      if (Quantity != 0L) hash ^= Quantity.GetHashCode();
      if (pricePerUnit_ != null) hash ^= PricePerUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ContentId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContentId);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Quantity);
      }
      if (pricePerUnit_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PricePerUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ContentId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContentId);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Quantity);
      }
      if (pricePerUnit_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PricePerUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentId);
      }
      if (Quantity != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quantity);
      }
      if (pricePerUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PricePerUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CartContent other) {
      if (other == null) {
        return;
      }
      if (other.ContentId.Length != 0) {
        ContentId = other.ContentId;
      }
      if (other.Quantity != 0L) {
        Quantity = other.Quantity;
      }
      if (other.pricePerUnit_ != null) {
        if (pricePerUnit_ == null) {
          PricePerUnit = new global::Promoted.Common.Money();
        }
        PricePerUnit.MergeFrom(other.PricePerUnit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContentId = input.ReadString();
            break;
          }
          case 16: {
            Quantity = input.ReadInt64();
            break;
          }
          case 26: {
            if (pricePerUnit_ == null) {
              PricePerUnit = new global::Promoted.Common.Money();
            }
            input.ReadMessage(PricePerUnit);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ContentId = input.ReadString();
            break;
          }
          case 16: {
            Quantity = input.ReadInt64();
            break;
          }
          case 26: {
            if (pricePerUnit_ == null) {
              PricePerUnit = new global::Promoted.Common.Money();
            }
            input.ReadMessage(PricePerUnit);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Attribution : pb::IMessage<Attribution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Attribution> _parser = new pb::MessageParser<Attribution>(() => new Attribution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attribution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribution(Attribution other) : this() {
      modelId_ = other.modelId_;
      creditMillis_ = other.creditMillis_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribution Clone() {
      return new Attribution(this);
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 1;
    private ulong modelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ModelId {
      get { return modelId_; }
      set {
        modelId_ = value;
      }
    }

    /// <summary>Field number for the "credit_millis" field.</summary>
    public const int CreditMillisFieldNumber = 2;
    private int creditMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CreditMillis {
      get { return creditMillis_; }
      set {
        creditMillis_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attribution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attribution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelId != other.ModelId) return false;
      if (CreditMillis != other.CreditMillis) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelId != 0UL) hash ^= ModelId.GetHashCode();
      if (CreditMillis != 0) hash ^= CreditMillis.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ModelId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ModelId);
      }
      if (CreditMillis != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CreditMillis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ModelId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ModelId);
      }
      if (CreditMillis != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CreditMillis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModelId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ModelId);
      }
      if (CreditMillis != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CreditMillis);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attribution other) {
      if (other == null) {
        return;
      }
      if (other.ModelId != 0UL) {
        ModelId = other.ModelId;
      }
      if (other.CreditMillis != 0) {
        CreditMillis = other.CreditMillis;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ModelId = input.ReadUInt64();
            break;
          }
          case 16: {
            CreditMillis = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ModelId = input.ReadUInt64();
            break;
          }
          case 16: {
            CreditMillis = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IOSError : pb::IMessage<IOSError>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IOSError> _parser = new pb::MessageParser<IOSError>(() => new IOSError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IOSError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IOSError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IOSError(IOSError other) : this() {
      code_ = other.code_;
      domain_ = other.domain_;
      description_ = other.description_;
      batchNumber_ = other.batchNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IOSError Clone() {
      return new IOSError(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 2;
    private string domain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "batch_number" field.</summary>
    public const int BatchNumberFieldNumber = 4;
    private int batchNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BatchNumber {
      get { return batchNumber_; }
      set {
        batchNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IOSError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IOSError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Domain != other.Domain) return false;
      if (Description != other.Description) return false;
      if (BatchNumber != other.BatchNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (BatchNumber != 0) hash ^= BatchNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Domain);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (BatchNumber != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BatchNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Domain);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (BatchNumber != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BatchNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (BatchNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BatchNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IOSError other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.BatchNumber != 0) {
        BatchNumber = other.BatchNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Domain = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            BatchNumber = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Domain = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            BatchNumber = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ErrorHistory : pb::IMessage<ErrorHistory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ErrorHistory> _parser = new pb::MessageParser<ErrorHistory>(() => new ErrorHistory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorHistory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorHistory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorHistory(ErrorHistory other) : this() {
      iosErrors_ = other.iosErrors_.Clone();
      totalErrors_ = other.totalErrors_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorHistory Clone() {
      return new ErrorHistory(this);
    }

    /// <summary>Field number for the "ios_errors" field.</summary>
    public const int IosErrorsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Event.IOSError> _repeated_iosErrors_codec
        = pb::FieldCodec.ForMessage(10, global::Event.IOSError.Parser);
    private readonly pbc::RepeatedField<global::Event.IOSError> iosErrors_ = new pbc::RepeatedField<global::Event.IOSError>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Event.IOSError> IosErrors {
      get { return iosErrors_; }
    }

    /// <summary>Field number for the "total_errors" field.</summary>
    public const int TotalErrorsFieldNumber = 2;
    private int totalErrors_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalErrors {
      get { return totalErrors_; }
      set {
        totalErrors_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorHistory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorHistory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!iosErrors_.Equals(other.iosErrors_)) return false;
      if (TotalErrors != other.TotalErrors) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= iosErrors_.GetHashCode();
      if (TotalErrors != 0) hash ^= TotalErrors.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      iosErrors_.WriteTo(output, _repeated_iosErrors_codec);
      if (TotalErrors != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalErrors);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      iosErrors_.WriteTo(ref output, _repeated_iosErrors_codec);
      if (TotalErrors != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalErrors);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += iosErrors_.CalculateSize(_repeated_iosErrors_codec);
      if (TotalErrors != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalErrors);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorHistory other) {
      if (other == null) {
        return;
      }
      iosErrors_.Add(other.iosErrors_);
      if (other.TotalErrors != 0) {
        TotalErrors = other.TotalErrors;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            iosErrors_.AddEntriesFrom(input, _repeated_iosErrors_codec);
            break;
          }
          case 16: {
            TotalErrors = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            iosErrors_.AddEntriesFrom(ref input, _repeated_iosErrors_codec);
            break;
          }
          case 16: {
            TotalErrors = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AncestorIdHistoryItem : pb::IMessage<AncestorIdHistoryItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AncestorIdHistoryItem> _parser = new pb::MessageParser<AncestorIdHistoryItem>(() => new AncestorIdHistoryItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AncestorIdHistoryItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AncestorIdHistoryItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AncestorIdHistoryItem(AncestorIdHistoryItem other) : this() {
      ancestorId_ = other.ancestorId_;
      batchNumber_ = other.batchNumber_;
      switch (other.LoggedEventCase) {
        case LoggedEventOneofCase.UserEvent:
          UserEvent = other.UserEvent.Clone();
          break;
        case LoggedEventOneofCase.SessionIdFromUserEvent:
          SessionIdFromUserEvent = other.SessionIdFromUserEvent;
          break;
        case LoggedEventOneofCase.ViewEvent:
          ViewEvent = other.ViewEvent.Clone();
          break;
        case LoggedEventOneofCase.AutoViewEvent:
          AutoViewEvent = other.AutoViewEvent.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AncestorIdHistoryItem Clone() {
      return new AncestorIdHistoryItem(this);
    }

    /// <summary>Field number for the "ancestor_id" field.</summary>
    public const int AncestorIdFieldNumber = 1;
    private string ancestorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AncestorId {
      get { return ancestorId_; }
      set {
        ancestorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_event" field.</summary>
    public const int UserEventFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.User UserEvent {
      get { return loggedEventCase_ == LoggedEventOneofCase.UserEvent ? (global::Event.User) loggedEvent_ : null; }
      set {
        loggedEvent_ = value;
        loggedEventCase_ = value == null ? LoggedEventOneofCase.None : LoggedEventOneofCase.UserEvent;
      }
    }

    /// <summary>Field number for the "session_id_from_user_event" field.</summary>
    public const int SessionIdFromUserEventFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionIdFromUserEvent {
      get { return loggedEventCase_ == LoggedEventOneofCase.SessionIdFromUserEvent ? (string) loggedEvent_ : ""; }
      set {
        loggedEvent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        loggedEventCase_ = LoggedEventOneofCase.SessionIdFromUserEvent;
      }
    }

    /// <summary>Field number for the "view_event" field.</summary>
    public const int ViewEventFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.View ViewEvent {
      get { return loggedEventCase_ == LoggedEventOneofCase.ViewEvent ? (global::Event.View) loggedEvent_ : null; }
      set {
        loggedEvent_ = value;
        loggedEventCase_ = value == null ? LoggedEventOneofCase.None : LoggedEventOneofCase.ViewEvent;
      }
    }

    /// <summary>Field number for the "auto_view_event" field.</summary>
    public const int AutoViewEventFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.AutoView AutoViewEvent {
      get { return loggedEventCase_ == LoggedEventOneofCase.AutoViewEvent ? (global::Event.AutoView) loggedEvent_ : null; }
      set {
        loggedEvent_ = value;
        loggedEventCase_ = value == null ? LoggedEventOneofCase.None : LoggedEventOneofCase.AutoViewEvent;
      }
    }

    /// <summary>Field number for the "batch_number" field.</summary>
    public const int BatchNumberFieldNumber = 5;
    private int batchNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BatchNumber {
      get { return batchNumber_; }
      set {
        batchNumber_ = value;
      }
    }

    private object loggedEvent_;
    /// <summary>Enum of possible cases for the "logged_event" oneof.</summary>
    public enum LoggedEventOneofCase {
      None = 0,
      UserEvent = 2,
      SessionIdFromUserEvent = 3,
      ViewEvent = 4,
      AutoViewEvent = 6,
    }
    private LoggedEventOneofCase loggedEventCase_ = LoggedEventOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoggedEventOneofCase LoggedEventCase {
      get { return loggedEventCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLoggedEvent() {
      loggedEventCase_ = LoggedEventOneofCase.None;
      loggedEvent_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AncestorIdHistoryItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AncestorIdHistoryItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AncestorId != other.AncestorId) return false;
      if (!object.Equals(UserEvent, other.UserEvent)) return false;
      if (SessionIdFromUserEvent != other.SessionIdFromUserEvent) return false;
      if (!object.Equals(ViewEvent, other.ViewEvent)) return false;
      if (!object.Equals(AutoViewEvent, other.AutoViewEvent)) return false;
      if (BatchNumber != other.BatchNumber) return false;
      if (LoggedEventCase != other.LoggedEventCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AncestorId.Length != 0) hash ^= AncestorId.GetHashCode();
      if (loggedEventCase_ == LoggedEventOneofCase.UserEvent) hash ^= UserEvent.GetHashCode();
      if (loggedEventCase_ == LoggedEventOneofCase.SessionIdFromUserEvent) hash ^= SessionIdFromUserEvent.GetHashCode();
      if (loggedEventCase_ == LoggedEventOneofCase.ViewEvent) hash ^= ViewEvent.GetHashCode();
      if (loggedEventCase_ == LoggedEventOneofCase.AutoViewEvent) hash ^= AutoViewEvent.GetHashCode();
      if (BatchNumber != 0) hash ^= BatchNumber.GetHashCode();
      hash ^= (int) loggedEventCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AncestorId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AncestorId);
      }
      if (loggedEventCase_ == LoggedEventOneofCase.UserEvent) {
        output.WriteRawTag(18);
        output.WriteMessage(UserEvent);
      }
      if (loggedEventCase_ == LoggedEventOneofCase.SessionIdFromUserEvent) {
        output.WriteRawTag(26);
        output.WriteString(SessionIdFromUserEvent);
      }
      if (loggedEventCase_ == LoggedEventOneofCase.ViewEvent) {
        output.WriteRawTag(34);
        output.WriteMessage(ViewEvent);
      }
      if (BatchNumber != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BatchNumber);
      }
      if (loggedEventCase_ == LoggedEventOneofCase.AutoViewEvent) {
        output.WriteRawTag(50);
        output.WriteMessage(AutoViewEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AncestorId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AncestorId);
      }
      if (loggedEventCase_ == LoggedEventOneofCase.UserEvent) {
        output.WriteRawTag(18);
        output.WriteMessage(UserEvent);
      }
      if (loggedEventCase_ == LoggedEventOneofCase.SessionIdFromUserEvent) {
        output.WriteRawTag(26);
        output.WriteString(SessionIdFromUserEvent);
      }
      if (loggedEventCase_ == LoggedEventOneofCase.ViewEvent) {
        output.WriteRawTag(34);
        output.WriteMessage(ViewEvent);
      }
      if (BatchNumber != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BatchNumber);
      }
      if (loggedEventCase_ == LoggedEventOneofCase.AutoViewEvent) {
        output.WriteRawTag(50);
        output.WriteMessage(AutoViewEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AncestorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AncestorId);
      }
      if (loggedEventCase_ == LoggedEventOneofCase.UserEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserEvent);
      }
      if (loggedEventCase_ == LoggedEventOneofCase.SessionIdFromUserEvent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionIdFromUserEvent);
      }
      if (loggedEventCase_ == LoggedEventOneofCase.ViewEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ViewEvent);
      }
      if (loggedEventCase_ == LoggedEventOneofCase.AutoViewEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AutoViewEvent);
      }
      if (BatchNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BatchNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AncestorIdHistoryItem other) {
      if (other == null) {
        return;
      }
      if (other.AncestorId.Length != 0) {
        AncestorId = other.AncestorId;
      }
      if (other.BatchNumber != 0) {
        BatchNumber = other.BatchNumber;
      }
      switch (other.LoggedEventCase) {
        case LoggedEventOneofCase.UserEvent:
          if (UserEvent == null) {
            UserEvent = new global::Event.User();
          }
          UserEvent.MergeFrom(other.UserEvent);
          break;
        case LoggedEventOneofCase.SessionIdFromUserEvent:
          SessionIdFromUserEvent = other.SessionIdFromUserEvent;
          break;
        case LoggedEventOneofCase.ViewEvent:
          if (ViewEvent == null) {
            ViewEvent = new global::Event.View();
          }
          ViewEvent.MergeFrom(other.ViewEvent);
          break;
        case LoggedEventOneofCase.AutoViewEvent:
          if (AutoViewEvent == null) {
            AutoViewEvent = new global::Event.AutoView();
          }
          AutoViewEvent.MergeFrom(other.AutoViewEvent);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AncestorId = input.ReadString();
            break;
          }
          case 18: {
            global::Event.User subBuilder = new global::Event.User();
            if (loggedEventCase_ == LoggedEventOneofCase.UserEvent) {
              subBuilder.MergeFrom(UserEvent);
            }
            input.ReadMessage(subBuilder);
            UserEvent = subBuilder;
            break;
          }
          case 26: {
            SessionIdFromUserEvent = input.ReadString();
            break;
          }
          case 34: {
            global::Event.View subBuilder = new global::Event.View();
            if (loggedEventCase_ == LoggedEventOneofCase.ViewEvent) {
              subBuilder.MergeFrom(ViewEvent);
            }
            input.ReadMessage(subBuilder);
            ViewEvent = subBuilder;
            break;
          }
          case 40: {
            BatchNumber = input.ReadInt32();
            break;
          }
          case 50: {
            global::Event.AutoView subBuilder = new global::Event.AutoView();
            if (loggedEventCase_ == LoggedEventOneofCase.AutoViewEvent) {
              subBuilder.MergeFrom(AutoViewEvent);
            }
            input.ReadMessage(subBuilder);
            AutoViewEvent = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AncestorId = input.ReadString();
            break;
          }
          case 18: {
            global::Event.User subBuilder = new global::Event.User();
            if (loggedEventCase_ == LoggedEventOneofCase.UserEvent) {
              subBuilder.MergeFrom(UserEvent);
            }
            input.ReadMessage(subBuilder);
            UserEvent = subBuilder;
            break;
          }
          case 26: {
            SessionIdFromUserEvent = input.ReadString();
            break;
          }
          case 34: {
            global::Event.View subBuilder = new global::Event.View();
            if (loggedEventCase_ == LoggedEventOneofCase.ViewEvent) {
              subBuilder.MergeFrom(ViewEvent);
            }
            input.ReadMessage(subBuilder);
            ViewEvent = subBuilder;
            break;
          }
          case 40: {
            BatchNumber = input.ReadInt32();
            break;
          }
          case 50: {
            global::Event.AutoView subBuilder = new global::Event.AutoView();
            if (loggedEventCase_ == LoggedEventOneofCase.AutoViewEvent) {
              subBuilder.MergeFrom(AutoViewEvent);
            }
            input.ReadMessage(subBuilder);
            AutoViewEvent = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AncestorIdHistory : pb::IMessage<AncestorIdHistory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AncestorIdHistory> _parser = new pb::MessageParser<AncestorIdHistory>(() => new AncestorIdHistory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AncestorIdHistory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AncestorIdHistory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AncestorIdHistory(AncestorIdHistory other) : this() {
      logUserIdHistory_ = other.logUserIdHistory_.Clone();
      totalLogUserIdsLogged_ = other.totalLogUserIdsLogged_;
      sessionIdHistory_ = other.sessionIdHistory_.Clone();
      totalSessionIdsLogged_ = other.totalSessionIdsLogged_;
      viewIdHistory_ = other.viewIdHistory_.Clone();
      totalViewIdsLogged_ = other.totalViewIdsLogged_;
      autoViewIdHistory_ = other.autoViewIdHistory_.Clone();
      totalAutoViewIdsLogged_ = other.totalAutoViewIdsLogged_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AncestorIdHistory Clone() {
      return new AncestorIdHistory(this);
    }

    /// <summary>Field number for the "log_user_id_history" field.</summary>
    public const int LogUserIdHistoryFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Event.AncestorIdHistoryItem> _repeated_logUserIdHistory_codec
        = pb::FieldCodec.ForMessage(10, global::Event.AncestorIdHistoryItem.Parser);
    private readonly pbc::RepeatedField<global::Event.AncestorIdHistoryItem> logUserIdHistory_ = new pbc::RepeatedField<global::Event.AncestorIdHistoryItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Event.AncestorIdHistoryItem> LogUserIdHistory {
      get { return logUserIdHistory_; }
    }

    /// <summary>Field number for the "total_log_user_ids_logged" field.</summary>
    public const int TotalLogUserIdsLoggedFieldNumber = 2;
    private int totalLogUserIdsLogged_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalLogUserIdsLogged {
      get { return totalLogUserIdsLogged_; }
      set {
        totalLogUserIdsLogged_ = value;
      }
    }

    /// <summary>Field number for the "session_id_history" field.</summary>
    public const int SessionIdHistoryFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Event.AncestorIdHistoryItem> _repeated_sessionIdHistory_codec
        = pb::FieldCodec.ForMessage(26, global::Event.AncestorIdHistoryItem.Parser);
    private readonly pbc::RepeatedField<global::Event.AncestorIdHistoryItem> sessionIdHistory_ = new pbc::RepeatedField<global::Event.AncestorIdHistoryItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Event.AncestorIdHistoryItem> SessionIdHistory {
      get { return sessionIdHistory_; }
    }

    /// <summary>Field number for the "total_session_ids_logged" field.</summary>
    public const int TotalSessionIdsLoggedFieldNumber = 4;
    private int totalSessionIdsLogged_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalSessionIdsLogged {
      get { return totalSessionIdsLogged_; }
      set {
        totalSessionIdsLogged_ = value;
      }
    }

    /// <summary>Field number for the "view_id_history" field.</summary>
    public const int ViewIdHistoryFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Event.AncestorIdHistoryItem> _repeated_viewIdHistory_codec
        = pb::FieldCodec.ForMessage(42, global::Event.AncestorIdHistoryItem.Parser);
    private readonly pbc::RepeatedField<global::Event.AncestorIdHistoryItem> viewIdHistory_ = new pbc::RepeatedField<global::Event.AncestorIdHistoryItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Event.AncestorIdHistoryItem> ViewIdHistory {
      get { return viewIdHistory_; }
    }

    /// <summary>Field number for the "total_view_ids_logged" field.</summary>
    public const int TotalViewIdsLoggedFieldNumber = 6;
    private int totalViewIdsLogged_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalViewIdsLogged {
      get { return totalViewIdsLogged_; }
      set {
        totalViewIdsLogged_ = value;
      }
    }

    /// <summary>Field number for the "auto_view_id_history" field.</summary>
    public const int AutoViewIdHistoryFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Event.AncestorIdHistoryItem> _repeated_autoViewIdHistory_codec
        = pb::FieldCodec.ForMessage(58, global::Event.AncestorIdHistoryItem.Parser);
    private readonly pbc::RepeatedField<global::Event.AncestorIdHistoryItem> autoViewIdHistory_ = new pbc::RepeatedField<global::Event.AncestorIdHistoryItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Event.AncestorIdHistoryItem> AutoViewIdHistory {
      get { return autoViewIdHistory_; }
    }

    /// <summary>Field number for the "total_auto_view_ids_logged" field.</summary>
    public const int TotalAutoViewIdsLoggedFieldNumber = 8;
    private int totalAutoViewIdsLogged_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalAutoViewIdsLogged {
      get { return totalAutoViewIdsLogged_; }
      set {
        totalAutoViewIdsLogged_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AncestorIdHistory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AncestorIdHistory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!logUserIdHistory_.Equals(other.logUserIdHistory_)) return false;
      if (TotalLogUserIdsLogged != other.TotalLogUserIdsLogged) return false;
      if(!sessionIdHistory_.Equals(other.sessionIdHistory_)) return false;
      if (TotalSessionIdsLogged != other.TotalSessionIdsLogged) return false;
      if(!viewIdHistory_.Equals(other.viewIdHistory_)) return false;
      if (TotalViewIdsLogged != other.TotalViewIdsLogged) return false;
      if(!autoViewIdHistory_.Equals(other.autoViewIdHistory_)) return false;
      if (TotalAutoViewIdsLogged != other.TotalAutoViewIdsLogged) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= logUserIdHistory_.GetHashCode();
      if (TotalLogUserIdsLogged != 0) hash ^= TotalLogUserIdsLogged.GetHashCode();
      hash ^= sessionIdHistory_.GetHashCode();
      if (TotalSessionIdsLogged != 0) hash ^= TotalSessionIdsLogged.GetHashCode();
      hash ^= viewIdHistory_.GetHashCode();
      if (TotalViewIdsLogged != 0) hash ^= TotalViewIdsLogged.GetHashCode();
      hash ^= autoViewIdHistory_.GetHashCode();
      if (TotalAutoViewIdsLogged != 0) hash ^= TotalAutoViewIdsLogged.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      logUserIdHistory_.WriteTo(output, _repeated_logUserIdHistory_codec);
      if (TotalLogUserIdsLogged != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalLogUserIdsLogged);
      }
      sessionIdHistory_.WriteTo(output, _repeated_sessionIdHistory_codec);
      if (TotalSessionIdsLogged != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalSessionIdsLogged);
      }
      viewIdHistory_.WriteTo(output, _repeated_viewIdHistory_codec);
      if (TotalViewIdsLogged != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalViewIdsLogged);
      }
      autoViewIdHistory_.WriteTo(output, _repeated_autoViewIdHistory_codec);
      if (TotalAutoViewIdsLogged != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TotalAutoViewIdsLogged);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      logUserIdHistory_.WriteTo(ref output, _repeated_logUserIdHistory_codec);
      if (TotalLogUserIdsLogged != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalLogUserIdsLogged);
      }
      sessionIdHistory_.WriteTo(ref output, _repeated_sessionIdHistory_codec);
      if (TotalSessionIdsLogged != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalSessionIdsLogged);
      }
      viewIdHistory_.WriteTo(ref output, _repeated_viewIdHistory_codec);
      if (TotalViewIdsLogged != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalViewIdsLogged);
      }
      autoViewIdHistory_.WriteTo(ref output, _repeated_autoViewIdHistory_codec);
      if (TotalAutoViewIdsLogged != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TotalAutoViewIdsLogged);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += logUserIdHistory_.CalculateSize(_repeated_logUserIdHistory_codec);
      if (TotalLogUserIdsLogged != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalLogUserIdsLogged);
      }
      size += sessionIdHistory_.CalculateSize(_repeated_sessionIdHistory_codec);
      if (TotalSessionIdsLogged != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalSessionIdsLogged);
      }
      size += viewIdHistory_.CalculateSize(_repeated_viewIdHistory_codec);
      if (TotalViewIdsLogged != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalViewIdsLogged);
      }
      size += autoViewIdHistory_.CalculateSize(_repeated_autoViewIdHistory_codec);
      if (TotalAutoViewIdsLogged != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalAutoViewIdsLogged);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AncestorIdHistory other) {
      if (other == null) {
        return;
      }
      logUserIdHistory_.Add(other.logUserIdHistory_);
      if (other.TotalLogUserIdsLogged != 0) {
        TotalLogUserIdsLogged = other.TotalLogUserIdsLogged;
      }
      sessionIdHistory_.Add(other.sessionIdHistory_);
      if (other.TotalSessionIdsLogged != 0) {
        TotalSessionIdsLogged = other.TotalSessionIdsLogged;
      }
      viewIdHistory_.Add(other.viewIdHistory_);
      if (other.TotalViewIdsLogged != 0) {
        TotalViewIdsLogged = other.TotalViewIdsLogged;
      }
      autoViewIdHistory_.Add(other.autoViewIdHistory_);
      if (other.TotalAutoViewIdsLogged != 0) {
        TotalAutoViewIdsLogged = other.TotalAutoViewIdsLogged;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            logUserIdHistory_.AddEntriesFrom(input, _repeated_logUserIdHistory_codec);
            break;
          }
          case 16: {
            TotalLogUserIdsLogged = input.ReadInt32();
            break;
          }
          case 26: {
            sessionIdHistory_.AddEntriesFrom(input, _repeated_sessionIdHistory_codec);
            break;
          }
          case 32: {
            TotalSessionIdsLogged = input.ReadInt32();
            break;
          }
          case 42: {
            viewIdHistory_.AddEntriesFrom(input, _repeated_viewIdHistory_codec);
            break;
          }
          case 48: {
            TotalViewIdsLogged = input.ReadInt32();
            break;
          }
          case 58: {
            autoViewIdHistory_.AddEntriesFrom(input, _repeated_autoViewIdHistory_codec);
            break;
          }
          case 64: {
            TotalAutoViewIdsLogged = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            logUserIdHistory_.AddEntriesFrom(ref input, _repeated_logUserIdHistory_codec);
            break;
          }
          case 16: {
            TotalLogUserIdsLogged = input.ReadInt32();
            break;
          }
          case 26: {
            sessionIdHistory_.AddEntriesFrom(ref input, _repeated_sessionIdHistory_codec);
            break;
          }
          case 32: {
            TotalSessionIdsLogged = input.ReadInt32();
            break;
          }
          case 42: {
            viewIdHistory_.AddEntriesFrom(ref input, _repeated_viewIdHistory_codec);
            break;
          }
          case 48: {
            TotalViewIdsLogged = input.ReadInt32();
            break;
          }
          case 58: {
            autoViewIdHistory_.AddEntriesFrom(ref input, _repeated_autoViewIdHistory_codec);
            break;
          }
          case 64: {
            TotalAutoViewIdsLogged = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MobileDiagnostics : pb::IMessage<MobileDiagnostics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MobileDiagnostics> _parser = new pb::MessageParser<MobileDiagnostics>(() => new MobileDiagnostics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MobileDiagnostics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileDiagnostics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileDiagnostics(MobileDiagnostics other) : this() {
      deviceIdentifier_ = other.deviceIdentifier_;
      clientVersion_ = other.clientVersion_;
      promotedLibraryVersion_ = other.promotedLibraryVersion_;
      batchesAttempted_ = other.batchesAttempted_;
      batchesSentSuccessfully_ = other.batchesSentSuccessfully_;
      batchesWithErrors_ = other.batchesWithErrors_;
      errorHistory_ = other.errorHistory_ != null ? other.errorHistory_.Clone() : null;
      ancestorIdHistory_ = other.ancestorIdHistory_ != null ? other.ancestorIdHistory_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MobileDiagnostics Clone() {
      return new MobileDiagnostics(this);
    }

    /// <summary>Field number for the "device_identifier" field.</summary>
    public const int DeviceIdentifierFieldNumber = 1;
    private string deviceIdentifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceIdentifier {
      get { return deviceIdentifier_; }
      set {
        deviceIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_version" field.</summary>
    public const int ClientVersionFieldNumber = 2;
    private string clientVersion_ = "";
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientVersion {
      get { return clientVersion_; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "promoted_library_version" field.</summary>
    public const int PromotedLibraryVersionFieldNumber = 3;
    private string promotedLibraryVersion_ = "";
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromotedLibraryVersion {
      get { return promotedLibraryVersion_; }
      set {
        promotedLibraryVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "batches_attempted" field.</summary>
    public const int BatchesAttemptedFieldNumber = 4;
    private int batchesAttempted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BatchesAttempted {
      get { return batchesAttempted_; }
      set {
        batchesAttempted_ = value;
      }
    }

    /// <summary>Field number for the "batches_sent_successfully" field.</summary>
    public const int BatchesSentSuccessfullyFieldNumber = 5;
    private int batchesSentSuccessfully_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BatchesSentSuccessfully {
      get { return batchesSentSuccessfully_; }
      set {
        batchesSentSuccessfully_ = value;
      }
    }

    /// <summary>Field number for the "batches_with_errors" field.</summary>
    public const int BatchesWithErrorsFieldNumber = 6;
    private int batchesWithErrors_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BatchesWithErrors {
      get { return batchesWithErrors_; }
      set {
        batchesWithErrors_ = value;
      }
    }

    /// <summary>Field number for the "error_history" field.</summary>
    public const int ErrorHistoryFieldNumber = 7;
    private global::Event.ErrorHistory errorHistory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.ErrorHistory ErrorHistory {
      get { return errorHistory_; }
      set {
        errorHistory_ = value;
      }
    }

    /// <summary>Field number for the "ancestor_id_history" field.</summary>
    public const int AncestorIdHistoryFieldNumber = 8;
    private global::Event.AncestorIdHistory ancestorIdHistory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.AncestorIdHistory AncestorIdHistory {
      get { return ancestorIdHistory_; }
      set {
        ancestorIdHistory_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MobileDiagnostics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MobileDiagnostics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceIdentifier != other.DeviceIdentifier) return false;
      if (ClientVersion != other.ClientVersion) return false;
      if (PromotedLibraryVersion != other.PromotedLibraryVersion) return false;
      if (BatchesAttempted != other.BatchesAttempted) return false;
      if (BatchesSentSuccessfully != other.BatchesSentSuccessfully) return false;
      if (BatchesWithErrors != other.BatchesWithErrors) return false;
      if (!object.Equals(ErrorHistory, other.ErrorHistory)) return false;
      if (!object.Equals(AncestorIdHistory, other.AncestorIdHistory)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceIdentifier.Length != 0) hash ^= DeviceIdentifier.GetHashCode();
      if (ClientVersion.Length != 0) hash ^= ClientVersion.GetHashCode();
      if (PromotedLibraryVersion.Length != 0) hash ^= PromotedLibraryVersion.GetHashCode();
      if (BatchesAttempted != 0) hash ^= BatchesAttempted.GetHashCode();
      if (BatchesSentSuccessfully != 0) hash ^= BatchesSentSuccessfully.GetHashCode();
      if (BatchesWithErrors != 0) hash ^= BatchesWithErrors.GetHashCode();
      if (errorHistory_ != null) hash ^= ErrorHistory.GetHashCode();
      if (ancestorIdHistory_ != null) hash ^= AncestorIdHistory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceIdentifier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceIdentifier);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientVersion);
      }
      if (PromotedLibraryVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PromotedLibraryVersion);
      }
      if (BatchesAttempted != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BatchesAttempted);
      }
      if (BatchesSentSuccessfully != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BatchesSentSuccessfully);
      }
      if (BatchesWithErrors != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BatchesWithErrors);
      }
      if (errorHistory_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ErrorHistory);
      }
      if (ancestorIdHistory_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AncestorIdHistory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceIdentifier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceIdentifier);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientVersion);
      }
      if (PromotedLibraryVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PromotedLibraryVersion);
      }
      if (BatchesAttempted != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BatchesAttempted);
      }
      if (BatchesSentSuccessfully != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BatchesSentSuccessfully);
      }
      if (BatchesWithErrors != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BatchesWithErrors);
      }
      if (errorHistory_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ErrorHistory);
      }
      if (ancestorIdHistory_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AncestorIdHistory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceIdentifier);
      }
      if (ClientVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (PromotedLibraryVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PromotedLibraryVersion);
      }
      if (BatchesAttempted != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BatchesAttempted);
      }
      if (BatchesSentSuccessfully != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BatchesSentSuccessfully);
      }
      if (BatchesWithErrors != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BatchesWithErrors);
      }
      if (errorHistory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorHistory);
      }
      if (ancestorIdHistory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AncestorIdHistory);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MobileDiagnostics other) {
      if (other == null) {
        return;
      }
      if (other.DeviceIdentifier.Length != 0) {
        DeviceIdentifier = other.DeviceIdentifier;
      }
      if (other.ClientVersion.Length != 0) {
        ClientVersion = other.ClientVersion;
      }
      if (other.PromotedLibraryVersion.Length != 0) {
        PromotedLibraryVersion = other.PromotedLibraryVersion;
      }
      if (other.BatchesAttempted != 0) {
        BatchesAttempted = other.BatchesAttempted;
      }
      if (other.BatchesSentSuccessfully != 0) {
        BatchesSentSuccessfully = other.BatchesSentSuccessfully;
      }
      if (other.BatchesWithErrors != 0) {
        BatchesWithErrors = other.BatchesWithErrors;
      }
      if (other.errorHistory_ != null) {
        if (errorHistory_ == null) {
          ErrorHistory = new global::Event.ErrorHistory();
        }
        ErrorHistory.MergeFrom(other.ErrorHistory);
      }
      if (other.ancestorIdHistory_ != null) {
        if (ancestorIdHistory_ == null) {
          AncestorIdHistory = new global::Event.AncestorIdHistory();
        }
        AncestorIdHistory.MergeFrom(other.AncestorIdHistory);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceIdentifier = input.ReadString();
            break;
          }
          case 18: {
            ClientVersion = input.ReadString();
            break;
          }
          case 26: {
            PromotedLibraryVersion = input.ReadString();
            break;
          }
          case 32: {
            BatchesAttempted = input.ReadInt32();
            break;
          }
          case 40: {
            BatchesSentSuccessfully = input.ReadInt32();
            break;
          }
          case 48: {
            BatchesWithErrors = input.ReadInt32();
            break;
          }
          case 58: {
            if (errorHistory_ == null) {
              ErrorHistory = new global::Event.ErrorHistory();
            }
            input.ReadMessage(ErrorHistory);
            break;
          }
          case 66: {
            if (ancestorIdHistory_ == null) {
              AncestorIdHistory = new global::Event.AncestorIdHistory();
            }
            input.ReadMessage(AncestorIdHistory);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceIdentifier = input.ReadString();
            break;
          }
          case 18: {
            ClientVersion = input.ReadString();
            break;
          }
          case 26: {
            PromotedLibraryVersion = input.ReadString();
            break;
          }
          case 32: {
            BatchesAttempted = input.ReadInt32();
            break;
          }
          case 40: {
            BatchesSentSuccessfully = input.ReadInt32();
            break;
          }
          case 48: {
            BatchesWithErrors = input.ReadInt32();
            break;
          }
          case 58: {
            if (errorHistory_ == null) {
              ErrorHistory = new global::Event.ErrorHistory();
            }
            input.ReadMessage(ErrorHistory);
            break;
          }
          case 66: {
            if (ancestorIdHistory_ == null) {
              AncestorIdHistory = new global::Event.AncestorIdHistory();
            }
            input.ReadMessage(AncestorIdHistory);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Diagnostics : pb::IMessage<Diagnostics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Diagnostics> _parser = new pb::MessageParser<Diagnostics>(() => new Diagnostics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Diagnostics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Diagnostics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Diagnostics(Diagnostics other) : this() {
      platformId_ = other.platformId_;
      userInfo_ = other.userInfo_ != null ? other.userInfo_.Clone() : null;
      timing_ = other.timing_ != null ? other.timing_.Clone() : null;
      clientInfo_ = other.clientInfo_ != null ? other.clientInfo_.Clone() : null;
      switch (other.DiagnosticsMessageCase) {
        case DiagnosticsMessageOneofCase.MobileDiagnostics:
          MobileDiagnostics = other.MobileDiagnostics.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Diagnostics Clone() {
      return new Diagnostics(this);
    }

    /// <summary>Field number for the "platform_id" field.</summary>
    public const int PlatformIdFieldNumber = 1;
    private ulong platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    /// <summary>Field number for the "user_info" field.</summary>
    public const int UserInfoFieldNumber = 2;
    private global::Promoted.Common.UserInfo userInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.UserInfo UserInfo {
      get { return userInfo_; }
      set {
        userInfo_ = value;
      }
    }

    /// <summary>Field number for the "timing" field.</summary>
    public const int TimingFieldNumber = 3;
    private global::Promoted.Common.Timing timing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Timing Timing {
      get { return timing_; }
      set {
        timing_ = value;
      }
    }

    /// <summary>Field number for the "client_info" field.</summary>
    public const int ClientInfoFieldNumber = 4;
    private global::Promoted.Common.ClientInfo clientInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.ClientInfo ClientInfo {
      get { return clientInfo_; }
      set {
        clientInfo_ = value;
      }
    }

    /// <summary>Field number for the "mobile_diagnostics" field.</summary>
    public const int MobileDiagnosticsFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Event.MobileDiagnostics MobileDiagnostics {
      get { return diagnosticsMessageCase_ == DiagnosticsMessageOneofCase.MobileDiagnostics ? (global::Event.MobileDiagnostics) diagnosticsMessage_ : null; }
      set {
        diagnosticsMessage_ = value;
        diagnosticsMessageCase_ = value == null ? DiagnosticsMessageOneofCase.None : DiagnosticsMessageOneofCase.MobileDiagnostics;
      }
    }

    private object diagnosticsMessage_;
    /// <summary>Enum of possible cases for the "diagnostics_message" oneof.</summary>
    public enum DiagnosticsMessageOneofCase {
      None = 0,
      MobileDiagnostics = 5,
    }
    private DiagnosticsMessageOneofCase diagnosticsMessageCase_ = DiagnosticsMessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiagnosticsMessageOneofCase DiagnosticsMessageCase {
      get { return diagnosticsMessageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDiagnosticsMessage() {
      diagnosticsMessageCase_ = DiagnosticsMessageOneofCase.None;
      diagnosticsMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Diagnostics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Diagnostics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlatformId != other.PlatformId) return false;
      if (!object.Equals(UserInfo, other.UserInfo)) return false;
      if (!object.Equals(Timing, other.Timing)) return false;
      if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
      if (!object.Equals(MobileDiagnostics, other.MobileDiagnostics)) return false;
      if (DiagnosticsMessageCase != other.DiagnosticsMessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlatformId != 0UL) hash ^= PlatformId.GetHashCode();
      if (userInfo_ != null) hash ^= UserInfo.GetHashCode();
      if (timing_ != null) hash ^= Timing.GetHashCode();
      if (clientInfo_ != null) hash ^= ClientInfo.GetHashCode();
      if (diagnosticsMessageCase_ == DiagnosticsMessageOneofCase.MobileDiagnostics) hash ^= MobileDiagnostics.GetHashCode();
      hash ^= (int) diagnosticsMessageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (diagnosticsMessageCase_ == DiagnosticsMessageOneofCase.MobileDiagnostics) {
        output.WriteRawTag(42);
        output.WriteMessage(MobileDiagnostics);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      if (diagnosticsMessageCase_ == DiagnosticsMessageOneofCase.MobileDiagnostics) {
        output.WriteRawTag(42);
        output.WriteMessage(MobileDiagnostics);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlatformId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlatformId);
      }
      if (userInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInfo);
      }
      if (timing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timing);
      }
      if (clientInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
      }
      if (diagnosticsMessageCase_ == DiagnosticsMessageOneofCase.MobileDiagnostics) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MobileDiagnostics);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Diagnostics other) {
      if (other == null) {
        return;
      }
      if (other.PlatformId != 0UL) {
        PlatformId = other.PlatformId;
      }
      if (other.userInfo_ != null) {
        if (userInfo_ == null) {
          UserInfo = new global::Promoted.Common.UserInfo();
        }
        UserInfo.MergeFrom(other.UserInfo);
      }
      if (other.timing_ != null) {
        if (timing_ == null) {
          Timing = new global::Promoted.Common.Timing();
        }
        Timing.MergeFrom(other.Timing);
      }
      if (other.clientInfo_ != null) {
        if (clientInfo_ == null) {
          ClientInfo = new global::Promoted.Common.ClientInfo();
        }
        ClientInfo.MergeFrom(other.ClientInfo);
      }
      switch (other.DiagnosticsMessageCase) {
        case DiagnosticsMessageOneofCase.MobileDiagnostics:
          if (MobileDiagnostics == null) {
            MobileDiagnostics = new global::Event.MobileDiagnostics();
          }
          MobileDiagnostics.MergeFrom(other.MobileDiagnostics);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 42: {
            global::Event.MobileDiagnostics subBuilder = new global::Event.MobileDiagnostics();
            if (diagnosticsMessageCase_ == DiagnosticsMessageOneofCase.MobileDiagnostics) {
              subBuilder.MergeFrom(MobileDiagnostics);
            }
            input.ReadMessage(subBuilder);
            MobileDiagnostics = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 42: {
            global::Event.MobileDiagnostics subBuilder = new global::Event.MobileDiagnostics();
            if (diagnosticsMessageCase_ == DiagnosticsMessageOneofCase.MobileDiagnostics) {
              subBuilder.MergeFrom(MobileDiagnostics);
            }
            input.ReadMessage(subBuilder);
            MobileDiagnostics = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LogRequest : pb::IMessage<LogRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogRequest> _parser = new pb::MessageParser<LogRequest>(() => new LogRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Event.EventReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest(LogRequest other) : this() {
      platformId_ = other.platformId_;
      userInfo_ = other.userInfo_ != null ? other.userInfo_.Clone() : null;
      timing_ = other.timing_ != null ? other.timing_.Clone() : null;
      clientInfo_ = other.clientInfo_ != null ? other.clientInfo_.Clone() : null;
      device_ = other.device_ != null ? other.device_.Clone() : null;
      user_ = other.user_.Clone();
      cohortMembership_ = other.cohortMembership_.Clone();
      view_ = other.view_.Clone();
      autoView_ = other.autoView_.Clone();
      request_ = other.request_.Clone();
      insertion_ = other.insertion_.Clone();
      impression_ = other.impression_.Clone();
      action_ = other.action_.Clone();
      deliveryLog_ = other.deliveryLog_.Clone();
      diagnostics_ = other.diagnostics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest Clone() {
      return new LogRequest(this);
    }

    /// <summary>Field number for the "platform_id" field.</summary>
    public const int PlatformIdFieldNumber = 1;
    private ulong platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    /// <summary>Field number for the "user_info" field.</summary>
    public const int UserInfoFieldNumber = 2;
    private global::Promoted.Common.UserInfo userInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.UserInfo UserInfo {
      get { return userInfo_; }
      set {
        userInfo_ = value;
      }
    }

    /// <summary>Field number for the "timing" field.</summary>
    public const int TimingFieldNumber = 3;
    private global::Promoted.Common.Timing timing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Timing Timing {
      get { return timing_; }
      set {
        timing_ = value;
      }
    }

    /// <summary>Field number for the "client_info" field.</summary>
    public const int ClientInfoFieldNumber = 4;
    private global::Promoted.Common.ClientInfo clientInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.ClientInfo ClientInfo {
      get { return clientInfo_; }
      set {
        clientInfo_ = value;
      }
    }

    /// <summary>Field number for the "device" field.</summary>
    public const int DeviceFieldNumber = 24;
    private global::Promoted.Common.Device device_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Device Device {
      get { return device_; }
      set {
        device_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Event.User> _repeated_user_codec
        = pb::FieldCodec.ForMessage(58, global::Event.User.Parser);
    private readonly pbc::RepeatedField<global::Event.User> user_ = new pbc::RepeatedField<global::Event.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Event.User> User {
      get { return user_; }
    }

    /// <summary>Field number for the "cohort_membership" field.</summary>
    public const int CohortMembershipFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Event.CohortMembership> _repeated_cohortMembership_codec
        = pb::FieldCodec.ForMessage(66, global::Event.CohortMembership.Parser);
    private readonly pbc::RepeatedField<global::Event.CohortMembership> cohortMembership_ = new pbc::RepeatedField<global::Event.CohortMembership>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Event.CohortMembership> CohortMembership {
      get { return cohortMembership_; }
    }

    /// <summary>Field number for the "view" field.</summary>
    public const int ViewFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Event.View> _repeated_view_codec
        = pb::FieldCodec.ForMessage(90, global::Event.View.Parser);
    private readonly pbc::RepeatedField<global::Event.View> view_ = new pbc::RepeatedField<global::Event.View>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Event.View> View {
      get { return view_; }
    }

    /// <summary>Field number for the "auto_view" field.</summary>
    public const int AutoViewFieldNumber = 25;
    private static readonly pb::FieldCodec<global::Event.AutoView> _repeated_autoView_codec
        = pb::FieldCodec.ForMessage(202, global::Event.AutoView.Parser);
    private readonly pbc::RepeatedField<global::Event.AutoView> autoView_ = new pbc::RepeatedField<global::Event.AutoView>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Event.AutoView> AutoView {
      get { return autoView_; }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Promoted.Delivery.Request> _repeated_request_codec
        = pb::FieldCodec.ForMessage(98, global::Promoted.Delivery.Request.Parser);
    private readonly pbc::RepeatedField<global::Promoted.Delivery.Request> request_ = new pbc::RepeatedField<global::Promoted.Delivery.Request>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Promoted.Delivery.Request> Request {
      get { return request_; }
    }

    /// <summary>Field number for the "insertion" field.</summary>
    public const int InsertionFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Promoted.Delivery.Insertion> _repeated_insertion_codec
        = pb::FieldCodec.ForMessage(106, global::Promoted.Delivery.Insertion.Parser);
    private readonly pbc::RepeatedField<global::Promoted.Delivery.Insertion> insertion_ = new pbc::RepeatedField<global::Promoted.Delivery.Insertion>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Promoted.Delivery.Insertion> Insertion {
      get { return insertion_; }
    }

    /// <summary>Field number for the "impression" field.</summary>
    public const int ImpressionFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Event.Impression> _repeated_impression_codec
        = pb::FieldCodec.ForMessage(114, global::Event.Impression.Parser);
    private readonly pbc::RepeatedField<global::Event.Impression> impression_ = new pbc::RepeatedField<global::Event.Impression>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Event.Impression> Impression {
      get { return impression_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Event.Action> _repeated_action_codec
        = pb::FieldCodec.ForMessage(122, global::Event.Action.Parser);
    private readonly pbc::RepeatedField<global::Event.Action> action_ = new pbc::RepeatedField<global::Event.Action>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Event.Action> Action {
      get { return action_; }
    }

    /// <summary>Field number for the "delivery_log" field.</summary>
    public const int DeliveryLogFieldNumber = 18;
    private static readonly pb::FieldCodec<global::Promoted.Delivery.DeliveryLog> _repeated_deliveryLog_codec
        = pb::FieldCodec.ForMessage(146, global::Promoted.Delivery.DeliveryLog.Parser);
    private readonly pbc::RepeatedField<global::Promoted.Delivery.DeliveryLog> deliveryLog_ = new pbc::RepeatedField<global::Promoted.Delivery.DeliveryLog>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Promoted.Delivery.DeliveryLog> DeliveryLog {
      get { return deliveryLog_; }
    }

    /// <summary>Field number for the "diagnostics" field.</summary>
    public const int DiagnosticsFieldNumber = 23;
    private static readonly pb::FieldCodec<global::Event.Diagnostics> _repeated_diagnostics_codec
        = pb::FieldCodec.ForMessage(186, global::Event.Diagnostics.Parser);
    private readonly pbc::RepeatedField<global::Event.Diagnostics> diagnostics_ = new pbc::RepeatedField<global::Event.Diagnostics>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Event.Diagnostics> Diagnostics {
      get { return diagnostics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlatformId != other.PlatformId) return false;
      if (!object.Equals(UserInfo, other.UserInfo)) return false;
      if (!object.Equals(Timing, other.Timing)) return false;
      if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
      if (!object.Equals(Device, other.Device)) return false;
      if(!user_.Equals(other.user_)) return false;
      if(!cohortMembership_.Equals(other.cohortMembership_)) return false;
      if(!view_.Equals(other.view_)) return false;
      if(!autoView_.Equals(other.autoView_)) return false;
      if(!request_.Equals(other.request_)) return false;
      if(!insertion_.Equals(other.insertion_)) return false;
      if(!impression_.Equals(other.impression_)) return false;
      if(!action_.Equals(other.action_)) return false;
      if(!deliveryLog_.Equals(other.deliveryLog_)) return false;
      if(!diagnostics_.Equals(other.diagnostics_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlatformId != 0UL) hash ^= PlatformId.GetHashCode();
      if (userInfo_ != null) hash ^= UserInfo.GetHashCode();
      if (timing_ != null) hash ^= Timing.GetHashCode();
      if (clientInfo_ != null) hash ^= ClientInfo.GetHashCode();
      if (device_ != null) hash ^= Device.GetHashCode();
      hash ^= user_.GetHashCode();
      hash ^= cohortMembership_.GetHashCode();
      hash ^= view_.GetHashCode();
      hash ^= autoView_.GetHashCode();
      hash ^= request_.GetHashCode();
      hash ^= insertion_.GetHashCode();
      hash ^= impression_.GetHashCode();
      hash ^= action_.GetHashCode();
      hash ^= deliveryLog_.GetHashCode();
      hash ^= diagnostics_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      user_.WriteTo(output, _repeated_user_codec);
      cohortMembership_.WriteTo(output, _repeated_cohortMembership_codec);
      view_.WriteTo(output, _repeated_view_codec);
      request_.WriteTo(output, _repeated_request_codec);
      insertion_.WriteTo(output, _repeated_insertion_codec);
      impression_.WriteTo(output, _repeated_impression_codec);
      action_.WriteTo(output, _repeated_action_codec);
      deliveryLog_.WriteTo(output, _repeated_deliveryLog_codec);
      diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
      if (device_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Device);
      }
      autoView_.WriteTo(output, _repeated_autoView_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (userInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserInfo);
      }
      if (timing_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timing);
      }
      if (clientInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientInfo);
      }
      user_.WriteTo(ref output, _repeated_user_codec);
      cohortMembership_.WriteTo(ref output, _repeated_cohortMembership_codec);
      view_.WriteTo(ref output, _repeated_view_codec);
      request_.WriteTo(ref output, _repeated_request_codec);
      insertion_.WriteTo(ref output, _repeated_insertion_codec);
      impression_.WriteTo(ref output, _repeated_impression_codec);
      action_.WriteTo(ref output, _repeated_action_codec);
      deliveryLog_.WriteTo(ref output, _repeated_deliveryLog_codec);
      diagnostics_.WriteTo(ref output, _repeated_diagnostics_codec);
      if (device_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Device);
      }
      autoView_.WriteTo(ref output, _repeated_autoView_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlatformId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlatformId);
      }
      if (userInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserInfo);
      }
      if (timing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timing);
      }
      if (clientInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
      }
      if (device_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Device);
      }
      size += user_.CalculateSize(_repeated_user_codec);
      size += cohortMembership_.CalculateSize(_repeated_cohortMembership_codec);
      size += view_.CalculateSize(_repeated_view_codec);
      size += autoView_.CalculateSize(_repeated_autoView_codec);
      size += request_.CalculateSize(_repeated_request_codec);
      size += insertion_.CalculateSize(_repeated_insertion_codec);
      size += impression_.CalculateSize(_repeated_impression_codec);
      size += action_.CalculateSize(_repeated_action_codec);
      size += deliveryLog_.CalculateSize(_repeated_deliveryLog_codec);
      size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlatformId != 0UL) {
        PlatformId = other.PlatformId;
      }
      if (other.userInfo_ != null) {
        if (userInfo_ == null) {
          UserInfo = new global::Promoted.Common.UserInfo();
        }
        UserInfo.MergeFrom(other.UserInfo);
      }
      if (other.timing_ != null) {
        if (timing_ == null) {
          Timing = new global::Promoted.Common.Timing();
        }
        Timing.MergeFrom(other.Timing);
      }
      if (other.clientInfo_ != null) {
        if (clientInfo_ == null) {
          ClientInfo = new global::Promoted.Common.ClientInfo();
        }
        ClientInfo.MergeFrom(other.ClientInfo);
      }
      if (other.device_ != null) {
        if (device_ == null) {
          Device = new global::Promoted.Common.Device();
        }
        Device.MergeFrom(other.Device);
      }
      user_.Add(other.user_);
      cohortMembership_.Add(other.cohortMembership_);
      view_.Add(other.view_);
      autoView_.Add(other.autoView_);
      request_.Add(other.request_);
      insertion_.Add(other.insertion_);
      impression_.Add(other.impression_);
      action_.Add(other.action_);
      deliveryLog_.Add(other.deliveryLog_);
      diagnostics_.Add(other.diagnostics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 58: {
            user_.AddEntriesFrom(input, _repeated_user_codec);
            break;
          }
          case 66: {
            cohortMembership_.AddEntriesFrom(input, _repeated_cohortMembership_codec);
            break;
          }
          case 90: {
            view_.AddEntriesFrom(input, _repeated_view_codec);
            break;
          }
          case 98: {
            request_.AddEntriesFrom(input, _repeated_request_codec);
            break;
          }
          case 106: {
            insertion_.AddEntriesFrom(input, _repeated_insertion_codec);
            break;
          }
          case 114: {
            impression_.AddEntriesFrom(input, _repeated_impression_codec);
            break;
          }
          case 122: {
            action_.AddEntriesFrom(input, _repeated_action_codec);
            break;
          }
          case 146: {
            deliveryLog_.AddEntriesFrom(input, _repeated_deliveryLog_codec);
            break;
          }
          case 186: {
            diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
            break;
          }
          case 194: {
            if (device_ == null) {
              Device = new global::Promoted.Common.Device();
            }
            input.ReadMessage(Device);
            break;
          }
          case 202: {
            autoView_.AddEntriesFrom(input, _repeated_autoView_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (userInfo_ == null) {
              UserInfo = new global::Promoted.Common.UserInfo();
            }
            input.ReadMessage(UserInfo);
            break;
          }
          case 26: {
            if (timing_ == null) {
              Timing = new global::Promoted.Common.Timing();
            }
            input.ReadMessage(Timing);
            break;
          }
          case 34: {
            if (clientInfo_ == null) {
              ClientInfo = new global::Promoted.Common.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
          case 58: {
            user_.AddEntriesFrom(ref input, _repeated_user_codec);
            break;
          }
          case 66: {
            cohortMembership_.AddEntriesFrom(ref input, _repeated_cohortMembership_codec);
            break;
          }
          case 90: {
            view_.AddEntriesFrom(ref input, _repeated_view_codec);
            break;
          }
          case 98: {
            request_.AddEntriesFrom(ref input, _repeated_request_codec);
            break;
          }
          case 106: {
            insertion_.AddEntriesFrom(ref input, _repeated_insertion_codec);
            break;
          }
          case 114: {
            impression_.AddEntriesFrom(ref input, _repeated_impression_codec);
            break;
          }
          case 122: {
            action_.AddEntriesFrom(ref input, _repeated_action_codec);
            break;
          }
          case 146: {
            deliveryLog_.AddEntriesFrom(ref input, _repeated_deliveryLog_codec);
            break;
          }
          case 186: {
            diagnostics_.AddEntriesFrom(ref input, _repeated_diagnostics_codec);
            break;
          }
          case 194: {
            if (device_ == null) {
              Device = new global::Promoted.Common.Device();
            }
            input.ReadMessage(Device);
            break;
          }
          case 202: {
            autoView_.AddEntriesFrom(ref input, _repeated_autoView_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
