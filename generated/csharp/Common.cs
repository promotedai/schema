// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/common/common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Promoted.Common {

  /// <summary>Holder for reflection information generated from proto/common/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/common/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chlwcm90by9jb21tb24vY29tbW9uLnByb3RvEgZjb21tb24aHGdvb2dsZS9w",
            "cm90b2J1Zi9zdHJ1Y3QucHJvdG8i0AEKCkVudGl0eVBhdGgSHwoLcGxhdGZv",
            "cm1faWQYASABKARSCnBsYXRmb3JtSWQSHwoLY3VzdG9tZXJfaWQYAiABKARS",
            "CmN1c3RvbWVySWQSHQoKYWNjb3VudF9pZBgEIAEoBFIJYWNjb3VudElkEh8K",
            "C2NhbXBhaWduX2lkGAUgASgEUgpjYW1wYWlnbklkEiEKDHByb21vdGlvbl9p",
            "ZBgGIAEoBFILcHJvbW90aW9uSWQSHQoKY29udGVudF9pZBgDIAEoBFIJY29u",
            "dGVudElkImcKBU1vbmV5EjkKDWN1cnJlbmN5X2NvZGUYASABKA4yFC5jb21t",
            "b24uQ3VycmVuY3lDb2RlUgxjdXJyZW5jeUNvZGUSIwoNYW1vdW50X21pY3Jv",
            "cxgCIAEoA1IMYW1vdW50TWljcm9zItIBCghVc2VySW5mbxIXCgd1c2VyX2lk",
            "GAEgASgJUgZ1c2VySWQSHgoLbG9nX3VzZXJfaWQYAiABKAlSCWxvZ1VzZXJJ",
            "ZBIoChBpc19pbnRlcm5hbF91c2VyGAMgASgIUg5pc0ludGVybmFsVXNlchIh",
            "CgxpZ25vcmVfdXNhZ2UYBCABKAhSC2lnbm9yZVVzYWdlEiAKDGFub25fdXNl",
            "cl9pZBgFIAEoCVIKYW5vblVzZXJJZBIeCgtoYXNfdXNlcl9pZBgGIAEoCFIJ",
            "aGFzVXNlcklkIsYCCgpDbGllbnRJbmZvEj4KC2NsaWVudF90eXBlGAEgASgO",
            "Mh0uY29tbW9uLkNsaWVudEluZm8uQ2xpZW50VHlwZVIKY2xpZW50VHlwZRJB",
            "Cgx0cmFmZmljX3R5cGUYAiABKA4yHi5jb21tb24uQ2xpZW50SW5mby5UcmFm",
            "ZmljVHlwZVILdHJhZmZpY1R5cGUiWAoKQ2xpZW50VHlwZRIaChZVTktOT1dO",
            "X1JFUVVFU1RfQ0xJRU5UEAASEwoPUExBVEZPUk1fU0VSVkVSEAESEwoPUExB",
            "VEZPUk1fQ0xJRU5UEAIiBAgDEAQiWwoLVHJhZmZpY1R5cGUSGAoUVU5LTk9X",
            "Tl9UUkFGRklDX1RZUEUQABIOCgpQUk9EVUNUSU9OEAESCgoGUkVQTEFZEAIS",
            "CgoGU0hBRE9XEAQiBAgDEAMiBAgFEAUiTgoGTG9jYWxlEiMKDWxhbmd1YWdl",
            "X2NvZGUYASABKAlSDGxhbmd1YWdlQ29kZRIfCgtyZWdpb25fY29kZRgCIAEo",
            "CVIKcmVnaW9uQ29kZSI0CgRTaXplEhQKBXdpZHRoGAEgASgNUgV3aWR0aBIW",
            "CgZoZWlnaHQYAiABKA1SBmhlaWdodCJACgZTY3JlZW4SIAoEc2l6ZRgBIAEo",
            "CzIMLmNvbW1vbi5TaXplUgRzaXplEhQKBXNjYWxlGAIgASgCUgVzY2FsZSLz",
            "AwoGRGV2aWNlEjMKC2RldmljZV90eXBlGAEgASgOMhIuY29tbW9uLkRldmlj",
            "ZVR5cGVSCmRldmljZVR5cGUSFAoFYnJhbmQYAiABKAlSBWJyYW5kEiIKDG1h",
            "bnVmYWN0dXJlchgDIAEoCVIMbWFudWZhY3R1cmVyEh4KCmlkZW50aWZpZXIY",
            "BCABKAlSCmlkZW50aWZpZXISHQoKb3NfdmVyc2lvbhgFIAEoCVIJb3NWZXJz",
            "aW9uEioKBmxvY2FsZRgGIAEoCzIOLmNvbW1vbi5Mb2NhbGVCAhgBUgZsb2Nh",
            "bGUSJgoGc2NyZWVuGAcgASgLMg4uY29tbW9uLlNjcmVlblIGc2NyZWVuEh0K",
            "CmlwX2FkZHJlc3MYCCABKAlSCWlwQWRkcmVzcxIsCghsb2NhdGlvbhgJIAEo",
            "CzIQLmNvbW1vbi5Mb2NhdGlvblIIbG9jYXRpb24SKQoHYnJvd3NlchgKIAEo",
            "CzIPLmNvbW1vbi5Ccm93c2VyUgdicm93c2VyEjAKFHBsYXRmb3JtX2FwcF92",
            "ZXJzaW9uGAsgASgJUhJwbGF0Zm9ybUFwcFZlcnNpb24SPQobcHJvbW90ZWRf",
            "bW9iaWxlX3Nka192ZXJzaW9uGAwgASgJUhhwcm9tb3RlZE1vYmlsZVNka1Zl",
            "cnNpb24iggIKC0NsaWVudEhpbnRzEhsKCWlzX21vYmlsZRgBIAEoCFIIaXNN",
            "b2JpbGUSLQoFYnJhbmQYAiADKAsyFy5jb21tb24uQ2xpZW50SGludEJyYW5k",
            "UgVicmFuZBIiCgxhcmNoaXRlY3R1cmUYAyABKAlSDGFyY2hpdGVjdHVyZRIU",
            "CgVtb2RlbBgEIAEoCVIFbW9kZWwSGgoIcGxhdGZvcm0YBSABKAlSCHBsYXRm",
            "b3JtEikKEHBsYXRmb3JtX3ZlcnNpb24YBiABKAlSD3BsYXRmb3JtVmVyc2lv",
            "bhImCg91YV9mdWxsX3ZlcnNpb24YByABKAlSDXVhRnVsbFZlcnNpb24iQQoP",
            "Q2xpZW50SGludEJyYW5kEhQKBWJyYW5kGAEgASgJUgVicmFuZBIYCgd2ZXJz",
            "aW9uGAIgASgJUgd2ZXJzaW9uIq8BCgdCcm93c2VyEh0KCnVzZXJfYWdlbnQY",
            "ASABKAlSCXVzZXJBZ2VudBIxCg12aWV3cG9ydF9zaXplGAIgASgLMgwuY29t",
            "bW9uLlNpemVSDHZpZXdwb3J0U2l6ZRI2CgxjbGllbnRfaGludHMYAyABKAsy",
            "Ey5jb21tb24uQ2xpZW50SGludHNSC2NsaWVudEhpbnRzEhoKCHJlZmVycmVy",
            "GAQgASgJUghyZWZlcnJlciJyCghMb2NhdGlvbhIaCghsYXRpdHVkZRgBIAEo",
            "AVIIbGF0aXR1ZGUSHAoJbG9uZ2l0dWRlGAIgASgBUglsb25naXR1ZGUSLAoS",
            "YWNjdXJhY3lfaW5fbWV0ZXJzGAMgASgBUhBhY2N1cmFjeUluTWV0ZXJzIkYK",
            "BlRpbWluZxIwChRjbGllbnRfbG9nX3RpbWVzdGFtcBgBIAEoBFISY2xpZW50",
            "TG9nVGltZXN0YW1wSgQIAhADSgQIAxAEInoKClByb3BlcnRpZXMSIwoMc3Ry",
            "dWN0X2J5dGVzGAEgASgMSABSC3N0cnVjdEJ5dGVzEjEKBnN0cnVjdBgCIAEo",
            "CzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RIAFIGc3RydWN0Qg4KDHN0cnVj",
            "dF9maWVsZEoECAMQBCrdAQoMQ3VycmVuY3lDb2RlEhkKFVVOS05PV05fQ1VS",
            "UkVOQ1lfQ09ERRAAEgcKA1VTRBABEgcKA0VVUhACEgcKA0pQWRADEgcKA0dC",
            "UBAEEgcKA0FVRBAFEgcKA0NBRBAGEgcKA0NIRhAHEgcKA0NOWRAIEgcKA0hL",
            "RBAJEgcKA05aRBAKEgcKA1NFSxALEgcKA0tSVxAMEgcKA1NHRBANEgcKA05P",
            "SxAOEgcKA01YThAPEgcKA0lOUhAQEgcKA1JVQhAREgcKA1pBUhASEgcKA1RS",
            "WRATEgcKA0JSTBAUKkoKCkRldmljZVR5cGUSFwoTVU5LTk9XTl9ERVZJQ0Vf",
            "VFlQRRAAEgsKB0RFU0tUT1AQARIKCgZNT0JJTEUQAhIKCgZUQUJMRVQQA0Jz",
            "ChhhaS5wcm9tb3RlZC5wcm90by5jb21tb25CC0NvbW1vblByb3RvUAFaNmdp",
            "dGh1Yi5jb20vcHJvbW90ZWRhaS9zY2hlbWEvZ2VuZXJhdGVkL2dvL3Byb3Rv",
            "L2NvbW1vbqoCD1Byb21vdGVkLkNvbW1vbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Promoted.Common.CurrencyCode), typeof(global::Promoted.Common.DeviceType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.EntityPath), global::Promoted.Common.EntityPath.Parser, new[]{ "PlatformId", "CustomerId", "AccountId", "CampaignId", "PromotionId", "ContentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.Money), global::Promoted.Common.Money.Parser, new[]{ "CurrencyCode", "AmountMicros" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.UserInfo), global::Promoted.Common.UserInfo.Parser, new[]{ "UserId", "LogUserId", "IsInternalUser", "IgnoreUsage", "AnonUserId", "HasUserId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.ClientInfo), global::Promoted.Common.ClientInfo.Parser, new[]{ "ClientType", "TrafficType" }, null, new[]{ typeof(global::Promoted.Common.ClientInfo.Types.ClientType), typeof(global::Promoted.Common.ClientInfo.Types.TrafficType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.Locale), global::Promoted.Common.Locale.Parser, new[]{ "LanguageCode", "RegionCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.Size), global::Promoted.Common.Size.Parser, new[]{ "Width", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.Screen), global::Promoted.Common.Screen.Parser, new[]{ "Size", "Scale" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.Device), global::Promoted.Common.Device.Parser, new[]{ "DeviceType", "Brand", "Manufacturer", "Identifier", "OsVersion", "Locale", "Screen", "IpAddress", "Location", "Browser", "PlatformAppVersion", "PromotedMobileSdkVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.ClientHints), global::Promoted.Common.ClientHints.Parser, new[]{ "IsMobile", "Brand", "Architecture", "Model", "Platform", "PlatformVersion", "UaFullVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.ClientHintBrand), global::Promoted.Common.ClientHintBrand.Parser, new[]{ "Brand", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.Browser), global::Promoted.Common.Browser.Parser, new[]{ "UserAgent", "ViewportSize", "ClientHints", "Referrer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.Location), global::Promoted.Common.Location.Parser, new[]{ "Latitude", "Longitude", "AccuracyInMeters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.Timing), global::Promoted.Common.Timing.Parser, new[]{ "ClientLogTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Promoted.Common.Properties), global::Promoted.Common.Properties.Parser, new[]{ "StructBytes", "Struct" }, new[]{ "StructField" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CurrencyCode {
    [pbr::OriginalName("UNKNOWN_CURRENCY_CODE")] UnknownCurrencyCode = 0,
    [pbr::OriginalName("USD")] Usd = 1,
    [pbr::OriginalName("EUR")] Eur = 2,
    [pbr::OriginalName("JPY")] Jpy = 3,
    [pbr::OriginalName("GBP")] Gbp = 4,
    [pbr::OriginalName("AUD")] Aud = 5,
    [pbr::OriginalName("CAD")] Cad = 6,
    [pbr::OriginalName("CHF")] Chf = 7,
    [pbr::OriginalName("CNY")] Cny = 8,
    [pbr::OriginalName("HKD")] Hkd = 9,
    [pbr::OriginalName("NZD")] Nzd = 10,
    [pbr::OriginalName("SEK")] Sek = 11,
    [pbr::OriginalName("KRW")] Krw = 12,
    [pbr::OriginalName("SGD")] Sgd = 13,
    [pbr::OriginalName("NOK")] Nok = 14,
    [pbr::OriginalName("MXN")] Mxn = 15,
    [pbr::OriginalName("INR")] Inr = 16,
    [pbr::OriginalName("RUB")] Rub = 17,
    [pbr::OriginalName("ZAR")] Zar = 18,
    [pbr::OriginalName("TRY")] Try = 19,
    [pbr::OriginalName("BRL")] Brl = 20,
  }

  public enum DeviceType {
    [pbr::OriginalName("UNKNOWN_DEVICE_TYPE")] UnknownDeviceType = 0,
    [pbr::OriginalName("DESKTOP")] Desktop = 1,
    [pbr::OriginalName("MOBILE")] Mobile = 2,
    [pbr::OriginalName("TABLET")] Tablet = 3,
  }

  #endregion

  #region Messages
  public sealed partial class EntityPath : pb::IMessage<EntityPath>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityPath> _parser = new pb::MessageParser<EntityPath>(() => new EntityPath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityPath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityPath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityPath(EntityPath other) : this() {
      platformId_ = other.platformId_;
      customerId_ = other.customerId_;
      accountId_ = other.accountId_;
      campaignId_ = other.campaignId_;
      promotionId_ = other.promotionId_;
      contentId_ = other.contentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityPath Clone() {
      return new EntityPath(this);
    }

    /// <summary>Field number for the "platform_id" field.</summary>
    public const int PlatformIdFieldNumber = 1;
    private ulong platformId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlatformId {
      get { return platformId_; }
      set {
        platformId_ = value;
      }
    }

    /// <summary>Field number for the "customer_id" field.</summary>
    public const int CustomerIdFieldNumber = 2;
    private ulong customerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CustomerId {
      get { return customerId_; }
      set {
        customerId_ = value;
      }
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 4;
    private ulong accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "campaign_id" field.</summary>
    public const int CampaignIdFieldNumber = 5;
    private ulong campaignId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = value;
      }
    }

    /// <summary>Field number for the "promotion_id" field.</summary>
    public const int PromotionIdFieldNumber = 6;
    private ulong promotionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PromotionId {
      get { return promotionId_; }
      set {
        promotionId_ = value;
      }
    }

    /// <summary>Field number for the "content_id" field.</summary>
    public const int ContentIdFieldNumber = 3;
    private ulong contentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ContentId {
      get { return contentId_; }
      set {
        contentId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityPath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityPath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlatformId != other.PlatformId) return false;
      if (CustomerId != other.CustomerId) return false;
      if (AccountId != other.AccountId) return false;
      if (CampaignId != other.CampaignId) return false;
      if (PromotionId != other.PromotionId) return false;
      if (ContentId != other.ContentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlatformId != 0UL) hash ^= PlatformId.GetHashCode();
      if (CustomerId != 0UL) hash ^= CustomerId.GetHashCode();
      if (AccountId != 0UL) hash ^= AccountId.GetHashCode();
      if (CampaignId != 0UL) hash ^= CampaignId.GetHashCode();
      if (PromotionId != 0UL) hash ^= PromotionId.GetHashCode();
      if (ContentId != 0UL) hash ^= ContentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (CustomerId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(CustomerId);
      }
      if (ContentId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ContentId);
      }
      if (AccountId != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AccountId);
      }
      if (CampaignId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CampaignId);
      }
      if (PromotionId != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(PromotionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlatformId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(PlatformId);
      }
      if (CustomerId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(CustomerId);
      }
      if (ContentId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ContentId);
      }
      if (AccountId != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AccountId);
      }
      if (CampaignId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CampaignId);
      }
      if (PromotionId != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(PromotionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlatformId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlatformId);
      }
      if (CustomerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CustomerId);
      }
      if (AccountId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AccountId);
      }
      if (CampaignId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CampaignId);
      }
      if (PromotionId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PromotionId);
      }
      if (ContentId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ContentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityPath other) {
      if (other == null) {
        return;
      }
      if (other.PlatformId != 0UL) {
        PlatformId = other.PlatformId;
      }
      if (other.CustomerId != 0UL) {
        CustomerId = other.CustomerId;
      }
      if (other.AccountId != 0UL) {
        AccountId = other.AccountId;
      }
      if (other.CampaignId != 0UL) {
        CampaignId = other.CampaignId;
      }
      if (other.PromotionId != 0UL) {
        PromotionId = other.PromotionId;
      }
      if (other.ContentId != 0UL) {
        ContentId = other.ContentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 16: {
            CustomerId = input.ReadUInt64();
            break;
          }
          case 24: {
            ContentId = input.ReadUInt64();
            break;
          }
          case 32: {
            AccountId = input.ReadUInt64();
            break;
          }
          case 40: {
            CampaignId = input.ReadUInt64();
            break;
          }
          case 48: {
            PromotionId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlatformId = input.ReadUInt64();
            break;
          }
          case 16: {
            CustomerId = input.ReadUInt64();
            break;
          }
          case 24: {
            ContentId = input.ReadUInt64();
            break;
          }
          case 32: {
            AccountId = input.ReadUInt64();
            break;
          }
          case 40: {
            CampaignId = input.ReadUInt64();
            break;
          }
          case 48: {
            PromotionId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Money : pb::IMessage<Money>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Money> _parser = new pb::MessageParser<Money>(() => new Money());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Money> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Money() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Money(Money other) : this() {
      currencyCode_ = other.currencyCode_;
      amountMicros_ = other.amountMicros_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Money Clone() {
      return new Money(this);
    }

    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 1;
    private global::Promoted.Common.CurrencyCode currencyCode_ = global::Promoted.Common.CurrencyCode.UnknownCurrencyCode;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.CurrencyCode CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = value;
      }
    }

    /// <summary>Field number for the "amount_micros" field.</summary>
    public const int AmountMicrosFieldNumber = 2;
    private long amountMicros_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AmountMicros {
      get { return amountMicros_; }
      set {
        amountMicros_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Money);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Money other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrencyCode != other.CurrencyCode) return false;
      if (AmountMicros != other.AmountMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrencyCode != global::Promoted.Common.CurrencyCode.UnknownCurrencyCode) hash ^= CurrencyCode.GetHashCode();
      if (AmountMicros != 0L) hash ^= AmountMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurrencyCode != global::Promoted.Common.CurrencyCode.UnknownCurrencyCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CurrencyCode);
      }
      if (AmountMicros != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AmountMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurrencyCode != global::Promoted.Common.CurrencyCode.UnknownCurrencyCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CurrencyCode);
      }
      if (AmountMicros != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AmountMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrencyCode != global::Promoted.Common.CurrencyCode.UnknownCurrencyCode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CurrencyCode);
      }
      if (AmountMicros != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AmountMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Money other) {
      if (other == null) {
        return;
      }
      if (other.CurrencyCode != global::Promoted.Common.CurrencyCode.UnknownCurrencyCode) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.AmountMicros != 0L) {
        AmountMicros = other.AmountMicros;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrencyCode = (global::Promoted.Common.CurrencyCode) input.ReadEnum();
            break;
          }
          case 16: {
            AmountMicros = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurrencyCode = (global::Promoted.Common.CurrencyCode) input.ReadEnum();
            break;
          }
          case 16: {
            AmountMicros = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserInfo : pb::IMessage<UserInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserInfo> _parser = new pb::MessageParser<UserInfo>(() => new UserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo(UserInfo other) : this() {
      userId_ = other.userId_;
      logUserId_ = other.logUserId_;
      isInternalUser_ = other.isInternalUser_;
      ignoreUsage_ = other.ignoreUsage_;
      anonUserId_ = other.anonUserId_;
      hasUserId_ = other.hasUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo Clone() {
      return new UserInfo(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "log_user_id" field.</summary>
    public const int LogUserIdFieldNumber = 2;
    private string logUserId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogUserId {
      get { return logUserId_; }
      set {
        logUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_internal_user" field.</summary>
    public const int IsInternalUserFieldNumber = 3;
    private bool isInternalUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsInternalUser {
      get { return isInternalUser_; }
      set {
        isInternalUser_ = value;
      }
    }

    /// <summary>Field number for the "ignore_usage" field.</summary>
    public const int IgnoreUsageFieldNumber = 4;
    private bool ignoreUsage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IgnoreUsage {
      get { return ignoreUsage_; }
      set {
        ignoreUsage_ = value;
      }
    }

    /// <summary>Field number for the "anon_user_id" field.</summary>
    public const int AnonUserIdFieldNumber = 5;
    private string anonUserId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AnonUserId {
      get { return anonUserId_; }
      set {
        anonUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "has_user_id" field.</summary>
    public const int HasUserIdFieldNumber = 6;
    private bool hasUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserId {
      get { return hasUserId_; }
      set {
        hasUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (LogUserId != other.LogUserId) return false;
      if (IsInternalUser != other.IsInternalUser) return false;
      if (IgnoreUsage != other.IgnoreUsage) return false;
      if (AnonUserId != other.AnonUserId) return false;
      if (HasUserId != other.HasUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (LogUserId.Length != 0) hash ^= LogUserId.GetHashCode();
      if (IsInternalUser != false) hash ^= IsInternalUser.GetHashCode();
      if (IgnoreUsage != false) hash ^= IgnoreUsage.GetHashCode();
      if (AnonUserId.Length != 0) hash ^= AnonUserId.GetHashCode();
      if (HasUserId != false) hash ^= HasUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (LogUserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LogUserId);
      }
      if (IsInternalUser != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsInternalUser);
      }
      if (IgnoreUsage != false) {
        output.WriteRawTag(32);
        output.WriteBool(IgnoreUsage);
      }
      if (AnonUserId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AnonUserId);
      }
      if (HasUserId != false) {
        output.WriteRawTag(48);
        output.WriteBool(HasUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (LogUserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LogUserId);
      }
      if (IsInternalUser != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsInternalUser);
      }
      if (IgnoreUsage != false) {
        output.WriteRawTag(32);
        output.WriteBool(IgnoreUsage);
      }
      if (AnonUserId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AnonUserId);
      }
      if (HasUserId != false) {
        output.WriteRawTag(48);
        output.WriteBool(HasUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (LogUserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogUserId);
      }
      if (IsInternalUser != false) {
        size += 1 + 1;
      }
      if (IgnoreUsage != false) {
        size += 1 + 1;
      }
      if (AnonUserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnonUserId);
      }
      if (HasUserId != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInfo other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.LogUserId.Length != 0) {
        LogUserId = other.LogUserId;
      }
      if (other.IsInternalUser != false) {
        IsInternalUser = other.IsInternalUser;
      }
      if (other.IgnoreUsage != false) {
        IgnoreUsage = other.IgnoreUsage;
      }
      if (other.AnonUserId.Length != 0) {
        AnonUserId = other.AnonUserId;
      }
      if (other.HasUserId != false) {
        HasUserId = other.HasUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            LogUserId = input.ReadString();
            break;
          }
          case 24: {
            IsInternalUser = input.ReadBool();
            break;
          }
          case 32: {
            IgnoreUsage = input.ReadBool();
            break;
          }
          case 42: {
            AnonUserId = input.ReadString();
            break;
          }
          case 48: {
            HasUserId = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            LogUserId = input.ReadString();
            break;
          }
          case 24: {
            IsInternalUser = input.ReadBool();
            break;
          }
          case 32: {
            IgnoreUsage = input.ReadBool();
            break;
          }
          case 42: {
            AnonUserId = input.ReadString();
            break;
          }
          case 48: {
            HasUserId = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientInfo : pb::IMessage<ClientInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientInfo> _parser = new pb::MessageParser<ClientInfo>(() => new ClientInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfo(ClientInfo other) : this() {
      clientType_ = other.clientType_;
      trafficType_ = other.trafficType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfo Clone() {
      return new ClientInfo(this);
    }

    /// <summary>Field number for the "client_type" field.</summary>
    public const int ClientTypeFieldNumber = 1;
    private global::Promoted.Common.ClientInfo.Types.ClientType clientType_ = global::Promoted.Common.ClientInfo.Types.ClientType.UnknownRequestClient;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.ClientInfo.Types.ClientType ClientType {
      get { return clientType_; }
      set {
        clientType_ = value;
      }
    }

    /// <summary>Field number for the "traffic_type" field.</summary>
    public const int TrafficTypeFieldNumber = 2;
    private global::Promoted.Common.ClientInfo.Types.TrafficType trafficType_ = global::Promoted.Common.ClientInfo.Types.TrafficType.UnknownTrafficType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.ClientInfo.Types.TrafficType TrafficType {
      get { return trafficType_; }
      set {
        trafficType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientType != other.ClientType) return false;
      if (TrafficType != other.TrafficType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientType != global::Promoted.Common.ClientInfo.Types.ClientType.UnknownRequestClient) hash ^= ClientType.GetHashCode();
      if (TrafficType != global::Promoted.Common.ClientInfo.Types.TrafficType.UnknownTrafficType) hash ^= TrafficType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientType != global::Promoted.Common.ClientInfo.Types.ClientType.UnknownRequestClient) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ClientType);
      }
      if (TrafficType != global::Promoted.Common.ClientInfo.Types.TrafficType.UnknownTrafficType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TrafficType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientType != global::Promoted.Common.ClientInfo.Types.ClientType.UnknownRequestClient) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ClientType);
      }
      if (TrafficType != global::Promoted.Common.ClientInfo.Types.TrafficType.UnknownTrafficType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TrafficType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientType != global::Promoted.Common.ClientInfo.Types.ClientType.UnknownRequestClient) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClientType);
      }
      if (TrafficType != global::Promoted.Common.ClientInfo.Types.TrafficType.UnknownTrafficType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TrafficType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientInfo other) {
      if (other == null) {
        return;
      }
      if (other.ClientType != global::Promoted.Common.ClientInfo.Types.ClientType.UnknownRequestClient) {
        ClientType = other.ClientType;
      }
      if (other.TrafficType != global::Promoted.Common.ClientInfo.Types.TrafficType.UnknownTrafficType) {
        TrafficType = other.TrafficType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientType = (global::Promoted.Common.ClientInfo.Types.ClientType) input.ReadEnum();
            break;
          }
          case 16: {
            TrafficType = (global::Promoted.Common.ClientInfo.Types.TrafficType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientType = (global::Promoted.Common.ClientInfo.Types.ClientType) input.ReadEnum();
            break;
          }
          case 16: {
            TrafficType = (global::Promoted.Common.ClientInfo.Types.TrafficType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ClientInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ClientType {
        [pbr::OriginalName("UNKNOWN_REQUEST_CLIENT")] UnknownRequestClient = 0,
        [pbr::OriginalName("PLATFORM_SERVER")] PlatformServer = 1,
        [pbr::OriginalName("PLATFORM_CLIENT")] PlatformClient = 2,
      }

      public enum TrafficType {
        [pbr::OriginalName("UNKNOWN_TRAFFIC_TYPE")] UnknownTrafficType = 0,
        [pbr::OriginalName("PRODUCTION")] Production = 1,
        [pbr::OriginalName("REPLAY")] Replay = 2,
        [pbr::OriginalName("SHADOW")] Shadow = 4,
      }

    }
    #endregion

  }

  public sealed partial class Locale : pb::IMessage<Locale>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Locale> _parser = new pb::MessageParser<Locale>(() => new Locale());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Locale> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Locale() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Locale(Locale other) : this() {
      languageCode_ = other.languageCode_;
      regionCode_ = other.regionCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Locale Clone() {
      return new Locale(this);
    }

    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 1;
    private string languageCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region_code" field.</summary>
    public const int RegionCodeFieldNumber = 2;
    private string regionCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionCode {
      get { return regionCode_; }
      set {
        regionCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Locale);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Locale other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LanguageCode != other.LanguageCode) return false;
      if (RegionCode != other.RegionCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      if (RegionCode.Length != 0) hash ^= RegionCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LanguageCode);
      }
      if (RegionCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegionCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LanguageCode);
      }
      if (RegionCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegionCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      if (RegionCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Locale other) {
      if (other == null) {
        return;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      if (other.RegionCode.Length != 0) {
        RegionCode = other.RegionCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LanguageCode = input.ReadString();
            break;
          }
          case 18: {
            RegionCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LanguageCode = input.ReadString();
            break;
          }
          case 18: {
            RegionCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Size : pb::IMessage<Size>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Size> _parser = new pb::MessageParser<Size>(() => new Size());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Size> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Size() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Size(Size other) : this() {
      width_ = other.width_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Size Clone() {
      return new Size(this);
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 1;
    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Size);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Size other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Width != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Width != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Size other) {
      if (other == null) {
        return;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Width = input.ReadUInt32();
            break;
          }
          case 16: {
            Height = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Width = input.ReadUInt32();
            break;
          }
          case 16: {
            Height = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Screen : pb::IMessage<Screen>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Screen> _parser = new pb::MessageParser<Screen>(() => new Screen());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Screen> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Screen() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Screen(Screen other) : this() {
      size_ = other.size_ != null ? other.size_.Clone() : null;
      scale_ = other.scale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Screen Clone() {
      return new Screen(this);
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 1;
    private global::Promoted.Common.Size size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Size Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 2;
    private float scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Screen);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Screen other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Size, other.Size)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (size_ != null) hash ^= Size.GetHashCode();
      if (Scale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (size_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Size);
      }
      if (Scale != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Scale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (size_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Size);
      }
      if (Scale != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Scale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (size_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Size);
      }
      if (Scale != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Screen other) {
      if (other == null) {
        return;
      }
      if (other.size_ != null) {
        if (size_ == null) {
          Size = new global::Promoted.Common.Size();
        }
        Size.MergeFrom(other.Size);
      }
      if (other.Scale != 0F) {
        Scale = other.Scale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (size_ == null) {
              Size = new global::Promoted.Common.Size();
            }
            input.ReadMessage(Size);
            break;
          }
          case 21: {
            Scale = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (size_ == null) {
              Size = new global::Promoted.Common.Size();
            }
            input.ReadMessage(Size);
            break;
          }
          case 21: {
            Scale = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Device : pb::IMessage<Device>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Device> _parser = new pb::MessageParser<Device>(() => new Device());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Device> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device(Device other) : this() {
      deviceType_ = other.deviceType_;
      brand_ = other.brand_;
      manufacturer_ = other.manufacturer_;
      identifier_ = other.identifier_;
      osVersion_ = other.osVersion_;
      locale_ = other.locale_ != null ? other.locale_.Clone() : null;
      screen_ = other.screen_ != null ? other.screen_.Clone() : null;
      ipAddress_ = other.ipAddress_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      browser_ = other.browser_ != null ? other.browser_.Clone() : null;
      platformAppVersion_ = other.platformAppVersion_;
      promotedMobileSdkVersion_ = other.promotedMobileSdkVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Device Clone() {
      return new Device(this);
    }

    /// <summary>Field number for the "device_type" field.</summary>
    public const int DeviceTypeFieldNumber = 1;
    private global::Promoted.Common.DeviceType deviceType_ = global::Promoted.Common.DeviceType.UnknownDeviceType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.DeviceType DeviceType {
      get { return deviceType_; }
      set {
        deviceType_ = value;
      }
    }

    /// <summary>Field number for the "brand" field.</summary>
    public const int BrandFieldNumber = 2;
    private string brand_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Brand {
      get { return brand_; }
      set {
        brand_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "manufacturer" field.</summary>
    public const int ManufacturerFieldNumber = 3;
    private string manufacturer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Manufacturer {
      get { return manufacturer_; }
      set {
        manufacturer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identifier" field.</summary>
    public const int IdentifierFieldNumber = 4;
    private string identifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Identifier {
      get { return identifier_; }
      set {
        identifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "os_version" field.</summary>
    public const int OsVersionFieldNumber = 5;
    private string osVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OsVersion {
      get { return osVersion_; }
      set {
        osVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 6;
    private global::Promoted.Common.Locale locale_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Locale Locale {
      get { return locale_; }
      set {
        locale_ = value;
      }
    }

    /// <summary>Field number for the "screen" field.</summary>
    public const int ScreenFieldNumber = 7;
    private global::Promoted.Common.Screen screen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Screen Screen {
      get { return screen_; }
      set {
        screen_ = value;
      }
    }

    /// <summary>Field number for the "ip_address" field.</summary>
    public const int IpAddressFieldNumber = 8;
    private string ipAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IpAddress {
      get { return ipAddress_; }
      set {
        ipAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 9;
    private global::Promoted.Common.Location location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Location Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "browser" field.</summary>
    public const int BrowserFieldNumber = 10;
    private global::Promoted.Common.Browser browser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Browser Browser {
      get { return browser_; }
      set {
        browser_ = value;
      }
    }

    /// <summary>Field number for the "platform_app_version" field.</summary>
    public const int PlatformAppVersionFieldNumber = 11;
    private string platformAppVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlatformAppVersion {
      get { return platformAppVersion_; }
      set {
        platformAppVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "promoted_mobile_sdk_version" field.</summary>
    public const int PromotedMobileSdkVersionFieldNumber = 12;
    private string promotedMobileSdkVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromotedMobileSdkVersion {
      get { return promotedMobileSdkVersion_; }
      set {
        promotedMobileSdkVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Device);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Device other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceType != other.DeviceType) return false;
      if (Brand != other.Brand) return false;
      if (Manufacturer != other.Manufacturer) return false;
      if (Identifier != other.Identifier) return false;
      if (OsVersion != other.OsVersion) return false;
      if (!object.Equals(Locale, other.Locale)) return false;
      if (!object.Equals(Screen, other.Screen)) return false;
      if (IpAddress != other.IpAddress) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (!object.Equals(Browser, other.Browser)) return false;
      if (PlatformAppVersion != other.PlatformAppVersion) return false;
      if (PromotedMobileSdkVersion != other.PromotedMobileSdkVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceType != global::Promoted.Common.DeviceType.UnknownDeviceType) hash ^= DeviceType.GetHashCode();
      if (Brand.Length != 0) hash ^= Brand.GetHashCode();
      if (Manufacturer.Length != 0) hash ^= Manufacturer.GetHashCode();
      if (Identifier.Length != 0) hash ^= Identifier.GetHashCode();
      if (OsVersion.Length != 0) hash ^= OsVersion.GetHashCode();
      if (locale_ != null) hash ^= Locale.GetHashCode();
      if (screen_ != null) hash ^= Screen.GetHashCode();
      if (IpAddress.Length != 0) hash ^= IpAddress.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (browser_ != null) hash ^= Browser.GetHashCode();
      if (PlatformAppVersion.Length != 0) hash ^= PlatformAppVersion.GetHashCode();
      if (PromotedMobileSdkVersion.Length != 0) hash ^= PromotedMobileSdkVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceType != global::Promoted.Common.DeviceType.UnknownDeviceType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DeviceType);
      }
      if (Brand.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Brand);
      }
      if (Manufacturer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Manufacturer);
      }
      if (Identifier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Identifier);
      }
      if (OsVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OsVersion);
      }
      if (locale_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Locale);
      }
      if (screen_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Screen);
      }
      if (IpAddress.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(IpAddress);
      }
      if (location_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Location);
      }
      if (browser_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Browser);
      }
      if (PlatformAppVersion.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(PlatformAppVersion);
      }
      if (PromotedMobileSdkVersion.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PromotedMobileSdkVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceType != global::Promoted.Common.DeviceType.UnknownDeviceType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DeviceType);
      }
      if (Brand.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Brand);
      }
      if (Manufacturer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Manufacturer);
      }
      if (Identifier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Identifier);
      }
      if (OsVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OsVersion);
      }
      if (locale_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Locale);
      }
      if (screen_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Screen);
      }
      if (IpAddress.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(IpAddress);
      }
      if (location_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Location);
      }
      if (browser_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Browser);
      }
      if (PlatformAppVersion.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(PlatformAppVersion);
      }
      if (PromotedMobileSdkVersion.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PromotedMobileSdkVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceType != global::Promoted.Common.DeviceType.UnknownDeviceType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DeviceType);
      }
      if (Brand.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Brand);
      }
      if (Manufacturer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Manufacturer);
      }
      if (Identifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identifier);
      }
      if (OsVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OsVersion);
      }
      if (locale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Locale);
      }
      if (screen_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Screen);
      }
      if (IpAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAddress);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (browser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Browser);
      }
      if (PlatformAppVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlatformAppVersion);
      }
      if (PromotedMobileSdkVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PromotedMobileSdkVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Device other) {
      if (other == null) {
        return;
      }
      if (other.DeviceType != global::Promoted.Common.DeviceType.UnknownDeviceType) {
        DeviceType = other.DeviceType;
      }
      if (other.Brand.Length != 0) {
        Brand = other.Brand;
      }
      if (other.Manufacturer.Length != 0) {
        Manufacturer = other.Manufacturer;
      }
      if (other.Identifier.Length != 0) {
        Identifier = other.Identifier;
      }
      if (other.OsVersion.Length != 0) {
        OsVersion = other.OsVersion;
      }
      if (other.locale_ != null) {
        if (locale_ == null) {
          Locale = new global::Promoted.Common.Locale();
        }
        Locale.MergeFrom(other.Locale);
      }
      if (other.screen_ != null) {
        if (screen_ == null) {
          Screen = new global::Promoted.Common.Screen();
        }
        Screen.MergeFrom(other.Screen);
      }
      if (other.IpAddress.Length != 0) {
        IpAddress = other.IpAddress;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Promoted.Common.Location();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.browser_ != null) {
        if (browser_ == null) {
          Browser = new global::Promoted.Common.Browser();
        }
        Browser.MergeFrom(other.Browser);
      }
      if (other.PlatformAppVersion.Length != 0) {
        PlatformAppVersion = other.PlatformAppVersion;
      }
      if (other.PromotedMobileSdkVersion.Length != 0) {
        PromotedMobileSdkVersion = other.PromotedMobileSdkVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeviceType = (global::Promoted.Common.DeviceType) input.ReadEnum();
            break;
          }
          case 18: {
            Brand = input.ReadString();
            break;
          }
          case 26: {
            Manufacturer = input.ReadString();
            break;
          }
          case 34: {
            Identifier = input.ReadString();
            break;
          }
          case 42: {
            OsVersion = input.ReadString();
            break;
          }
          case 50: {
            if (locale_ == null) {
              Locale = new global::Promoted.Common.Locale();
            }
            input.ReadMessage(Locale);
            break;
          }
          case 58: {
            if (screen_ == null) {
              Screen = new global::Promoted.Common.Screen();
            }
            input.ReadMessage(Screen);
            break;
          }
          case 66: {
            IpAddress = input.ReadString();
            break;
          }
          case 74: {
            if (location_ == null) {
              Location = new global::Promoted.Common.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 82: {
            if (browser_ == null) {
              Browser = new global::Promoted.Common.Browser();
            }
            input.ReadMessage(Browser);
            break;
          }
          case 90: {
            PlatformAppVersion = input.ReadString();
            break;
          }
          case 98: {
            PromotedMobileSdkVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DeviceType = (global::Promoted.Common.DeviceType) input.ReadEnum();
            break;
          }
          case 18: {
            Brand = input.ReadString();
            break;
          }
          case 26: {
            Manufacturer = input.ReadString();
            break;
          }
          case 34: {
            Identifier = input.ReadString();
            break;
          }
          case 42: {
            OsVersion = input.ReadString();
            break;
          }
          case 50: {
            if (locale_ == null) {
              Locale = new global::Promoted.Common.Locale();
            }
            input.ReadMessage(Locale);
            break;
          }
          case 58: {
            if (screen_ == null) {
              Screen = new global::Promoted.Common.Screen();
            }
            input.ReadMessage(Screen);
            break;
          }
          case 66: {
            IpAddress = input.ReadString();
            break;
          }
          case 74: {
            if (location_ == null) {
              Location = new global::Promoted.Common.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 82: {
            if (browser_ == null) {
              Browser = new global::Promoted.Common.Browser();
            }
            input.ReadMessage(Browser);
            break;
          }
          case 90: {
            PlatformAppVersion = input.ReadString();
            break;
          }
          case 98: {
            PromotedMobileSdkVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientHints : pb::IMessage<ClientHints>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientHints> _parser = new pb::MessageParser<ClientHints>(() => new ClientHints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientHints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientHints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientHints(ClientHints other) : this() {
      isMobile_ = other.isMobile_;
      brand_ = other.brand_.Clone();
      architecture_ = other.architecture_;
      model_ = other.model_;
      platform_ = other.platform_;
      platformVersion_ = other.platformVersion_;
      uaFullVersion_ = other.uaFullVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientHints Clone() {
      return new ClientHints(this);
    }

    /// <summary>Field number for the "is_mobile" field.</summary>
    public const int IsMobileFieldNumber = 1;
    private bool isMobile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMobile {
      get { return isMobile_; }
      set {
        isMobile_ = value;
      }
    }

    /// <summary>Field number for the "brand" field.</summary>
    public const int BrandFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Promoted.Common.ClientHintBrand> _repeated_brand_codec
        = pb::FieldCodec.ForMessage(18, global::Promoted.Common.ClientHintBrand.Parser);
    private readonly pbc::RepeatedField<global::Promoted.Common.ClientHintBrand> brand_ = new pbc::RepeatedField<global::Promoted.Common.ClientHintBrand>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Promoted.Common.ClientHintBrand> Brand {
      get { return brand_; }
    }

    /// <summary>Field number for the "architecture" field.</summary>
    public const int ArchitectureFieldNumber = 3;
    private string architecture_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Architecture {
      get { return architecture_; }
      set {
        architecture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 4;
    private string model_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 5;
    private string platform_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Platform {
      get { return platform_; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform_version" field.</summary>
    public const int PlatformVersionFieldNumber = 6;
    private string platformVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlatformVersion {
      get { return platformVersion_; }
      set {
        platformVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ua_full_version" field.</summary>
    public const int UaFullVersionFieldNumber = 7;
    private string uaFullVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UaFullVersion {
      get { return uaFullVersion_; }
      set {
        uaFullVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientHints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientHints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsMobile != other.IsMobile) return false;
      if(!brand_.Equals(other.brand_)) return false;
      if (Architecture != other.Architecture) return false;
      if (Model != other.Model) return false;
      if (Platform != other.Platform) return false;
      if (PlatformVersion != other.PlatformVersion) return false;
      if (UaFullVersion != other.UaFullVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsMobile != false) hash ^= IsMobile.GetHashCode();
      hash ^= brand_.GetHashCode();
      if (Architecture.Length != 0) hash ^= Architecture.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (Platform.Length != 0) hash ^= Platform.GetHashCode();
      if (PlatformVersion.Length != 0) hash ^= PlatformVersion.GetHashCode();
      if (UaFullVersion.Length != 0) hash ^= UaFullVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsMobile != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsMobile);
      }
      brand_.WriteTo(output, _repeated_brand_codec);
      if (Architecture.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Architecture);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Model);
      }
      if (Platform.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Platform);
      }
      if (PlatformVersion.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PlatformVersion);
      }
      if (UaFullVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(UaFullVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsMobile != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsMobile);
      }
      brand_.WriteTo(ref output, _repeated_brand_codec);
      if (Architecture.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Architecture);
      }
      if (Model.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Model);
      }
      if (Platform.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Platform);
      }
      if (PlatformVersion.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PlatformVersion);
      }
      if (UaFullVersion.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(UaFullVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsMobile != false) {
        size += 1 + 1;
      }
      size += brand_.CalculateSize(_repeated_brand_codec);
      if (Architecture.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Architecture);
      }
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (Platform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (PlatformVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlatformVersion);
      }
      if (UaFullVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UaFullVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientHints other) {
      if (other == null) {
        return;
      }
      if (other.IsMobile != false) {
        IsMobile = other.IsMobile;
      }
      brand_.Add(other.brand_);
      if (other.Architecture.Length != 0) {
        Architecture = other.Architecture;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      if (other.Platform.Length != 0) {
        Platform = other.Platform;
      }
      if (other.PlatformVersion.Length != 0) {
        PlatformVersion = other.PlatformVersion;
      }
      if (other.UaFullVersion.Length != 0) {
        UaFullVersion = other.UaFullVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsMobile = input.ReadBool();
            break;
          }
          case 18: {
            brand_.AddEntriesFrom(input, _repeated_brand_codec);
            break;
          }
          case 26: {
            Architecture = input.ReadString();
            break;
          }
          case 34: {
            Model = input.ReadString();
            break;
          }
          case 42: {
            Platform = input.ReadString();
            break;
          }
          case 50: {
            PlatformVersion = input.ReadString();
            break;
          }
          case 58: {
            UaFullVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsMobile = input.ReadBool();
            break;
          }
          case 18: {
            brand_.AddEntriesFrom(ref input, _repeated_brand_codec);
            break;
          }
          case 26: {
            Architecture = input.ReadString();
            break;
          }
          case 34: {
            Model = input.ReadString();
            break;
          }
          case 42: {
            Platform = input.ReadString();
            break;
          }
          case 50: {
            PlatformVersion = input.ReadString();
            break;
          }
          case 58: {
            UaFullVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientHintBrand : pb::IMessage<ClientHintBrand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientHintBrand> _parser = new pb::MessageParser<ClientHintBrand>(() => new ClientHintBrand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientHintBrand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientHintBrand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientHintBrand(ClientHintBrand other) : this() {
      brand_ = other.brand_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientHintBrand Clone() {
      return new ClientHintBrand(this);
    }

    /// <summary>Field number for the "brand" field.</summary>
    public const int BrandFieldNumber = 1;
    private string brand_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Brand {
      get { return brand_; }
      set {
        brand_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientHintBrand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientHintBrand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Brand != other.Brand) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Brand.Length != 0) hash ^= Brand.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Brand.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Brand);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Brand.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Brand);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Brand.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Brand);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientHintBrand other) {
      if (other == null) {
        return;
      }
      if (other.Brand.Length != 0) {
        Brand = other.Brand;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Brand = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Brand = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Browser : pb::IMessage<Browser>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Browser> _parser = new pb::MessageParser<Browser>(() => new Browser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Browser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Browser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Browser(Browser other) : this() {
      userAgent_ = other.userAgent_;
      viewportSize_ = other.viewportSize_ != null ? other.viewportSize_.Clone() : null;
      clientHints_ = other.clientHints_ != null ? other.clientHints_.Clone() : null;
      referrer_ = other.referrer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Browser Clone() {
      return new Browser(this);
    }

    /// <summary>Field number for the "user_agent" field.</summary>
    public const int UserAgentFieldNumber = 1;
    private string userAgent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserAgent {
      get { return userAgent_; }
      set {
        userAgent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "viewport_size" field.</summary>
    public const int ViewportSizeFieldNumber = 2;
    private global::Promoted.Common.Size viewportSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.Size ViewportSize {
      get { return viewportSize_; }
      set {
        viewportSize_ = value;
      }
    }

    /// <summary>Field number for the "client_hints" field.</summary>
    public const int ClientHintsFieldNumber = 3;
    private global::Promoted.Common.ClientHints clientHints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Promoted.Common.ClientHints ClientHints {
      get { return clientHints_; }
      set {
        clientHints_ = value;
      }
    }

    /// <summary>Field number for the "referrer" field.</summary>
    public const int ReferrerFieldNumber = 4;
    private string referrer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Referrer {
      get { return referrer_; }
      set {
        referrer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Browser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Browser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserAgent != other.UserAgent) return false;
      if (!object.Equals(ViewportSize, other.ViewportSize)) return false;
      if (!object.Equals(ClientHints, other.ClientHints)) return false;
      if (Referrer != other.Referrer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserAgent.Length != 0) hash ^= UserAgent.GetHashCode();
      if (viewportSize_ != null) hash ^= ViewportSize.GetHashCode();
      if (clientHints_ != null) hash ^= ClientHints.GetHashCode();
      if (Referrer.Length != 0) hash ^= Referrer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserAgent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserAgent);
      }
      if (viewportSize_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ViewportSize);
      }
      if (clientHints_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ClientHints);
      }
      if (Referrer.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Referrer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserAgent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserAgent);
      }
      if (viewportSize_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ViewportSize);
      }
      if (clientHints_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ClientHints);
      }
      if (Referrer.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Referrer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserAgent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserAgent);
      }
      if (viewportSize_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ViewportSize);
      }
      if (clientHints_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientHints);
      }
      if (Referrer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Referrer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Browser other) {
      if (other == null) {
        return;
      }
      if (other.UserAgent.Length != 0) {
        UserAgent = other.UserAgent;
      }
      if (other.viewportSize_ != null) {
        if (viewportSize_ == null) {
          ViewportSize = new global::Promoted.Common.Size();
        }
        ViewportSize.MergeFrom(other.ViewportSize);
      }
      if (other.clientHints_ != null) {
        if (clientHints_ == null) {
          ClientHints = new global::Promoted.Common.ClientHints();
        }
        ClientHints.MergeFrom(other.ClientHints);
      }
      if (other.Referrer.Length != 0) {
        Referrer = other.Referrer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserAgent = input.ReadString();
            break;
          }
          case 18: {
            if (viewportSize_ == null) {
              ViewportSize = new global::Promoted.Common.Size();
            }
            input.ReadMessage(ViewportSize);
            break;
          }
          case 26: {
            if (clientHints_ == null) {
              ClientHints = new global::Promoted.Common.ClientHints();
            }
            input.ReadMessage(ClientHints);
            break;
          }
          case 34: {
            Referrer = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserAgent = input.ReadString();
            break;
          }
          case 18: {
            if (viewportSize_ == null) {
              ViewportSize = new global::Promoted.Common.Size();
            }
            input.ReadMessage(ViewportSize);
            break;
          }
          case 26: {
            if (clientHints_ == null) {
              ClientHints = new global::Promoted.Common.ClientHints();
            }
            input.ReadMessage(ClientHints);
            break;
          }
          case 34: {
            Referrer = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Location : pb::IMessage<Location>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location(Location other) : this() {
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      accuracyInMeters_ = other.accuracyInMeters_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 1;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 2;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "accuracy_in_meters" field.</summary>
    public const int AccuracyInMetersFieldNumber = 3;
    private double accuracyInMeters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double AccuracyInMeters {
      get { return accuracyInMeters_; }
      set {
        accuracyInMeters_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AccuracyInMeters, other.AccuracyInMeters)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      if (AccuracyInMeters != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AccuracyInMeters);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Latitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Longitude);
      }
      if (AccuracyInMeters != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(AccuracyInMeters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Latitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Longitude);
      }
      if (AccuracyInMeters != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(AccuracyInMeters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (AccuracyInMeters != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.AccuracyInMeters != 0D) {
        AccuracyInMeters = other.AccuracyInMeters;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Latitude = input.ReadDouble();
            break;
          }
          case 17: {
            Longitude = input.ReadDouble();
            break;
          }
          case 25: {
            AccuracyInMeters = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Latitude = input.ReadDouble();
            break;
          }
          case 17: {
            Longitude = input.ReadDouble();
            break;
          }
          case 25: {
            AccuracyInMeters = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Timing : pb::IMessage<Timing>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Timing> _parser = new pb::MessageParser<Timing>(() => new Timing());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Timing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timing(Timing other) : this() {
      clientLogTimestamp_ = other.clientLogTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timing Clone() {
      return new Timing(this);
    }

    /// <summary>Field number for the "client_log_timestamp" field.</summary>
    public const int ClientLogTimestampFieldNumber = 1;
    private ulong clientLogTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClientLogTimestamp {
      get { return clientLogTimestamp_; }
      set {
        clientLogTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Timing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Timing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientLogTimestamp != other.ClientLogTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientLogTimestamp != 0UL) hash ^= ClientLogTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientLogTimestamp != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ClientLogTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientLogTimestamp != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ClientLogTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientLogTimestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClientLogTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Timing other) {
      if (other == null) {
        return;
      }
      if (other.ClientLogTimestamp != 0UL) {
        ClientLogTimestamp = other.ClientLogTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientLogTimestamp = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientLogTimestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Properties : pb::IMessage<Properties>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Properties> _parser = new pb::MessageParser<Properties>(() => new Properties());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Properties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Promoted.Common.CommonReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Properties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Properties(Properties other) : this() {
      switch (other.StructFieldCase) {
        case StructFieldOneofCase.StructBytes:
          StructBytes = other.StructBytes;
          break;
        case StructFieldOneofCase.Struct:
          Struct = other.Struct.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Properties Clone() {
      return new Properties(this);
    }

    /// <summary>Field number for the "struct_bytes" field.</summary>
    public const int StructBytesFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString StructBytes {
      get { return structFieldCase_ == StructFieldOneofCase.StructBytes ? (pb::ByteString) structField_ : pb::ByteString.Empty; }
      set {
        structField_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        structFieldCase_ = StructFieldOneofCase.StructBytes;
      }
    }

    /// <summary>Field number for the "struct" field.</summary>
    public const int StructFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Struct {
      get { return structFieldCase_ == StructFieldOneofCase.Struct ? (global::Google.Protobuf.WellKnownTypes.Struct) structField_ : null; }
      set {
        structField_ = value;
        structFieldCase_ = value == null ? StructFieldOneofCase.None : StructFieldOneofCase.Struct;
      }
    }

    private object structField_;
    /// <summary>Enum of possible cases for the "struct_field" oneof.</summary>
    public enum StructFieldOneofCase {
      None = 0,
      StructBytes = 1,
      Struct = 2,
    }
    private StructFieldOneofCase structFieldCase_ = StructFieldOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StructFieldOneofCase StructFieldCase {
      get { return structFieldCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStructField() {
      structFieldCase_ = StructFieldOneofCase.None;
      structField_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Properties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Properties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StructBytes != other.StructBytes) return false;
      if (!object.Equals(Struct, other.Struct)) return false;
      if (StructFieldCase != other.StructFieldCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (structFieldCase_ == StructFieldOneofCase.StructBytes) hash ^= StructBytes.GetHashCode();
      if (structFieldCase_ == StructFieldOneofCase.Struct) hash ^= Struct.GetHashCode();
      hash ^= (int) structFieldCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (structFieldCase_ == StructFieldOneofCase.StructBytes) {
        output.WriteRawTag(10);
        output.WriteBytes(StructBytes);
      }
      if (structFieldCase_ == StructFieldOneofCase.Struct) {
        output.WriteRawTag(18);
        output.WriteMessage(Struct);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (structFieldCase_ == StructFieldOneofCase.StructBytes) {
        output.WriteRawTag(10);
        output.WriteBytes(StructBytes);
      }
      if (structFieldCase_ == StructFieldOneofCase.Struct) {
        output.WriteRawTag(18);
        output.WriteMessage(Struct);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (structFieldCase_ == StructFieldOneofCase.StructBytes) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StructBytes);
      }
      if (structFieldCase_ == StructFieldOneofCase.Struct) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Struct);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Properties other) {
      if (other == null) {
        return;
      }
      switch (other.StructFieldCase) {
        case StructFieldOneofCase.StructBytes:
          StructBytes = other.StructBytes;
          break;
        case StructFieldOneofCase.Struct:
          if (Struct == null) {
            Struct = new global::Google.Protobuf.WellKnownTypes.Struct();
          }
          Struct.MergeFrom(other.Struct);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StructBytes = input.ReadBytes();
            break;
          }
          case 18: {
            global::Google.Protobuf.WellKnownTypes.Struct subBuilder = new global::Google.Protobuf.WellKnownTypes.Struct();
            if (structFieldCase_ == StructFieldOneofCase.Struct) {
              subBuilder.MergeFrom(Struct);
            }
            input.ReadMessage(subBuilder);
            Struct = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StructBytes = input.ReadBytes();
            break;
          }
          case 18: {
            global::Google.Protobuf.WellKnownTypes.Struct subBuilder = new global::Google.Protobuf.WellKnownTypes.Struct();
            if (structFieldCase_ == StructFieldOneofCase.Struct) {
              subBuilder.MergeFrom(Struct);
            }
            input.ReadMessage(subBuilder);
            Struct = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
